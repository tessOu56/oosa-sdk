{
  "openapi": "3.0.3",
  "info": {
    "title": "OOSA",
    "description": "",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "noRedirect"
    },
    {
      "name": "guest"
    },
    {
      "name": "OOSA_USER_SERVICE"
    },
    {
      "name": "Authentication"
    },
    {
      "name": "T5 個人 My"
    },
    {
      "name": "5.2.1.1.2"
    },
    {
      "name": "5.2.1.1.2a"
    },
    {
      "name": "5.2.1.5"
    },
    {
      "name": "5.2.1.5a"
    },
    {
      "name": "5.2.1.5b"
    },
    {
      "name": "5.2.1.5c"
    },
    {
      "name": "5.2.1.5d"
    },
    {
      "name": "5.2.1.5e"
    },
    {
      "name": "_註冊與登入 Register and Sign in"
    },
    {
      "name": "_S1.2.1a"
    },
    {
      "name": "_S1.1.3"
    },
    {
      "name": "5.2.1.6"
    },
    {
      "name": "5.2.1.6a"
    },
    {
      "name": "_S1.1.1"
    },
    {
      "name": "_S1.2"
    },
    {
      "name": "_S1.1.2"
    },
    {
      "name": "_S1.2.1"
    },
    {
      "name": "Forget Password"
    },
    {
      "name": "5.2.1.5.1"
    },
    {
      "name": "_S1.1"
    },
    {
      "name": "5.0"
    },
    {
      "name": "T4 世界 World"
    },
    {
      "name": "4.0"
    },
    {
      "name": "5.2.1.5.1.1"
    },
    {
      "name": "5.2.1.5.1.1a"
    },
    {
      "name": "5.2.1.5.1.1b"
    },
    {
      "name": "5.2.1.5.1.1c"
    },
    {
      "name": "5.2.1.5.1.1d"
    },
    {
      "name": "5.2.1.5.1.1e"
    },
    {
      "name": "5.2.1.1.1"
    },
    {
      "name": "5.2.1.1.1a"
    },
    {
      "name": "OOSA_REWILD_SERVICE"
    },
    {
      "name": "User Event"
    },
    {
      "name": "_O1"
    },
    {
      "name": "_O1c"
    },
    {
      "name": "_O1.1"
    },
    {
      "name": "_O1.1a"
    },
    {
      "name": "_O1.1b"
    },
    {
      "name": "3.3.2.1"
    },
    {
      "name": "3.3.2.1a"
    },
    {
      "name": "3.3.2.1b"
    },
    {
      "name": "3.3.2.1c"
    },
    {
      "name": "T3 野放成就 Achievement"
    },
    {
      "name": "_E1.2.1.1.1"
    },
    {
      "name": "_E1.2.1.1.1a"
    },
    {
      "name": "_E1.2.1.1.1b"
    },
    {
      "name": "_E1.2.1.1.1c"
    },
    {
      "name": "3.1.1.4"
    },
    {
      "name": "3.1.1.4a"
    },
    {
      "name": "User Badges"
    },
    {
      "name": "User - Friends"
    },
    {
      "name": "_E 活動 Event"
    },
    {
      "name": "3.2.1"
    },
    {
      "name": "3.2.1a"
    },
    {
      "name": "4.2f"
    },
    {
      "name": "4.2g"
    },
    {
      "name": "4.2h"
    },
    {
      "name": "5.5"
    },
    {
      "name": "4.2"
    },
    {
      "name": "4.2a"
    },
    {
      "name": "4.2b"
    },
    {
      "name": "4.2c"
    },
    {
      "name": "4.2d"
    },
    {
      "name": "4.2e"
    },
    {
      "name": "_O"
    },
    {
      "name": "_O1b"
    },
    {
      "name": "_O1d"
    },
    {
      "name": "_O1e"
    },
    {
      "name": "User Notifications"
    },
    {
      "name": "5.1"
    },
    {
      "name": "5.4"
    },
    {
      "name": "Contact Us"
    },
    {
      "name": "5.2.5"
    },
    {
      "name": "5.2.5a"
    },
    {
      "name": "5.2.5b"
    },
    {
      "name": "5.2.5.1"
    },
    {
      "name": "5.2.2"
    },
    {
      "name": "5.2.2a"
    },
    {
      "name": "5.2.1.2"
    },
    {
      "name": "5.2.1.2a"
    },
    {
      "name": "5.2.1.2b"
    },
    {
      "name": "5.2.1.2c"
    },
    {
      "name": "5.2.1.2d"
    },
    {
      "name": "5.2.1.2e"
    },
    {
      "name": "5.2.1.3"
    },
    {
      "name": "5.2.1.3a"
    },
    {
      "name": "5.2.1.3b"
    },
    {
      "name": "5.2.1.3c"
    },
    {
      "name": "5.2.1.3d"
    },
    {
      "name": "5.2.1.3e"
    },
    {
      "name": "5.2.1.3f"
    },
    {
      "name": "5.2.1.3g"
    },
    {
      "name": "5.0a"
    },
    {
      "name": "User Following"
    },
    {
      "name": "4.3"
    },
    {
      "name": "Rewilding Register"
    },
    {
      "name": "T1 探索 Discover"
    },
    {
      "name": "_R 野放點細節 R/S Details"
    },
    {
      "name": "1.1"
    },
    {
      "name": "_R1"
    },
    {
      "name": "✅ Rewilding"
    },
    {
      "name": "1.4.1"
    },
    {
      "name": "1.4.1a"
    },
    {
      "name": "1.4.1b"
    },
    {
      "name": "1.4.1c"
    },
    {
      "name": "1.4.1d"
    },
    {
      "name": "1.4.1e"
    },
    {
      "name": "1.4.1f"
    },
    {
      "name": "1.4.1g"
    },
    {
      "name": "1.4.1i"
    },
    {
      "name": "1.4.1j"
    },
    {
      "name": "1.4.1.1"
    },
    {
      "name": "1.4.1.1a"
    },
    {
      "name": "1.4.1.2"
    },
    {
      "name": "1.4.1.2a"
    },
    {
      "name": "1.4.1.3"
    },
    {
      "name": "Rewilding"
    },
    {
      "name": "T2 揪團基地 Basecamp"
    },
    {
      "name": "1.5.1"
    },
    {
      "name": "2.1c.2.2"
    },
    {
      "name": "2.1c.2.2a"
    },
    {
      "name": "3.0"
    },
    {
      "name": "3.0a"
    },
    {
      "name": "3.0b"
    },
    {
      "name": "1.5.1b"
    },
    {
      "name": "Pocket List"
    },
    {
      "name": "1.5.2a"
    },
    {
      "name": "1.5.2.1"
    },
    {
      "name": "✅ Pocket List"
    },
    {
      "name": "1.5.2.2"
    },
    {
      "name": "1.5.2.2a"
    },
    {
      "name": "1.5.2.2b"
    },
    {
      "name": "1.5.2.2c"
    },
    {
      "name": "1.5.2.2.1"
    },
    {
      "name": "1.5.2.2.2"
    },
    {
      "name": "1.5.2.2.2a"
    },
    {
      "name": "_R1d"
    },
    {
      "name": "_R1e"
    },
    {
      "name": "1.5.2"
    },
    {
      "name": "_A 新增清單 Add a New List"
    },
    {
      "name": "_A1"
    },
    {
      "name": "_A1a"
    },
    {
      "name": "_A1b"
    },
    {
      "name": "_A1c"
    },
    {
      "name": "1.5"
    },
    {
      "name": "2.1c.2"
    },
    {
      "name": "2.1c.1.2"
    },
    {
      "name": "2.1c.1.2a"
    },
    {
      "name": "2.1c.1.2b"
    },
    {
      "name": "1.4.1h"
    },
    {
      "name": "✅ Event"
    },
    {
      "name": "Event"
    },
    {
      "name": "_E1"
    },
    {
      "name": "_R1g"
    },
    {
      "name": "2.1"
    },
    {
      "name": "2.1a"
    },
    {
      "name": "2.1b"
    },
    {
      "name": "2.1c"
    },
    {
      "name": "2.1d"
    },
    {
      "name": "2.1e"
    },
    {
      "name": "2.1.1"
    },
    {
      "name": "2.1.1a"
    },
    {
      "name": "2.1.1b"
    },
    {
      "name": "2.1.1.1c"
    },
    {
      "name": "2.1.1.1a"
    },
    {
      "name": "2.1.1.1b"
    },
    {
      "name": "2.1.1.1d"
    },
    {
      "name": "2.1.1.1e"
    },
    {
      "name": "2.1.1.1f"
    },
    {
      "name": "3.3.2"
    },
    {
      "name": "3.3.2a"
    },
    {
      "name": "_E1.1"
    },
    {
      "name": "1.0"
    },
    {
      "name": "2.0"
    },
    {
      "name": "2.0a"
    },
    {
      "name": "2.2"
    },
    {
      "name": "4.1"
    },
    {
      "name": "✅ Event Invitation"
    },
    {
      "name": "5.1.1"
    },
    {
      "name": "5.1.1a"
    },
    {
      "name": "✅ Event Invitation - Detail"
    },
    {
      "name": "_E1.2"
    },
    {
      "name": "_E1.2.1"
    },
    {
      "name": "_E1.2.1a"
    },
    {
      "name": "_E1.2.1.1"
    },
    {
      "name": "_E1.2.1b"
    },
    {
      "name": "_E1.8"
    },
    {
      "name": "_E1.8a"
    },
    {
      "name": "_E1.8.1"
    },
    {
      "name": "5.3.1"
    },
    {
      "name": "5.3.1a"
    },
    {
      "name": "5.3"
    },
    {
      "name": "✅ Event Accounting"
    },
    {
      "name": "_E1.7"
    },
    {
      "name": "✅Event Announcement"
    },
    {
      "name": "✅ Event Message Board"
    },
    {
      "name": "_E1.6"
    },
    {
      "name": "✅ Event Participants"
    },
    {
      "name": "3.1.1.3"
    },
    {
      "name": "_E1.2.1.1.1d"
    },
    {
      "name": "_E1.2.1.1.1.1"
    },
    {
      "name": "_O1.2"
    },
    {
      "name": "3.4b"
    },
    {
      "name": "3.4c"
    },
    {
      "name": "✅ Event Reference Links"
    },
    {
      "name": "Event Reference Links"
    },
    {
      "name": "_E1.4"
    },
    {
      "name": "3.4"
    },
    {
      "name": "3.4a"
    },
    {
      "name": "_O1.2a"
    },
    {
      "name": "_O1.1.1"
    },
    {
      "name": "3.0c"
    },
    {
      "name": "3.0d"
    },
    {
      "name": "3.0e"
    },
    {
      "name": "✅ Event Schedule"
    },
    {
      "name": "_E1.5"
    },
    {
      "name": "✅ Event Collaborate"
    },
    {
      "name": "3.1.1"
    },
    {
      "name": "3.1.1a"
    },
    {
      "name": "3.1.1b"
    },
    {
      "name": "3.1.1c"
    },
    {
      "name": "3.1.1.1"
    },
    {
      "name": "3.3.1"
    },
    {
      "name": "3.3.1a"
    },
    {
      "name": "3.3.1b"
    },
    {
      "name": "3.3.1c"
    },
    {
      "name": "3.3.1d"
    },
    {
      "name": "3.3.1e"
    },
    {
      "name": "3.3.1f"
    },
    {
      "name": "3.3.1g"
    },
    {
      "name": "3.3.1.1a"
    },
    {
      "name": "3.3.1.1b"
    },
    {
      "name": "3.3.1.1.1"
    },
    {
      "name": "3.3.1.1.1a"
    },
    {
      "name": "3.3.1.1.1b"
    },
    {
      "name": "3.1"
    },
    {
      "name": "3.2a"
    },
    {
      "name": "3.1.1e"
    },
    {
      "name": "3.1.1f"
    },
    {
      "name": "3.1.1g"
    },
    {
      "name": "3.3.1.1.1.1d"
    },
    {
      "name": "3.3.1.1.1.1e"
    },
    {
      "name": "Rewilding Search"
    },
    {
      "name": "2.1c.1"
    },
    {
      "name": "2.1c.1.1"
    },
    {
      "name": "2.1c.1.1a"
    },
    {
      "name": "2.1c.1.1b"
    },
    {
      "name": "1.2"
    },
    {
      "name": "1.1a"
    },
    {
      "name": "1.3"
    },
    {
      "name": "1.2a"
    },
    {
      "name": "1.2b"
    },
    {
      "name": "frontend"
    }
  ],
  "paths": {
    "/sso/register": {
      "get": {
        "summary": "開始SSO註冊",
        "deprecated": false,
        "description": "",
        "operationId": "startSsoRegister",
        "tags": ["noRedirect", "guest"],
        "parameters": [
          {
            "name": "return_to",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "303": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/sso/register/finish": {
      "get": {
        "summary": "SSO註冊使用者完成",
        "deprecated": false,
        "description": "",
        "operationId": "finishSsoRegister",
        "tags": ["noRedirect"],
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Account",
            "in": "header",
            "description": "",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Id",
            "in": "header",
            "description": "",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Email",
            "in": "header",
            "description": "",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Name",
            "in": "header",
            "description": "",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Language",
            "in": "header",
            "description": "",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "303": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/apple": {
      "post": {
        "summary": "Auth Apple",
        "deprecated": true,
        "description": "Use this endpoint to login/register using Apple",
        "operationId": "authByApple",
        "tags": ["OOSA_USER_SERVICE", "Authentication"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLogin"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/auth/avatar": {
      "post": {
        "summary": "Update User Avatar",
        "deprecated": true,
        "description": "Update user avatar",
        "operationId": "updateAvatarUseDefault",
        "tags": [
          "OOSA_USER_SERVICE",
          "Authentication",
          "T5 個人 My",
          "5.2.1.1.2",
          "5.2.1.1.2a"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAuthUpdateAvatar"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/change-password": {
      "put": {
        "summary": "Update Password",
        "deprecated": true,
        "description": "Update the authenticated user password",
        "operationId": "updatePassword",
        "tags": [
          "OOSA_USER_SERVICE",
          "Authentication",
          "T5 個人 My",
          "5.2.1.5",
          "5.2.1.5a",
          "5.2.1.5b",
          "5.2.1.5c",
          "5.2.1.5d",
          "5.2.1.5e"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUsersUpdatePassword"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/auth/email": {
      "post": {
        "summary": "Auth Email",
        "deprecated": false,
        "description": "Use this endpoint to login using email",
        "operationId": "authByEmail",
        "tags": [
          "OOSA_USER_SERVICE",
          "Authentication",
          "_註冊與登入 Register and Sign in",
          "_S1.2.1a"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUserLoginEmail"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLogin"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "title": "",
                      "description": "message"
                    }
                  },
                  "required": ["message"]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/auth/facebook": {
      "post": {
        "summary": "Auth Facebook",
        "deprecated": true,
        "description": "Use this endpoint to login/register using Facebook",
        "operationId": "authByFacebook",
        "tags": [
          "OOSA_USER_SERVICE",
          "Authentication",
          "_S1.1.3",
          "_S1.2.1a",
          "5.2.1.6",
          "5.2.1.6a"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLogin"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/auth/google": {
      "post": {
        "summary": "Auth Google",
        "deprecated": true,
        "description": "Use this endpoint to login/register using google",
        "operationId": "authByGoogle",
        "tags": [
          "Authentication",
          "_註冊與登入 Register and Sign in",
          "_S1.1.1",
          "OOSA_USER_SERVICE",
          "_S1.2"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestGoogleAuth"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLogin"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/auth/line": {
      "get": {
        "summary": "Auth Line",
        "deprecated": true,
        "description": "Use this endpoint to login/register using Line",
        "operationId": "getAuthByLine",
        "tags": [
          "OOSA_USER_SERVICE",
          "Authentication",
          "_註冊與登入 Register and Sign in",
          "_S1.1.2",
          "_S1.2.1"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Code passed to line",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "State passed to line",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLogin"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/forget-password": {
      "post": {
        "summary": "Forget Password",
        "deprecated": true,
        "description": "Forget Password Request",
        "operationId": "forgetPassword",
        "tags": [
          "OOSA_USER_SERVICE",
          "Forget Password",
          "T5 個人 My",
          "5.2.1.5.1"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestForgetPassword"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/register": {
      "post": {
        "summary": "Email - Register",
        "deprecated": true,
        "description": "Use this endpoint to register using email",
        "operationId": "emailRegister",
        "tags": [
          "OOSA_USER_SERVICE",
          "Authentication",
          "_註冊與登入 Register and Sign in",
          "_S1.1"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUserRegisterEmail"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLogin"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/auth": {
      "get": {
        "summary": "Read Authentication",
        "deprecated": false,
        "description": "Retrieve the authenticated user detail. <br/>1. Google<br/>2. Line<br/>3. Email<br/>4. Facebook",
        "operationId": "getAuthInfo",
        "tags": ["OOSA_USER_SERVICE", "Authentication", "T5 個人 My", "5.0"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralError"
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update User",
        "deprecated": false,
        "description": "Update the authenticated user detail",
        "operationId": "updateUser",
        "tags": [
          "OOSA_USER_SERVICE",
          "Authentication",
          "T5 個人 My",
          "5.2.1.2",
          "5.2.1.2a",
          "5.2.1.2b",
          "5.2.1.2c",
          "5.2.1.2d",
          "5.2.1.2e",
          "5.2.1.3",
          "5.2.1.3a",
          "5.2.1.3b",
          "5.2.1.3c",
          "5.2.1.3d",
          "5.2.1.3e",
          "5.2.1.3f",
          "5.2.1.3g"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUsersUpdate"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/oosa-daily": {
      "post": {
        "summary": "OOSA User Daily Video Status",
        "deprecated": false,
        "description": "此 API 的功能是檢查使用者是否已觀看 OOSA 的每日影片，並回傳結果。  \nThis API checks whether a user has watched OOSA's daily video and returns the result.",
        "operationId": "CheckUserDailyVideo",
        "tags": ["OOSA_USER_SERVICE", "T4 世界 World", "4.0"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralError"
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/forget-password/{token}": {
      "post": {
        "summary": "Forget Password - Updated",
        "deprecated": true,
        "description": "Update password from forget password",
        "operationId": "forgetPasswordUpdated",
        "tags": [
          "OOSA_USER_SERVICE",
          "Forget Password",
          "T5 個人 My",
          "5.2.1.5.1.1",
          "5.2.1.5.1.1a",
          "5.2.1.5.1.1b",
          "5.2.1.5.1.1c",
          "5.2.1.5.1.1d",
          "5.2.1.5.1.1e"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token from password reset",
            "required": true,
            "example": 0,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestForgetPasswordReset"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/auth/profile-picture": {
      "post": {
        "summary": "Update User Profile Picture",
        "deprecated": true,
        "description": "Update profile picture",
        "operationId": "updateAvatarUsePicture",
        "tags": [
          "OOSA_USER_SERVICE",
          "Authentication",
          "T5 個人 My",
          "5.2.1.1.1",
          "5.2.1.1.1a"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "users_avatar": {
                    "type": "string",
                    "format": "binary",
                    "example": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user/{userId}": {
      "get": {
        "summary": "Read User",
        "deprecated": false,
        "description": "API 回傳指定會員的公開資料",
        "operationId": "getUser",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "User Event",
          "_O1",
          "_O1c",
          "_O1.1",
          "_O1.1a",
          "_O1.1b",
          "guest"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOther"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "summary": "Retrieve Users",
        "deprecated": false,
        "description": "get all users",
        "operationId": "getUsers",
        "tags": [
          "3.3.2.1",
          "3.3.2.1a",
          "3.3.2.1b",
          "3.3.2.1c",
          "T3 野放成就 Achievement",
          "_E1.2.1.1.1",
          "_E1.2.1.1.1a",
          "_E1.2.1.1.1b",
          "_E1.2.1.1.1c",
          "3.1.1.4",
          "3.1.1.4a"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "用戶名稱",
            "required": false,
            "schema": {
              "type": "string",
              "format": "char"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "用戶 ID",
            "required": false,
            "schema": {
              "type": "string",
              "format": "char"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAgg"
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user/{userId}/badges": {
      "get": {
        "summary": "User Badges",
        "deprecated": false,
        "description": "預期會回傳指定會員的所有公開徽章",
        "operationId": "getUserBadges",
        "tags": ["OOSA_REWILD_SERVICE", "User Event", "guest"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/badges": {
      "get": {
        "summary": "Retrieve Badge",
        "deprecated": false,
        "description": "Retrieve badges earned by user",
        "operationId": "getBadge",
        "tags": ["OOSA_USER_SERVICE", "User Badges", "T5 個人 My"],
        "parameters": [
          {
            "name": "single",
            "in": "query",
            "description": "Single acquire",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBadges"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/badges/{userBadgeId}": {
      "get": {
        "summary": "Retrieve Badge",
        "deprecated": true,
        "description": "",
        "operationId": "getBadgeById",
        "tags": [],
        "parameters": [
          {
            "name": "userBadgeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_badges_detail": {
                      "$ref": "#/components/schemas/UserBadgesDetail"
                    },
                    "user_badges_badge": {
                      "type": "string",
                      "default": "6695534c1da4d6fee70fc3e4"
                    },
                    "user_badges_id": {
                      "type": "string",
                      "default": "669556094dc5739b71e173fe"
                    },
                    "user_badges_user": {
                      "type": "string",
                      "default": "65f6861102948c60bcb3cb1d"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user/{userId}/friends": {
      "get": {
        "summary": "Retrieve Other User Friends",
        "deprecated": false,
        "description": "Retrieve an authenticated user events",
        "operationId": "getOtherUserFriends",
        "tags": ["OOSA_REWILD_SERVICE", "User Event", "_O1"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "user_friends_id": {
                        "type": "string"
                      },
                      "user_friends_status": {
                        "type": "integer"
                      },
                      "user_friends_user_1": {
                        "type": "string"
                      },
                      "user_friends_user_2": {
                        "type": "string"
                      },
                      "user_friends_created_at": {
                        "type": "string"
                      },
                      "user_friends_is_official": {
                        "type": "null"
                      },
                      "rewilding_activity_status": {
                        "type": "integer"
                      },
                      "user_friends_detail": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string"
                          },
                          "user_name": {
                            "type": "string"
                          },
                          "user_username": {
                            "type": "string"
                          },
                          "user_avatar": {
                            "type": "string"
                          },
                          "user_breathing_status": {
                            "type": "integer"
                          },
                          "user_take_me_status": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "user_id",
                          "user_name",
                          "user_username",
                          "user_avatar",
                          "user_breathing_status",
                          "user_take_me_status"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user/friends": {
      "get": {
        "summary": "Retrieve User Friends",
        "deprecated": false,
        "description": "Get someone's friends\nUse feild_username and feild_name to select specific friends; if no parameters are provided, all friends will be returned.\nSort by breathing status first, then by name.\n找到某個會員用戶的所有好友，並且可以用 name 和 username 篩選其好友列表",
        "operationId": "getUserFriends",
        "tags": [
          "OOSA_USER_SERVICE",
          "User - Friends",
          "_E 活動 Event",
          "T3 野放成就 Achievement",
          "T5 個人 My",
          "_E1.2.1.1.1",
          "_E1.2.1.1.1a",
          "_E1.2.1.1.1b",
          "_E1.2.1.1.1c",
          "3.2.1",
          "3.2.1a",
          "4.2f",
          "4.2g",
          "4.2h",
          "5.5"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "name",
            "required": false,
            "schema": {
              "type": "string",
              "format": "char"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "user_friends_id": {
                        "type": "string"
                      },
                      "user_friends_status": {
                        "type": "integer"
                      },
                      "user_friends_user_1": {
                        "type": "string"
                      },
                      "user_friends_user_2": {
                        "type": "string"
                      },
                      "user_friends_created_at": {
                        "type": "string"
                      },
                      "user_friends_is_official": {
                        "type": "null"
                      },
                      "rewilding_activity_status": {
                        "type": "integer"
                      },
                      "user_friends_detail": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string"
                          },
                          "user_name": {
                            "type": "string"
                          },
                          "user_username": {
                            "type": "string"
                          },
                          "user_avatar": {
                            "type": "string"
                          },
                          "user_breathing_status": {
                            "type": "integer"
                          },
                          "user_take_me_status": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "user_id",
                          "user_name",
                          "user_username",
                          "user_avatar",
                          "user_breathing_status",
                          "user_take_me_status"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "Add User Friend",
        "deprecated": false,
        "description": "user_friend_status should be set to 0 upon successful API completion.\nfriendship limit is 5000.",
        "operationId": "createUserFriendById",
        "tags": ["User - Friends", "T4 世界 World", "_O", "4.2e", "4.2d"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUserFriend"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_friends_id": {
                      "type": "string"
                    },
                    "user_friends_status": {
                      "type": "integer"
                    },
                    "user_friends_user_1": {
                      "type": "string"
                    },
                    "user_friends_user_2": {
                      "type": "string"
                    },
                    "user_friends_created_at": {
                      "type": "string"
                    },
                    "user_friends_is_official": {
                      "type": "null"
                    },
                    "rewilding_activity_status": {
                      "type": "integer"
                    },
                    "user_friends_detail": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "string"
                        },
                        "user_name": {
                          "type": "string"
                        },
                        "user_username": {
                          "type": "string"
                        },
                        "user_avatar": {
                          "type": "string"
                        },
                        "user_breathing_status": {
                          "type": "integer"
                        },
                        "user_take_me_status": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "user_id",
                        "user_name",
                        "user_username",
                        "user_avatar",
                        "user_breathing_status",
                        "user_take_me_status"
                      ]
                    }
                  },
                  "required": [
                    "user_friends_id",
                    "user_friends_status",
                    "user_friends_user_1",
                    "user_friends_user_2",
                    "user_friends_created_at",
                    "user_friends_is_official",
                    "rewilding_activity_status",
                    "user_friends_detail"
                  ]
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/friends": {
      "get": {
        "summary": "My Friends",
        "deprecated": true,
        "description": "Get user's friends\nSort by breathing status first, then by name.",
        "operationId": "getUserFriends",
        "tags": ["OOSA_USER_SERVICE", "User - Friends"],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "name",
            "required": false,
            "schema": {
              "type": "string",
              "format": "char"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/friends/recommended": {
      "get": {
        "summary": "Retrieve Recommended Friends For User",
        "deprecated": false,
        "description": "sort: 1 > 2\n1. Users who have previously attended an event together but have not yet become friends ( user_friends_status = 0 )\n2. Partners who have been invited but have not yet responded  ( user_friends_status = 1 )\nIf no users meet the above conditions, do not display",
        "operationId": "getRecommendedFriendsForUser",
        "tags": [
          "OOSA_USER_SERVICE",
          "User - Friends",
          "T4 世界 World",
          "4.2",
          "4.2a",
          "4.2b",
          "4.2c",
          "4.2d",
          "4.2e"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "user_friends_id": {
                        "type": "string"
                      },
                      "user_friends_status": {
                        "type": "integer"
                      },
                      "user_friends_user_1": {
                        "type": "string"
                      },
                      "user_friends_user_2": {
                        "type": "string"
                      },
                      "user_friends_created_at": {
                        "type": "string"
                      },
                      "user_friends_is_official": {
                        "type": "string"
                      },
                      "rewilding_activity_status": {
                        "type": "integer"
                      },
                      "user_friends_detail": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string"
                          },
                          "user_name": {
                            "type": "string"
                          },
                          "user_username": {
                            "type": "string"
                          },
                          "user_avatar": {
                            "type": "string"
                          },
                          "user_breathing_status": {
                            "type": "integer"
                          },
                          "user_take_me_status": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "user_id",
                          "user_name",
                          "user_username",
                          "user_avatar",
                          "user_breathing_status",
                          "user_take_me_status"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user/friends/{userFriendsId}": {
      "delete": {
        "summary": "Cancel User Friend",
        "deprecated": false,
        "description": "user_friend_status should be set to 2 upon successful API completion.",
        "operationId": "deleteUserFriendById",
        "tags": ["_O", "User - Friends", "_O1b", "_O1d", "_O1e"],
        "parameters": [
          {
            "name": "userFriendsId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "Notification_Id",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "Agree User Friend ",
        "deprecated": false,
        "description": "user_friend_status should be set to 1 upon successful API completion.",
        "operationId": "agreeUserFriendById",
        "tags": ["User Notifications", "_O", "User - Friends"],
        "parameters": [
          {
            "name": "userFriendsId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "Notification_Id",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/notifications": {
      "get": {
        "summary": "Retrieve User Notifications",
        "deprecated": false,
        "description": "Retrieve notifications",
        "operationId": "getUserNotifications",
        "tags": [
          "OOSA_USER_SERVICE",
          "User Notifications",
          "T5 個人 My",
          "5.1"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserNotifications"
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/notifications/{notificationId}": {
      "put": {
        "summary": "Read User Notification",
        "deprecated": true,
        "description": "",
        "operationId": "isReadNotificationById",
        "tags": [],
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/statistics": {
      "get": {
        "summary": "Statistics",
        "deprecated": false,
        "description": "Retrieve an authenticated user events",
        "operationId": "getUserStat",
        "tags": ["OOSA_REWILD_SERVICE", "User Event", "5.4", "T5 個人 My"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "oosa_star_current_user": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "event_period": {
                            "type": "object",
                            "properties": {
                              "month": {
                                "type": "integer"
                              },
                              "year": {
                                "type": "integer"
                              }
                            },
                            "required": ["month", "year"]
                          },
                          "event_count": {
                            "type": "integer"
                          }
                        },
                        "required": ["event_period", "event_count"]
                      }
                    },
                    "oosa_star_per_user": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_period": {
                            "type": "object",
                            "properties": {
                              "month": {
                                "type": "integer"
                              },
                              "year": {
                                "type": "integer"
                              }
                            },
                            "required": ["month", "year"]
                          },
                          "user_count": {
                            "type": "integer"
                          },
                          "total_star": {
                            "type": "integer"
                          },
                          "average_star": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "user_period",
                          "user_count",
                          "total_star",
                          "average_star"
                        ]
                      }
                    },
                    "stars_last_achieved_month": {
                      "type": "integer"
                    },
                    "stars_months_last_achieved": {
                      "type": "integer"
                    },
                    "user_star_by_type": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "event_type": {
                            "type": "string"
                          },
                          "event_type_name": {
                            "type": "string"
                          },
                          "event_count": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "event_type",
                          "event_type_name",
                          "event_count"
                        ]
                      }
                    },
                    "user_star_per_year": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "oosa_star_current_user",
                    "oosa_star_per_user",
                    "stars_last_achieved_month",
                    "stars_months_last_achieved",
                    "user_star_by_type",
                    "user_star_per_year"
                  ]
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/statistics": {
      "get": {
        "summary": "Auth Statistics",
        "deprecated": true,
        "description": "get my statistics",
        "operationId": "getUserStatistics",
        "tags": ["OOSA_REWILD_SERVICE", "User Event", "5.4"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/contact-us": {
      "post": {
        "summary": "Create Contact Us",
        "deprecated": false,
        "description": "Create contact us record",
        "operationId": "createContactUs",
        "tags": [
          "OOSA_USER_SERVICE",
          "Contact Us",
          "T5 個人 My",
          "5.2.5",
          "5.2.5a",
          "5.2.5b",
          "5.2.5.1"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestContactUs"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/auth/setting": {
      "put": {
        "summary": "Update User Setting",
        "deprecated": false,
        "description": "Update settings<br/>1 - True (On)<br />0 - False (Off)",
        "operationId": "updateUserSet",
        "tags": [
          "OOSA_USER_SERVICE",
          "Authentication",
          "T5 個人 My",
          "5.2.2",
          "5.2.2a"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAuthUpdateSetting"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/take-me": {
      "put": {
        "summary": "Update User Take Me",
        "deprecated": false,
        "description": "Update the authenticated user detail",
        "operationId": "updateUser",
        "tags": [
          "OOSA_USER_SERVICE",
          "Authentication",
          "T5 個人 My",
          "5.0",
          "5.0a"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "users_take_me_status": {
                    "type": "integer",
                    "description": "1: Take Me, 0: Don't take me"
                  }
                },
                "required": ["users_take_me_status"]
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user-following/{userFollowingId}": {
      "delete": {
        "summary": "Delete User Following",
        "deprecated": true,
        "description": "Delete user following ",
        "operationId": "deleteUserFollowing",
        "tags": ["OOSA_USER_SERVICE", "User Following"],
        "parameters": [
          {
            "name": "userFollowingId",
            "in": "path",
            "description": "String ID of the user following",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "get": {
        "summary": "Read User Following",
        "deprecated": true,
        "description": "Get user following",
        "operationId": "getUserFollowingId",
        "tags": ["OOSA_USER_SERVICE", "User Following"],
        "parameters": [
          {
            "name": "userFollowingId",
            "in": "path",
            "description": "String ID of the user following",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFollowings"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user-following": {
      "post": {
        "summary": "Create User Following",
        "deprecated": true,
        "description": "Create user following request testt",
        "operationId": "createUserFollowing",
        "tags": ["OOSA_USER_SERVICE", "User Following", "T4 世界 World"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUserFollowing"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "Retrieve User Following",
        "deprecated": true,
        "description": "Get other user following friends",
        "operationId": "getUserFollowing",
        "tags": ["OOSA_USER_SERVICE", "User Following", "T4 世界 World"],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "current user's id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserFollowings"
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/world/statistics": {
      "get": {
        "summary": "Statistics",
        "deprecated": false,
        "description": "Retrieve World Statistics",
        "operationId": "getUserWorldStat",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "User Event",
          "T4 世界 World",
          "4.0",
          "guest"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "world_rewilding_country": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "events_country_code": {
                            "type": "string"
                          },
                          "events_country_count": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "events_country_code",
                          "events_country_count"
                        ]
                      }
                    },
                    "world_rewilding_members": {
                      "type": "integer"
                    },
                    "world_rewilding_polaroid": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "world_rewilding_country",
                    "world_rewilding_members",
                    "world_rewilding_polaroid"
                  ]
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/world/ranking-feelings": {
      "get": {
        "summary": "Ranking Feelings",
        "deprecated": false,
        "description": "Retrieve an authenticated user events",
        "operationId": "getRankFeel",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "User Event",
          "T4 世界 World",
          "4.3",
          "guest"
        ],
        "parameters": [
          {
            "name": "feelings",
            "in": "query",
            "description": "\"EXPERIENCE_1\", \"EXPERIENCE_2\", \"EXPERIENCE_3\", \"EXPERIENCE_4\", \"EXPERIENCE_5\", \"EXPERIENCE_6\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RankingRewilding"
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/world/ranking-rewilding": {
      "get": {
        "summary": "Ranking Rewilding",
        "deprecated": false,
        "description": "Retrieve an authenticated user events",
        "operationId": "getRankRewild",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "User Event",
          "T4 世界 World",
          "4.3",
          "guest"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RankingRewilding"
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/rewilding/{rewildingId}": {
      "get": {
        "summary": "Read a rewilding spot",
        "deprecated": false,
        "description": "Read a rewilding spot in database",
        "operationId": "getRewild",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "Rewilding Register",
          "T1 探索 Discover",
          "_R 野放點細節 R/S Details",
          "1.1",
          "_R1",
          "guest"
        ],
        "parameters": [
          {
            "name": "rewildingId",
            "in": "path",
            "description": "String ID of rewilding",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rewilding_id": {
                      "type": "string"
                    },
                    "rewilding_area": {
                      "type": "string"
                    },
                    "rewilding_location": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "rewilding_country_code": {
                      "type": "string"
                    },
                    "rewilding_achievement_type": {
                      "type": "string"
                    },
                    "rewilding_achievement_type_id": {
                      "type": "string"
                    },
                    "rewilding_name": {
                      "type": "string"
                    },
                    "rewilding_rating": {
                      "type": "integer"
                    },
                    "rewilding_lat": {
                      "type": "number"
                    },
                    "rewilding_lng": {
                      "type": "number"
                    },
                    "rewilding_place_id": {
                      "type": "string"
                    },
                    "rewilding_elevation": {
                      "type": "number"
                    },
                    "rewilding_photos": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "rewilding_photos_id": {
                            "type": "string"
                          },
                          "rewilding_photos_path": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "rewilding_reference_links": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "rewilding_reference_links_link": {
                            "type": "string"
                          },
                          "rewilding_reference_links_title": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "rewilding_reference_links_link",
                          "rewilding_reference_links_title"
                        ]
                      }
                    },
                    "rewilding_apply_official": {
                      "type": "boolean"
                    },
                    "rewilding_created_by": {
                      "type": "string"
                    },
                    "rewilding_created_at": {
                      "type": "string"
                    },
                    "rewilding_isbookmarked": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "rewilding_id",
                    "rewilding_area",
                    "rewilding_location",
                    "rewilding_country_code",
                    "rewilding_achievement_type",
                    "rewilding_achievement_type_id",
                    "rewilding_name",
                    "rewilding_rating",
                    "rewilding_lat",
                    "rewilding_lng",
                    "rewilding_place_id",
                    "rewilding_elevation",
                    "rewilding_photos",
                    "rewilding_reference_links",
                    "rewilding_apply_official",
                    "rewilding_created_by",
                    "rewilding_created_at",
                    "rewilding_isbookmarked"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "Delete Rewilding",
        "deprecated": false,
        "description": "Retrieve rewilding spots in database (當使用者加入口袋清單或是創建野放點時，會存入資料庫)",
        "operationId": "deleteRewild",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "Rewilding",
          "T1 探索 Discover",
          "T2 揪團基地 Basecamp",
          "1.5.1b"
        ],
        "parameters": [
          {
            "name": "rewildingId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/rewilding/{rewildingId}/photos": {
      "get": {
        "summary": "Retrieve all photos tied to a rewilding",
        "deprecated": false,
        "description": "Retrieve all photos tied to a rewildings",
        "operationId": "getAllPhotos",
        "tags": ["OOSA_REWILD_SERVICE", "✅ Rewilding", "guest"],
        "parameters": [
          {
            "name": "rewildingId",
            "in": "path",
            "description": "String ID of rewilding",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RewildingPhotos"
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/rewilding/{rewildingId}/photos/{photoId}": {
      "get": {
        "summary": "Read a photo",
        "deprecated": false,
        "description": "Read a photo",
        "operationId": "getPhoto",
        "tags": ["OOSA_REWILD_SERVICE", "✅ Rewilding", "guest"],
        "parameters": [
          {
            "name": "rewildingId",
            "in": "path",
            "description": "String ID of rewilding",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "photoId",
            "in": "path",
            "description": "String ID of photo",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/rewilding": {
      "post": {
        "summary": "Create rewilding spot",
        "deprecated": false,
        "description": "Create rewilding spot by user",
        "operationId": "createRewild",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Rewilding",
          "T1 探索 Discover",
          "1.4.1",
          "1.4.1a",
          "1.4.1b",
          "1.4.1c",
          "1.4.1d",
          "1.4.1e",
          "1.4.1f",
          "1.4.1g",
          "1.4.1i",
          "1.4.1j",
          "1.4.1.1",
          "1.4.1.1a",
          "1.4.1.2",
          "1.4.1.2a",
          "1.4.1.3"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "rewilding_apply_official": {
                    "type": "boolean",
                    "default": false,
                    "description": "false表示個人野放點(目前都只有個人野放點)",
                    "example": "false"
                  },
                  "rewilding_lat": {
                    "type": "number",
                    "default": 7.9422379184033,
                    "example": 7.9422379184033
                  },
                  "rewilding_lng": {
                    "type": "number",
                    "default": 112.95275441058537,
                    "example": 112.95275441058537
                  },
                  "rewilding_name": {
                    "type": "string",
                    "default": "TEST_REWILDING#2",
                    "example": "TEST_REWILDING#2"
                  },
                  "rewilding_photo[]": {
                    "type": "string",
                    "format": "binary",
                    "example": ""
                  },
                  "rewilding_pocket_list": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": "66005467624a973abd8787d7"
                  },
                  "rewilding_reference_information": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": "www.google.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rewilding_id": {
                      "type": "string"
                    },
                    "rewilding_area": {
                      "type": "string"
                    },
                    "rewilding_location": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "rewilding_country_code": {
                      "type": "string"
                    },
                    "rewilding_achievement_type": {
                      "type": "string"
                    },
                    "rewilding_achievement_type_id": {
                      "type": "string"
                    },
                    "rewilding_name": {
                      "type": "string"
                    },
                    "rewilding_rating": {
                      "type": "integer"
                    },
                    "rewilding_lat": {
                      "type": "number"
                    },
                    "rewilding_lng": {
                      "type": "number"
                    },
                    "rewilding_place_id": {
                      "type": "string"
                    },
                    "rewilding_elevation": {
                      "type": "number"
                    },
                    "rewilding_photos": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "rewilding_photos_id": {
                            "type": "string"
                          },
                          "rewilding_photos_path": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "rewilding_reference_links": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "rewilding_reference_links_link": {
                            "type": "string"
                          },
                          "rewilding_reference_links_title": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "rewilding_reference_links_link",
                          "rewilding_reference_links_title"
                        ]
                      }
                    },
                    "rewilding_apply_official": {
                      "type": "boolean"
                    },
                    "rewilding_created_by": {
                      "type": "string"
                    },
                    "rewilding_created_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "rewilding_id",
                    "rewilding_area",
                    "rewilding_location",
                    "rewilding_country_code",
                    "rewilding_achievement_type",
                    "rewilding_achievement_type_id",
                    "rewilding_name",
                    "rewilding_rating",
                    "rewilding_lat",
                    "rewilding_lng",
                    "rewilding_place_id",
                    "rewilding_elevation",
                    "rewilding_photos",
                    "rewilding_reference_links",
                    "rewilding_apply_official",
                    "rewilding_created_by",
                    "rewilding_created_at"
                  ]
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "title": "",
                      "description": "message"
                    }
                  },
                  "required": ["message"]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "Retrieve all rewilding spots",
        "deprecated": false,
        "description": "Retrieve rewilding spots in database (當使用者加入口袋清單或是創建野放點時，會存入資料庫)",
        "operationId": "getRewilds",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "Rewilding",
          "T1 探索 Discover",
          "T2 揪團基地 Basecamp",
          "1.1",
          "1.5.1",
          "2.1c.2.2",
          "2.1c.2.2a",
          "3.0",
          "3.0a",
          "3.0b",
          "guest"
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "rewilding_id": {
                        "type": "string"
                      },
                      "rewilding_area": {
                        "type": "string"
                      },
                      "rewilding_location": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "rewilding_country_code": {
                        "type": "string"
                      },
                      "rewilding_achievement_type": {
                        "type": "string"
                      },
                      "rewilding_achievement_type_id": {
                        "type": "string"
                      },
                      "rewilding_name": {
                        "type": "string"
                      },
                      "rewilding_rating": {
                        "type": "integer"
                      },
                      "rewilding_lat": {
                        "type": "number"
                      },
                      "rewilding_lng": {
                        "type": "number"
                      },
                      "rewilding_place_id": {
                        "type": "string"
                      },
                      "rewilding_elevation": {
                        "type": "number"
                      },
                      "rewilding_photos": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rewilding_photos_id": {
                              "type": "string"
                            },
                            "rewilding_photos_path": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "rewilding_photos_id",
                            "rewilding_photos_path"
                          ]
                        }
                      },
                      "rewilding_reference_links": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rewilding_reference_links_link": {
                              "type": "string"
                            },
                            "rewilding_reference_links_title": {
                              "type": "string"
                            },
                            "rewilding_reference_links_description": {
                              "type": "string"
                            },
                            "rewilding_reference_links_og_title": {
                              "type": "string"
                            },
                            "rewilding_reference_links_og_description": {
                              "type": "string"
                            },
                            "rewilding_reference_links_og_image": {
                              "type": "string"
                            },
                            "rewilding_reference_links_og_site_name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "rewilding_reference_links_link",
                            "rewilding_reference_links_title"
                          ]
                        },
                        "nullable": true
                      },
                      "rewilding_apply_official": {
                        "type": "boolean"
                      },
                      "rewilding_created_by": {
                        "type": "string"
                      },
                      "rewilding_created_at": {
                        "type": "string"
                      },
                      "rewilding_created_by_user": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string"
                          },
                          "user_name": {
                            "type": "string"
                          },
                          "user_email": {
                            "type": "string"
                          },
                          "user_avatar": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "user_id",
                          "user_name",
                          "user_email",
                          "user_avatar"
                        ]
                      }
                    },
                    "required": [
                      "rewilding_id",
                      "rewilding_area",
                      "rewilding_location",
                      "rewilding_country_code",
                      "rewilding_achievement_type",
                      "rewilding_achievement_type_id",
                      "rewilding_name",
                      "rewilding_rating",
                      "rewilding_lat",
                      "rewilding_lng",
                      "rewilding_place_id",
                      "rewilding_elevation",
                      "rewilding_photos",
                      "rewilding_reference_links",
                      "rewilding_apply_official",
                      "rewilding_created_by",
                      "rewilding_created_at",
                      "rewilding_created_by_user"
                    ]
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/pocket-list/{pocketListId}": {
      "delete": {
        "summary": "Delete pocket list",
        "deprecated": false,
        "description": "Delete pocket list",
        "operationId": "deletePocketList",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "Pocket List",
          "T1 探索 Discover",
          "1.5.2a",
          "1.5.2.1"
        ],
        "parameters": [
          {
            "name": "pocketListId",
            "in": "path",
            "description": "String ID of the user to get pocket list",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "title": "",
                      "description": "message"
                    }
                  },
                  "required": ["message"]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "Read pocket list",
        "deprecated": false,
        "description": "Get pocket list<br/>The following key may not show as it has no value: <br/>pocket_lists_deleted_at\n",
        "operationId": "getPocketList",
        "tags": ["OOSA_REWILD_SERVICE", "✅ Pocket List"],
        "parameters": [
          {
            "name": "pocketListId",
            "in": "path",
            "description": "String ID of the user to get pocket list",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PocketList"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "title": "",
                      "description": "message"
                    }
                  },
                  "required": ["message"]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update existing pocket list",
        "deprecated": false,
        "description": "Update existing pocket list",
        "operationId": "updatePocketList",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "Pocket List",
          "T1 探索 Discover",
          "1.5.2a",
          "1.5.2.2",
          "1.5.2.2a",
          "1.5.2.2b",
          "1.5.2.2c"
        ],
        "parameters": [
          {
            "name": "pocketListId",
            "in": "path",
            "description": "String ID of the user to get pocket list",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestPocketList"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PocketList"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "title": "",
                      "description": "message"
                    }
                  },
                  "required": ["message"]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/pocket-list/{pocketListId}/items/{pocketListItemsId}": {
      "delete": {
        "summary": "Delete pocket list item by ID",
        "deprecated": false,
        "description": "Delete pocket list item by ID",
        "operationId": "delete-picket-list-item",
        "tags": ["OOSA_REWILD_SERVICE", "Pocket List", "T1 探索 Discover"],
        "parameters": [
          {
            "name": "pocketListId",
            "in": "path",
            "description": "String ID of the user to get pocket list",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "pocketListItemsId",
            "in": "path",
            "description": "String ID of the user to get pocket list item",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "title": "",
                      "description": "message"
                    }
                  },
                  "required": ["message"]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "Get pocket list item by ID",
        "deprecated": false,
        "description": "Get pocket list item by ID",
        "operationId": "getPocketListItem",
        "tags": ["OOSA_REWILD_SERVICE", "✅ Pocket List"],
        "parameters": [
          {
            "name": "pocketListId",
            "in": "path",
            "description": "String ID of the user to get pocket list",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "pocketListItemsId",
            "in": "path",
            "description": "String ID of the user to get pocket list item",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pocket_list_items_id": {
                      "type": "string"
                    },
                    "pocket_list_items_mst": {
                      "type": "string"
                    },
                    "pocket_list_items_name": {
                      "type": "string"
                    },
                    "pocket_list_items_event": {
                      "type": "string"
                    },
                    "pocket_list_items_rewilding": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "pocket_list_items_id",
                    "pocket_list_items_mst",
                    "pocket_list_items_name",
                    "pocket_list_items_event",
                    "pocket_list_items_rewilding"
                  ]
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "title": "",
                      "description": "message"
                    }
                  },
                  "required": ["message"]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "Move pocket list item to another list",
        "deprecated": false,
        "description": "Move pocket list item to another list",
        "operationId": "update-pocket-list-item",
        "tags": ["OOSA_REWILD_SERVICE", "Pocket List", "T1 探索 Discover"],
        "parameters": [
          {
            "name": "pocketListId",
            "in": "path",
            "description": "String ID of the user to get pocket list",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "pocketListItemsId",
            "in": "path",
            "description": "String ID of the user to get pocket list item",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestPocketListUpdate"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "title": "",
                      "description": "message"
                    }
                  },
                  "required": ["message"]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/pocket-list/{pocketListId}/items": {
      "delete": {
        "summary": "Delete pocket list item (BULK)",
        "deprecated": false,
        "description": "Delete pocket list item by ID",
        "operationId": "deletePocketListItem",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "Pocket List",
          "T1 探索 Discover",
          "1.5.2.2.1"
        ],
        "parameters": [
          {
            "name": "pocketListId",
            "in": "path",
            "description": "String ID of the user to get pocket list",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pocket_list_items_id": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": ["pocket_list_items_id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "title": "",
                      "description": "message"
                    }
                  },
                  "required": ["message"]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "Move pocket list item to another list (BULK)",
        "deprecated": false,
        "description": "Move pocket list item to another list",
        "operationId": "movePocketListItem",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "Pocket List",
          "T1 探索 Discover",
          "1.5.2.2.2",
          "1.5.2.2.2a"
        ],
        "parameters": [
          {
            "name": "pocketListId",
            "in": "path",
            "description": "String ID of the user to get pocket list",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestPocketListUpdateBulk"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "title": "",
                      "description": "message"
                    }
                  },
                  "required": ["message"]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "Add to pocket list",
        "deprecated": false,
        "description": "Add to pocket list",
        "operationId": "addToPocketList",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "Pocket List",
          "_R 野放點細節 R/S Details",
          "_R1d",
          "_R1e"
        ],
        "parameters": [
          {
            "name": "pocketListId",
            "in": "path",
            "description": "String ID of the user to get pocket list",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestPocketListItem"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PocketListItems"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "title": "",
                      "description": "message"
                    }
                  },
                  "required": ["message"]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "Get pocket list items by ID",
        "deprecated": false,
        "description": "Get pocket list items by ID<br/><br/>The following key may not show as it has no value: <br/>pocket_list_items_deleted_at<br/>pocket_list_items_created_at\n",
        "operationId": "getPocketListItems",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "Pocket List",
          "T1 探索 Discover",
          "1.5.2"
        ],
        "parameters": [
          {
            "name": "pocketListId",
            "in": "path",
            "description": "String ID of the user to get pocket list",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pocket_list_items_id": {
                        "type": "string"
                      },
                      "pocket_list_items_mst": {
                        "type": "string"
                      },
                      "pocket_list_items_name": {
                        "type": "string"
                      },
                      "pocket_list_items_event": {
                        "type": "string"
                      },
                      "pocket_list_items_rewilding": {
                        "type": "string"
                      },
                      "pocket_list_items_created_at": {
                        "type": "string"
                      },
                      "pocket_list_items_rewilding_detail": {
                        "type": "object",
                        "properties": {
                          "rewilding_id": {
                            "type": "string"
                          },
                          "rewilding_area": {
                            "type": "string"
                          },
                          "rewilding_location": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "rewilding_country_code": {
                            "type": "string"
                          },
                          "rewilding_achievement_type": {
                            "type": "string"
                          },
                          "rewilding_achievement_type_id": {
                            "type": "string"
                          },
                          "rewilding_name": {
                            "type": "string"
                          },
                          "rewilding_rating": {
                            "type": "integer"
                          },
                          "rewilding_lat": {
                            "type": "number"
                          },
                          "rewilding_lng": {
                            "type": "number"
                          },
                          "rewilding_place_id": {
                            "type": "string"
                          },
                          "rewilding_elevation": {
                            "type": "number"
                          },
                          "rewilding_photos": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "rewilding_photos_id": {
                                  "type": "string"
                                },
                                "rewilding_photos_path": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "rewilding_photos_id",
                                "rewilding_photos_path"
                              ]
                            }
                          },
                          "rewilding_reference_links": {
                            "type": "null"
                          },
                          "rewilding_apply_official": {
                            "type": "boolean"
                          },
                          "rewilding_created_by": {
                            "type": "string"
                          },
                          "rewilding_created_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "rewilding_id",
                          "rewilding_area",
                          "rewilding_location",
                          "rewilding_country_code",
                          "rewilding_achievement_type",
                          "rewilding_achievement_type_id",
                          "rewilding_name",
                          "rewilding_rating",
                          "rewilding_lat",
                          "rewilding_lng",
                          "rewilding_place_id",
                          "rewilding_elevation",
                          "rewilding_photos",
                          "rewilding_reference_links",
                          "rewilding_apply_official",
                          "rewilding_created_by",
                          "rewilding_created_at"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "title": "",
                      "description": "message"
                    }
                  },
                  "required": ["message"]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/pocket-list": {
      "post": {
        "summary": "Create new pocket list",
        "deprecated": false,
        "description": "Create pocket list",
        "operationId": "createPocketList",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "Pocket List",
          "_A 新增清單 Add a New List",
          "_A1",
          "_A1a",
          "_A1b",
          "_A1c"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestPocketList"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PocketList"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "Get pocket list",
        "deprecated": false,
        "description": "Get pocket list<br/>The following key may not show as it has no value: <br/>pocket_lists_deleted_at\n",
        "operationId": "getPocketLists",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "Pocket List",
          "T1 探索 Discover",
          "T2 揪團基地 Basecamp",
          "1.5",
          "2.1c.2"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PocketList"
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/references": {
      "get": {
        "summary": "Retrieve",
        "deprecated": false,
        "description": "",
        "operationId": "getReferences",
        "tags": [
          "T2 揪團基地 Basecamp",
          "OOSA_REWILD_SERVICE",
          "2.1c.1.2",
          "2.1c.1.2a",
          "2.1c.1.2b"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewildingOptions"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/link-query": {
      "post": {
        "summary": "Link Query",
        "deprecated": false,
        "description": "",
        "operationId": "getUrlInfo",
        "tags": ["_E 活動 Event", "OOSA_REWILD_SERVICE", "1.4.1h"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLinkQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkQuery"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/event/{eventId}": {
      "delete": {
        "summary": "Delete Event",
        "deprecated": false,
        "description": "Delete an event",
        "operationId": "deleteEvent",
        "tags": ["OOSA_REWILD_SERVICE", "✅ Event"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsDeleted"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "Read Event",
        "deprecated": false,
        "description": "Read an Event",
        "operationId": "getEventByEventId",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "Event",
          "_E 活動 Event",
          "_E1",
          "guest"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "put": {
        "summary": "Update Event",
        "deprecated": false,
        "description": "Update an event",
        "operationId": "UpdateEvent",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "Event",
          "_R 野放點細節 R/S Details",
          "_E 活動 Event",
          "_E1.1"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "events_date": {
                    "type": "string",
                    "default": "2024-06-01T09:00:00Z",
                    "description": "活動開始時間",
                    "example": "2024-06-01T09:00:00Z"
                  },
                  "events_date_end": {
                    "type": "string",
                    "default": "2024-06-01T18:00:00Z",
                    "description": "活動結束時間",
                    "example": "2024-06-01T18:00:00Z"
                  },
                  "events_deadline": {
                    "type": "string",
                    "default": "2024-05-26T00:00:00Z",
                    "description": "報名截止時間",
                    "example": "2024-05-26T00:00:00Z"
                  },
                  "events_lat": {
                    "type": "number",
                    "default": -7.9421532937069514,
                    "description": "活動地點-經度",
                    "example": 25.032510610605097
                  },
                  "events_lng": {
                    "type": "number",
                    "default": 112.95357004216902,
                    "description": "活動地點-緯度",
                    "example": 121.58739934934991
                  },
                  "events_meeting_point_lat": {
                    "type": "number",
                    "default": -7.929088255289928,
                    "description": "集合地點-經度",
                    "example": 25.03305498837257
                  },
                  "events_meeting_point_lng": {
                    "type": "number",
                    "default": 112.9654222278174,
                    "description": "集合地點-緯度",
                    "example": 121.57010446535351
                  },
                  "events_meeting_point_name": {
                    "example": "象山站",
                    "type": "string"
                  },
                  "events_name": {
                    "type": "string",
                    "default": "Hike to Bromo",
                    "description": "行程名稱",
                    "example": "虎山親山步道"
                  },
                  "events_participant_limit": {
                    "type": "number",
                    "default": 4,
                    "description": "人數上限 (0表示不限制)",
                    "example": 0
                  },
                  "events_payment_fee": {
                    "type": "number",
                    "default": 450,
                    "description": "報名費用 (商業團專用)",
                    "example": 0
                  },
                  "events_payment_required": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "description": "非商業團帶(0)",
                    "example": 0
                  },
                  "events_photo": {
                    "format": "binary",
                    "type": "string",
                    "example": ""
                  },
                  "events_place": {
                    "type": "string",
                    "default": "ChIJk9cKlIwgbzQR2BE-g395glo",
                    "description": "Add from map: pass in Google Place ID",
                    "example": "ChIJX9SSyAirQjQR9B9f7PKLqJo"
                  },
                  "events_requires_approval": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "example": 1
                  },
                  "events_rewilding": {
                    "type": "string",
                    "description": "Add from pocketlist: Pass in Rewilding ID",
                    "example": ""
                  },
                  "events_type": {
                    "example": "",
                    "type": "string"
                  },
                  "events_participants": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ""
                  },
                  "events_photo_cover": {
                    "description": "DEFAULT_0 (SKY), DEFAULT_1 (REWILDMODE_DEFAULT)",
                    "example": "",
                    "type": "string"
                  }
                },
                "required": [
                  "events_date",
                  "events_date_end",
                  "events_deadline",
                  "events_lat",
                  "events_lng",
                  "events_meeting_point_lat",
                  "events_meeting_point_lng",
                  "events_meeting_point_name",
                  "events_name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralError"
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/event": {
      "post": {
        "summary": "Create Event",
        "deprecated": false,
        "description": "Create new event",
        "operationId": "createEvent",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "Event",
          "_R 野放點細節 R/S Details",
          "T2 揪團基地 Basecamp",
          "T3 野放成就 Achievement",
          "_R1g",
          "2.1",
          "2.1a",
          "2.1b",
          "2.1c",
          "2.1d",
          "2.1e",
          "2.1.1",
          "2.1.1a",
          "2.1.1b",
          "2.1.1.1c",
          "2.1.1.1a",
          "2.1.1.1b",
          "2.1.1.1d",
          "2.1.1.1e",
          "2.1.1.1f",
          "3.3.2",
          "3.3.2a"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "events_date": {
                    "type": "string",
                    "default": "2024-06-01T09:00:00Z",
                    "description": "活動開始時間",
                    "example": "2024-06-01T09:00:00Z"
                  },
                  "events_date_end": {
                    "type": "string",
                    "default": "2024-06-01T18:00:00Z",
                    "description": "活動結束時間",
                    "example": "2024-06-01T18:00:00Z"
                  },
                  "events_deadline": {
                    "type": "string",
                    "default": "2024-05-26T00:00:00Z",
                    "description": "報名截止時間",
                    "example": "2024-05-26T00:00:00Z"
                  },
                  "events_lat": {
                    "type": "number",
                    "default": -7.9421532937069514,
                    "description": "活動地點-經度",
                    "example": 25.032510610605097
                  },
                  "events_lng": {
                    "type": "number",
                    "default": 112.95357004216902,
                    "description": "活動地點-緯度",
                    "example": 121.58739934934991
                  },
                  "events_meeting_point_lat": {
                    "type": "number",
                    "default": -7.929088255289928,
                    "description": "集合地點-經度",
                    "example": 25.03305498837257
                  },
                  "events_meeting_point_lng": {
                    "type": "number",
                    "default": 112.9654222278174,
                    "description": "集合地點-緯度",
                    "example": 121.57010446535351
                  },
                  "events_meeting_point_name": {
                    "example": "象山站",
                    "type": "string"
                  },
                  "events_name": {
                    "type": "string",
                    "default": "Hike to Bromo",
                    "description": "行程名稱",
                    "example": "虎山親山步道"
                  },
                  "events_participant_limit": {
                    "type": "number",
                    "default": 4,
                    "description": "人數上限 (0表示不限制)",
                    "example": 0
                  },
                  "events_payment_fee": {
                    "type": "number",
                    "default": 450,
                    "description": "報名費用 (商業團專用)",
                    "example": 0
                  },
                  "events_payment_required": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "description": "非商業團帶(0)",
                    "example": 0
                  },
                  "events_photo": {
                    "format": "binary",
                    "type": "string",
                    "example": ""
                  },
                  "events_place": {
                    "type": "string",
                    "default": "ChIJk9cKlIwgbzQR2BE-g395glo",
                    "description": "Add from map: pass in Google Place ID",
                    "example": "ChIJX9SSyAirQjQR9B9f7PKLqJo"
                  },
                  "events_requires_approval": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "example": 1
                  },
                  "events_rewilding": {
                    "type": "string",
                    "description": "Add from pocketlist: Pass in Rewilding ID",
                    "example": ""
                  },
                  "events_type": {
                    "example": "",
                    "type": "string"
                  },
                  "events_participants": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ""
                  },
                  "events_photo_cover": {
                    "description": "DEFAULT_0 (SKY), DEFAULT_1 (REWILDMODE_DEFAULT)",
                    "example": "",
                    "type": "string"
                  }
                },
                "required": [
                  "events_date",
                  "events_date_end",
                  "events_deadline",
                  "events_lat",
                  "events_lng",
                  "events_meeting_point_lat",
                  "events_meeting_point_lng",
                  "events_meeting_point_name",
                  "events_name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralError"
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "Retrieve Events",
        "deprecated": false,
        "description": "Retrieve all events",
        "operationId": "getEvents",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "T1 探索 Discover",
          "Event",
          "1.0",
          "2.0",
          "2.0a",
          "2.2",
          "guest"
        ],
        "parameters": [
          {
            "name": "event_period_begin",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_period_end",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_rewilding",
            "in": "query",
            "description": "Rewilding ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_past",
            "in": "query",
            "description": "為1時獲取過去event",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Events"
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/news": {
      "post": {
        "summary": "Create News",
        "deprecated": false,
        "description": "Create new event",
        "operationId": "createNews",
        "tags": ["OOSA_REWILD_SERVICE", "Event"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestNews"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "news_id": {
                      "type": "string"
                    },
                    "news_date": {
                      "type": "string"
                    },
                    "news_title": {
                      "type": "string"
                    },
                    "news_content": {
                      "type": "string"
                    },
                    "news_created_at": {
                      "type": "string"
                    },
                    "news_created_by": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "news_id",
                    "news_date",
                    "news_title",
                    "news_content",
                    "news_created_at",
                    "news_created_by"
                  ]
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "Retrieve News",
        "deprecated": true,
        "description": "Create new event",
        "operationId": "getNews",
        "tags": ["OOSA_REWILD_SERVICE", "Event", "T4 世界 World", "4.1"],
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/News"
                  }
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/news/{id}": {
      "get": {
        "summary": "Read News",
        "deprecated": false,
        "description": "Create new event",
        "operationId": "getNewsbyId",
        "tags": ["OOSA_REWILD_SERVICE", "guest"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete News",
        "deprecated": false,
        "description": "Create new event",
        "operationId": "deleteNews",
        "tags": ["OOSA_REWILD_SERVICE"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update News",
        "deprecated": false,
        "description": "Create new event",
        "operationId": "updateNews",
        "tags": ["OOSA_REWILD_SERVICE"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestNews"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/event/cover/{imagename}": {
      "get": {
        "summary": "Retrieve Cover Image",
        "deprecated": false,
        "description": "",
        "operationId": "getCoverImage",
        "tags": ["OOSA_REWILD_SERVICE", "Event", "T2 揪團基地 Basecamp"],
        "parameters": [
          {
            "name": "imagename",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/event-invitations/{eventInvitationId}": {
      "put": {
        "summary": "Change event invitation status",
        "deprecated": false,
        "description": "Change event invitation status",
        "operationId": "changeEventInvitationStat",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Invitation",
          "T5 個人 My",
          "5.1.1",
          "5.1.1a"
        ],
        "parameters": [
          {
            "name": "eventInvitationId",
            "in": "path",
            "description": "String ID of the event invitation",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "applied",
            "in": "query",
            "description": "set true if its a join request",
            "required": false,
            "example": "true",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestEventInvitationUpdate"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "event_participants_id": {
                      "type": "string"
                    },
                    "event_participants_event": {
                      "type": "string"
                    },
                    "event_participants_user": {
                      "type": "string"
                    },
                    "event_participants_status": {
                      "type": "integer"
                    },
                    "event_participants_status_label": {
                      "type": "string"
                    },
                    "event_participants_is_paid": {
                      "type": "integer"
                    },
                    "event_participants_paid_amount": {
                      "type": "integer"
                    },
                    "event_participants_paid_at": {
                      "type": "string"
                    },
                    "event_participants_payment_request": {
                      "type": "string"
                    },
                    "event_participants_payment_response": {
                      "type": "string"
                    },
                    "event_participants_experience": {
                      "type": "string"
                    },
                    "event_participants_request_message": {
                      "type": "string"
                    },
                    "event_participants_random_count": {
                      "type": "integer"
                    },
                    "event_participants_polaroid_count": {
                      "type": "integer"
                    },
                    "event_participants_star_type": {
                      "type": "integer"
                    },
                    "event_participants_created_by": {
                      "type": "string"
                    },
                    "event_participants_created_at": {
                      "type": "string"
                    },
                    "event_participant_invitation": {
                      "type": "object",
                      "properties": {
                        "invitation_message": {
                          "type": "string"
                        },
                        "invitation_template": {
                          "type": "string"
                        }
                      },
                      "required": ["invitation_message", "invitation_template"]
                    },
                    "event_participant_badges": {
                      "type": "null"
                    }
                  },
                  "required": [
                    "event_participants_id",
                    "event_participants_event",
                    "event_participants_user",
                    "event_participants_status",
                    "event_participants_status_label",
                    "event_participants_is_paid",
                    "event_participants_paid_amount",
                    "event_participants_paid_at",
                    "event_participants_payment_request",
                    "event_participants_payment_response",
                    "event_participants_experience",
                    "event_participants_request_message",
                    "event_participants_random_count",
                    "event_participants_polaroid_count",
                    "event_participants_star_type",
                    "event_participants_created_by",
                    "event_participants_created_at",
                    "event_participant_invitation",
                    "event_participant_badges"
                  ]
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "Read event invitations",
        "deprecated": false,
        "description": "Read event invitations",
        "operationId": "getEventInvitation",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Invitation",
          "T5 個人 My",
          "5.3.1",
          "5.3.1a",
          "guest"
        ],
        "parameters": [
          {
            "name": "eventInvitationId",
            "in": "path",
            "description": "String ID of the event invitation",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/event/{eventId}/invitation": {
      "put": {
        "summary": "Update Event Invitation Text",
        "deprecated": false,
        "description": "Use this endpoint to update invitation message",
        "operationId": "updateEventInvitation",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Invitation - Detail",
          "_E 活動 Event",
          "_E1.2",
          "_E1.2.1",
          "_E1.2.1a",
          "_E1.2.1.1",
          "_E1.2.1.1.1",
          "_E1.2.1b"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestEventInvitationMessageUpdate"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/event/{eventId}/join": {
      "post": {
        "summary": "Send Join Event Request",
        "deprecated": false,
        "description": "Use this endpoint to Join Event without invitation",
        "operationId": "updateEventInvitationJoin",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Invitation - Detail",
          "_E 活動 Event",
          "_E1.8",
          "_E1.8a",
          "_E1.8.1"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestEventJoin"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/event-invitations": {
      "get": {
        "summary": "Retrieve all event invitations",
        "deprecated": false,
        "description": "Retrieve all event invitations",
        "operationId": "getAllEventsInvitations",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Invitation",
          "T5 個人 My",
          "5.3"
        ],
        "parameters": [
          {
            "name": "applied",
            "in": "query",
            "description": "Pass true to retrieve applied",
            "required": false,
            "example": "true",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "event_participants_id": {
                        "type": "string"
                      },
                      "event_participants_event": {
                        "type": "string"
                      },
                      "event_participants_user": {
                        "type": "string"
                      },
                      "event_participants_status": {
                        "type": "integer"
                      },
                      "event_participants_status_label": {
                        "type": "string"
                      },
                      "event_participants_is_paid": {
                        "type": "integer"
                      },
                      "event_participants_paid_amount": {
                        "type": "integer"
                      },
                      "event_participants_paid_at": {
                        "type": "string"
                      },
                      "event_participants_payment_request": {
                        "type": "string"
                      },
                      "event_participants_payment_response": {
                        "type": "string"
                      },
                      "event_participants_experience": {
                        "type": "string"
                      },
                      "event_participants_request_message": {
                        "type": "string"
                      },
                      "event_participants_random_count": {
                        "type": "integer"
                      },
                      "event_participants_polaroid_count": {
                        "type": "integer"
                      },
                      "event_participants_star_type": {
                        "type": "integer"
                      },
                      "event_participants_created_by": {
                        "type": "string"
                      },
                      "event_participants_created_at": {
                        "type": "string"
                      },
                      "event_participant_invitation": {
                        "type": "object",
                        "properties": {
                          "invitation_message": {
                            "type": "string"
                          },
                          "invitation_template": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "invitation_message",
                          "invitation_template"
                        ]
                      },
                      "event_participants_invited_by": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string"
                          },
                          "user_name": {
                            "type": "string"
                          },
                          "user_email": {
                            "type": "string"
                          },
                          "user_avatar": {
                            "type": "string"
                          },
                          "user_event_scheduled": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "user_id",
                          "user_name",
                          "user_email",
                          "user_avatar",
                          "user_event_scheduled"
                        ]
                      },
                      "event_participant_badges": {
                        "type": "null"
                      }
                    },
                    "required": [
                      "event_participants_id",
                      "event_participants_event",
                      "event_participants_user",
                      "event_participants_status",
                      "event_participants_status_label",
                      "event_participants_is_paid",
                      "event_participants_paid_amount",
                      "event_participants_paid_at",
                      "event_participants_payment_request",
                      "event_participants_payment_response",
                      "event_participants_experience",
                      "event_participants_request_message",
                      "event_participants_random_count",
                      "event_participants_polaroid_count",
                      "event_participants_star_type",
                      "event_participants_created_by",
                      "event_participants_created_at",
                      "event_participant_invitation",
                      "event_participants_invited_by",
                      "event_participant_badges"
                    ]
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/event/{eventId}/accounting/{accountingId}": {
      "delete": {
        "summary": "Delete Event Accounting",
        "deprecated": false,
        "description": "Delete an entry on event's accounting",
        "operationId": "deleteEventAccounting",
        "tags": ["OOSA_REWILD_SERVICE", "✅ Event Accounting"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "accountingId",
            "in": "path",
            "description": "String ID of the accounting record",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "Read Event Accounting",
        "deprecated": false,
        "description": "Retrieve an event's accounting<br/>The following key may not show as it has no value: <br/>event_accounting_updated_at\n",
        "operationId": "getEventAccounting",
        "tags": ["OOSA_REWILD_SERVICE", "✅ Event Accounting"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "accountingId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventAccountingSingle"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update Event Accounting",
        "deprecated": false,
        "description": "Retrieve an event's accounting<br/>The following key may not show as it has no value: <br/>event_accounting_updated_at\n",
        "operationId": "updateEventAccounting",
        "tags": ["OOSA_REWILD_SERVICE", "✅ Event Accounting"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "accountingId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestEventAccounting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventAccountingSingle"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/event/{eventId}/accounting": {
      "get": {
        "summary": "Retrieve Event Accounting",
        "deprecated": false,
        "description": "Retrieve an event's accounting<br/>The following key may not show as it has no value: <br/>event_accounting_updated_at\n",
        "operationId": "getEventAccountings",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Accounting",
          "_E 活動 Event",
          "_E1"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventAccounting"
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create Event Accounting",
        "deprecated": false,
        "description": "Create an entry on event's accounting",
        "operationId": "createEventAccounting",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Accounting",
          "_E 活動 Event",
          "_E1.7"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestEventAccounting"
                }
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventAccounting"
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/event/{eventId}/announcement": {
      "get": {
        "summary": "Retrieve Event Announcement",
        "deprecated": false,
        "description": "Retrieve an event's announcement",
        "operationId": "getEventAnnounce",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "_E 活動 Event",
          "✅Event Announcement",
          "guest"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "For filter category",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventAnnouncement"
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create Event Announcement",
        "deprecated": false,
        "description": "Create an entry on event's announcement\n",
        "operationId": "createEventAnnounce",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "_E 活動 Event",
          "✅Event Announcement"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestEventAnnouncement"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventAnnouncement"
                  }
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/event/{eventId}/message-board/{messageBoardId}": {
      "delete": {
        "summary": "Delete message board entry",
        "deprecated": false,
        "description": "Delete an entry on event's message board",
        "operationId": "deleteMessageBoard",
        "tags": ["OOSA_REWILD_SERVICE", "✅ Event Message Board"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "messageBoardId",
            "in": "path",
            "description": "String ID of the message",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "Read Event Message Board",
        "deprecated": false,
        "description": "Retrieve an event's message board",
        "operationId": "getMessageBoard",
        "tags": ["OOSA_REWILD_SERVICE", "✅ Event Message Board"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "messageBoardId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventMessageBoard"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update Event Message Board",
        "deprecated": false,
        "description": "Retrieve an event's message board",
        "operationId": "updateMessageBoard",
        "tags": ["OOSA_REWILD_SERVICE", "✅ Event Message Board"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "messageBoardId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventMessageBoard"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/event/{eventId}/message-board": {
      "post": {
        "summary": "Create Event Message Board",
        "deprecated": false,
        "description": "Create an entry on event's message board<br/>The following key may not show as it has no value: <br/>event_message_board_status<br/>event_message_board_category<br/> event_message_board_announcement\n",
        "operationId": "createMessageBoard",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Message Board",
          "_E 活動 Event",
          "_E1.6"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestEventMessageBoard"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventMessageBoard"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "Retrieve Event Message Board",
        "deprecated": false,
        "description": "Retrieve an event's message board",
        "operationId": "getEventMessageBoard",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Message Board",
          "_E 活動 Event",
          "_E1",
          "guest"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventMessageBoard"
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/event/{eventId}/message-board/{messageBoardId}/pin": {
      "post": {
        "summary": "Pin Event Message Board ",
        "deprecated": false,
        "description": "Retrieve an event's message board",
        "operationId": "pinMessageBoard",
        "tags": ["OOSA_REWILD_SERVICE", "✅ Event Message Board"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "messageBoardId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestEventMessageBoardPin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventMessageBoard"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/event/{eventId}/participants/{participantId}": {
      "delete": {
        "summary": "Delete Event Participant",
        "deprecated": false,
        "description": "Remove a participant from an event",
        "operationId": "deleteEventParticipant",
        "tags": ["OOSA_REWILD_SERVICE", "✅ Event Participants"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "participantId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/event/{eventId}/participants": {
      "get": {
        "summary": "Retrieve Event Participants",
        "deprecated": false,
        "description": "Retrieve an event's participants",
        "operationId": "getEventParticipant",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Participants",
          "_E 活動 Event",
          "T3 野放成就 Achievement",
          "_E1",
          "3.1.1.3"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventParticipants"
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create Event Participant",
        "deprecated": false,
        "description": "Invite a participant to event",
        "operationId": "createEventParticipant",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Participants",
          "_E 活動 Event",
          "_E1.2.1.1.1d",
          "_E1.2.1.1.1.1"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestEventParticipant"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "event_participants_id": {
                        "type": "string"
                      },
                      "event_participants_event": {
                        "type": "string"
                      },
                      "event_participants_user": {
                        "type": "string"
                      },
                      "event_participants_status": {
                        "type": "integer"
                      },
                      "event_participants_status_label": {
                        "type": "string"
                      },
                      "event_participants_is_paid": {
                        "type": "integer"
                      },
                      "event_participants_paid_amount": {
                        "type": "integer"
                      },
                      "event_participants_paid_at": {
                        "type": "string"
                      },
                      "event_participants_payment_request": {
                        "type": "string"
                      },
                      "event_participants_payment_response": {
                        "type": "string"
                      },
                      "event_participants_experience": {
                        "type": "string"
                      },
                      "event_participants_request_message": {
                        "type": "string"
                      },
                      "event_participants_random_count": {
                        "type": "integer"
                      },
                      "event_participants_polaroid_count": {
                        "type": "integer"
                      },
                      "event_participants_star_type": {
                        "type": "integer"
                      },
                      "event_participants_created_by": {
                        "type": "string"
                      },
                      "event_participants_created_at": {
                        "type": "string"
                      },
                      "event_participant_invitation": {
                        "type": "object",
                        "properties": {
                          "invitation_message": {
                            "type": "string"
                          },
                          "invitation_template": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "invitation_message",
                          "invitation_template"
                        ]
                      },
                      "event_participant_badges": {
                        "type": "null"
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user/{userId}/events": {
      "get": {
        "summary": "Other User Event",
        "deprecated": false,
        "description": "Retrieve other users events",
        "operationId": "getUserEventbyId",
        "tags": ["OOSA_REWILD_SERVICE", "User Event", "_O1.2"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "past",
            "in": "query",
            "description": "Pass true to retrieve past events by user. Otherwise omit this query parameter",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "country_code",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Events"
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/my/event": {
      "get": {
        "summary": "Self User Event",
        "deprecated": false,
        "description": "Retrieve an authenticated user events",
        "operationId": "getUserEventbyCode",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "User Event",
          "T2 揪團基地 Basecamp",
          "T3 野放成就 Achievement",
          "3.4b",
          "3.4c"
        ],
        "parameters": [
          {
            "name": "past",
            "in": "query",
            "description": "Pass true to retrieve past events by user. Otherwise omit this query parameter",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "country_code",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "has_polaroid",
            "in": "query",
            "description": "Pass in true for those with polaroids or false for no polaroids by this user",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Events"
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/event/{eventId}/reference-links/{referenceLinkId}": {
      "delete": {
        "summary": "Delete Event Reference Links",
        "deprecated": false,
        "description": "Delete an event's reference links",
        "operationId": "deleteReferenceLink",
        "tags": ["OOSA_REWILD_SERVICE", "✅ Event Reference Links"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "referenceLinkId",
            "in": "path",
            "description": "String ID of the reference link",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "Read Event Reference Links",
        "deprecated": false,
        "description": "Retrieve an event's reference links",
        "operationId": "getReferenceLink",
        "tags": ["OOSA_REWILD_SERVICE", "✅ Event Reference Links"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "referenceLinkId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventReferenceLinks"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update Event Reference Links",
        "deprecated": false,
        "description": "Retrieve an event's reference links",
        "operationId": "updateReferenceLink",
        "tags": ["OOSA_REWILD_SERVICE", "✅ Event Reference Links"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "referenceLinkId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventReferenceLinks"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/event/{eventId}/reference-links": {
      "get": {
        "summary": "Retrieve Event Reference Links",
        "deprecated": false,
        "description": "Retrieve an event's reference links",
        "operationId": "getEventReferenceLink",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "_E 活動 Event",
          "Event Reference Links",
          "_E1",
          "guest"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventReferenceLinks"
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create Event Reference Links",
        "deprecated": false,
        "description": "Create an event's reference links",
        "operationId": "createReferenceLink",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "_E 活動 Event",
          "Event Reference Links",
          "_E1.4"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestEventReferenceLinks"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventReferenceLinksSimple"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/achievement": {
      "get": {
        "summary": "Retrieve Achievements",
        "deprecated": false,
        "description": "Retrieve all events",
        "operationId": "getAchievements",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "T1 探索 Discover",
          "Event",
          "T3 野放成就 Achievement",
          "3.0",
          "3.4",
          "3.4a"
        ],
        "parameters": [
          {
            "name": "achievement_type",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "star_type",
            "in": "query",
            "description": "Star type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AchievementEvent"
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user/{userId}/achievement": {
      "get": {
        "summary": "User Achievement",
        "deprecated": false,
        "description": "Retrieve an authenticated user events",
        "operationId": "getAchievement",
        "tags": ["OOSA_REWILD_SERVICE", "_O1.2a", "_O1.1.1"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Events"
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/achievement/places": {
      "get": {
        "summary": "Retrieve Achievements Places",
        "deprecated": false,
        "description": "Retrieve all events",
        "operationId": "getAchievements",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "T1 探索 Discover",
          "Event",
          "T3 野放成就 Achievement",
          "3.0c",
          "3.0d",
          "3.0e"
        ],
        "parameters": [
          {
            "name": "achievement_type",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AchievementEvent"
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/event/{eventId}/schedule/{scheduleId}": {
      "delete": {
        "summary": "Delete Event Schedule",
        "deprecated": true,
        "description": "Delete an event's schedule",
        "tags": ["OOSA_REWILD_SERVICE", "✅ Event Schedule"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "Read Event Schedule",
        "deprecated": true,
        "description": "Delete an event's schedule",
        "tags": ["OOSA_REWILD_SERVICE", "✅ Event Schedule"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventSchedules"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update Event Schedule",
        "deprecated": true,
        "description": "Delete an event's schedule",
        "tags": ["OOSA_REWILD_SERVICE", "✅ Event Schedule"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventSchedules"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/event/{eventId}/schedule": {
      "delete": {
        "summary": "Delete Event Schedule",
        "deprecated": false,
        "description": "Delete an event's schedule",
        "operationId": "deleteEventSchedule",
        "tags": ["OOSA_REWILD_SERVICE", "✅ Event Schedule"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralSuccess"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "title": "",
                      "description": "message"
                    }
                  },
                  "required": ["message"]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "Retrieve Event Schedule",
        "deprecated": false,
        "description": "Retrieve an event's schedule",
        "operationId": "getEventSchedule",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Schedule",
          "_E 活動 Event",
          "_E1",
          "guest"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EventScheduleBulkItemTime"
                    }
                  }
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": [
                      [
                        {
                          "time": "09:00",
                          "description": "集合"
                        },
                        {
                          "time": "12:00",
                          "description": "午餐"
                        },
                        {
                          "time": "15:00",
                          "description": "回程"
                        },
                        {
                          "time": "18:00",
                          "description": "捷運站，合照解散"
                        }
                      ]
                    ]
                  },
                  "2": {
                    "summary": "Empty",
                    "value": [
                      {
                        "event_schedule_items": []
                      },
                      {
                        "event_schedule_items": []
                      }
                    ]
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create Event Schedule",
        "deprecated": false,
        "description": "Create an event's schedule",
        "operationId": "createEventSchedule",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Schedule",
          "_E 活動 Event",
          "_E1.5"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schedules": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EventScheduleBulk"
                    }
                  }
                },
                "required": ["schedules"]
              },
              "example": {
                "schedules": [
                  [
                    {
                      "time": "09:00:00",
                      "description": "集合"
                    },
                    {
                      "time": "12:00:00",
                      "description": "午餐"
                    },
                    {
                      "time": "15:00:00",
                      "description": "回程"
                    },
                    {
                      "time": "18:00:00",
                      "description": "捷運站，合照解散"
                    }
                  ]
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EventScheduleBulkItemTime"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/collaborative-log/{eventId}/album-link": {
      "get": {
        "summary": "Retrieve Collaborative Log - Album Link",
        "deprecated": false,
        "description": "Retrieve album link in event",
        "operationId": "getCollaborativeAlbumLinks",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Collaborate",
          "T3 野放成就 Achievement",
          "3.1.1"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventAlbumLink"
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create Collaborative Log - Album Link",
        "deprecated": false,
        "description": "Retrieve album link in event",
        "operationId": "createCollaborativeAlbumLink",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Collaborate",
          "T3 野放成就 Achievement",
          "3.1.1a",
          "3.1.1b",
          "3.1.1c"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestEventAlbumLinks"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventAlbumLinkSimple"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/collaborative-log/{eventId}/album-link/{albumLinkId}": {
      "put": {
        "summary": "Update Collaborative Log - Album Link",
        "deprecated": false,
        "description": "Retrieve album link in event",
        "operationId": "updateCollaborativeAlbumLink",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Collaborate",
          "T3 野放成就 Achievement",
          "3.1.1a",
          "3.1.1b",
          "3.1.1c"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "albumLinkId",
            "in": "path",
            "description": "Album ID Link",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestEventAlbumLinks"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventAlbumLinkSimple"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGeneralError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/collaborative-log/{eventId}/polaroids": {
      "get": {
        "summary": "Retrieve Polaroid",
        "deprecated": false,
        "description": "Retrieve event polaroid",
        "operationId": "getPolaroids",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Collaborate",
          "T3 野放成就 Achievement",
          "3.1.1",
          "3.1.1.1"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "event_polaroids_id": {
                        "type": "string"
                      },
                      "event_polaroids_event": {
                        "type": "string"
                      },
                      "event_polaroids_url": {
                        "type": "string"
                      },
                      "event_polaroids_lat": {
                        "type": "number"
                      },
                      "event_polaroids_lng": {
                        "type": "number"
                      },
                      "event_polaroids_radius_from_event": {
                        "type": "number"
                      },
                      "event_polaroids_achievement_eligible": {
                        "type": "boolean"
                      },
                      "event_polaroids_message": {
                        "type": "string"
                      },
                      "event_polaroids_tag": {
                        "type": "string"
                      },
                      "event_polaroids_is_event_period": {
                        "type": "boolean"
                      },
                      "event_polaroids_star_type": {
                        "type": "integer"
                      },
                      "event_polaroids_created_by": {
                        "type": "string"
                      },
                      "event_polaroids_created_at": {
                        "type": "string"
                      },
                      "event_polaroids_created_by_user": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string"
                          },
                          "user_name": {
                            "type": "string"
                          },
                          "user_email": {
                            "type": "string"
                          },
                          "user_avatar": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "user_id",
                          "user_name",
                          "user_email",
                          "user_avatar"
                        ]
                      }
                    },
                    "required": [
                      "event_polaroids_id",
                      "event_polaroids_event",
                      "event_polaroids_url",
                      "event_polaroids_lat",
                      "event_polaroids_lng",
                      "event_polaroids_radius_from_event",
                      "event_polaroids_achievement_eligible",
                      "event_polaroids_message",
                      "event_polaroids_tag",
                      "event_polaroids_is_event_period",
                      "event_polaroids_star_type",
                      "event_polaroids_created_by",
                      "event_polaroids_created_at",
                      "event_polaroids_created_by_user"
                    ]
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create Polaroid",
        "deprecated": false,
        "description": "Create event polaroid (Uploaded file will be uploaded on Cloudflare). Read location data and save to database",
        "operationId": "createPolaroid",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Collaborate",
          "T3 野放成就 Achievement",
          "3.3.1",
          "3.3.1a",
          "3.3.1b",
          "3.3.1c",
          "3.3.1d",
          "3.3.1e",
          "3.3.1f",
          "3.3.1g",
          "3.3.1.1a",
          "3.3.1.1b",
          "3.3.1.1.1",
          "3.3.1.1.1a",
          "3.3.1.1.1b"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "is_check",
            "in": "query",
            "description": "Do not pass in this parameter for upload",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "event_polaroids_file": {
                    "type": "string",
                    "format": "binary",
                    "example": ""
                  },
                  "event_polaroids_message": {
                    "example": "",
                    "type": "string"
                  },
                  "event_polaroids_tag": {
                    "example": "",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventPolaroidsSimple"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/collaborative-log": {
      "get": {
        "summary": "Event Collaborate",
        "deprecated": false,
        "description": "Retrieve events that has ended",
        "operationId": "getCollaborativeLogs",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Collaborate",
          "T3 野放成就 Achievement",
          "3.1",
          "3.2a"
        ],
        "parameters": [
          {
            "name": "rewilding_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Events"
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/collaborative-log/{eventId}/questionnaire": {
      "post": {
        "summary": "Create CollabLog Questionnaire",
        "deprecated": false,
        "description": "Create event polaroid (Uploaded file will be uploaded on Flickr). Read location data and save to database",
        "operationId": "createCollabQuestionnaire",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Collaborate",
          "T3 野放成就 Achievement",
          "3.1.1e",
          "3.1.1f",
          "3.1.1g"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCollaborativeLogQuestionnaire"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsSimple"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/collaborative-log/{eventId}/random-count": {
      "get": {
        "summary": "Retrieve Random Count",
        "deprecated": false,
        "description": "Retrieve random count",
        "operationId": "getRandomCount",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Collaborate",
          "T3 野放成就 Achievement",
          "3.1.1e",
          "3.1.1f",
          "3.1.1g"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCollaborativeLogQuestionnaire"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollaborativeLogRandomCount"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update Random Count",
        "deprecated": false,
        "description": "Update random count up to 3",
        "operationId": "updateRandomCount",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Collaborate",
          "T3 野放成就 Achievement",
          "3.1.1e",
          "3.1.1f",
          "3.1.1g"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCollaborativeLogQuestionnaire"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollaborativeLogRandomCount"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/collaborative-log/{eventId}/experience": {
      "post": {
        "summary": "Create CollabLog Experience",
        "deprecated": false,
        "description": "Create event polaroid (Uploaded file will be uploaded on Flickr). Read location data and save to database",
        "operationId": "createCollabExp",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "✅ Event Collaborate",
          "T3 野放成就 Achievement",
          "3.3.1.1.1.1d",
          "3.3.1.1.1.1e"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "String ID of the event",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCollaborativeLogExperience"
              },
              "example": {
                "events_experience": "EXPERIENCE_1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsSimple"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/rewilding-register/references": {
      "get": {
        "summary": "Rewilding register",
        "deprecated": true,
        "description": "Rewilding register options. Replace by https://app.apidog.com/link/project/607604/apis/api-9003159",
        "tags": ["OOSA_REWILD_SERVICE", "Rewilding Register"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewildingOptions"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/rewilding-register": {
      "post": {
        "summary": "Create rewilding register",
        "deprecated": true,
        "description": "Create rewilding register",
        "operationId": "create-rewilding",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "Rewilding Register",
          "T1 探索 Discover"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "rewilding_apply_official": {
                    "type": "boolean",
                    "default": "true,",
                    "example": "true,"
                  },
                  "rewilding_lat": {
                    "type": "number",
                    "default": "7.9422379184033,",
                    "example": "7.9422379184033,"
                  },
                  "rewilding_lng": {
                    "type": "number",
                    "default": 112.95275441058537,
                    "example": 112.95275441058537
                  },
                  "rewilding_name": {
                    "type": "string",
                    "default": "TEST_REWILDING#2",
                    "example": "TEST_REWILDING#2"
                  },
                  "rewilding_photo[]": {
                    "type": "string",
                    "format": "binary",
                    "example": ""
                  },
                  "rewilding_pocket_list": {
                    "type": "string",
                    "default": "66005467624a973abd8787d7",
                    "example": "66005467624a973abd8787d7"
                  },
                  "rewilding_reference_information": {
                    "type": "string",
                    "default": "www.google.com",
                    "example": "www.google.com"
                  },
                  "rewilding_type": {
                    "type": "string",
                    "default": "662696ebfc72a35c9b066f41",
                    "example": "662696ebfc72a35c9b066f41"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rewilding"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "get": {
        "summary": "Retrieve rewilding register",
        "deprecated": true,
        "description": "Retrieve rewilding register (使用者自建野放點清單)",
        "operationId": "get-rewilding-register",
        "tags": ["OOSA_REWILD_SERVICE", "Rewilding Register"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rewilding"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/rewilding/places/{placeId}/photos/{photoId}": {
      "get": {
        "summary": "get photo url from google",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "placeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "photoId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "303": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {
              "Location": {
                "example": "",
                "required": false,
                "description": "",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "title": "",
                      "description": "message"
                    }
                  },
                  "required": ["message"]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/rewilding-search": {
      "get": {
        "summary": "Search rewilding from Google",
        "deprecated": true,
        "description": "Search rewilding from Google",
        "operationId": "search-rewilding",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "Rewilding Search",
          "T1 探索 Discover",
          "T2 揪團基地 Basecamp",
          "2.1c.1",
          "2.1c.1.1",
          "2.1c.1.1a",
          "2.1c.1.1b"
        ],
        "parameters": [
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Activity type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "mountain_climbing",
                "hiking_area",
                "ecol_landscape",
                "camping",
                "picnic",
                "water_related"
              ]
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search by Text",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewildingSearch"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/rewilding-searchText": {
      "get": {
        "summary": "野放點關鍵字搜尋",
        "deprecated": false,
        "description": "矩形是經緯度可視區域，以兩個 沿著低點和高點對角線。低點標示西南方 矩形的角落，高點代表東北方",
        "operationId": "rewildSearchText",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "Rewilding Search",
          "T1 探索 Discover",
          "T2 揪團基地 Basecamp",
          "1.2"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "",
            "required": false,
            "example": "布罗莫山",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rectangle_low_lat",
            "in": "query",
            "description": "",
            "required": false,
            "example": "-7.942238300570569",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rectangle_low_lng",
            "in": "query",
            "description": "",
            "required": false,
            "example": "112.95262590230753",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rectangle_hight_lat",
            "in": "query",
            "description": "",
            "required": false,
            "example": -7.9345025554553565,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "rectangle_hight_lng",
            "in": "query",
            "description": "",
            "required": false,
            "example": 112.96773210298768,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "",
            "required": false,
            "example": "zh-TW",
            "schema": {
              "type": "string",
              "enum": ["zh-TW", "en"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "rewilding_id": {
                        "type": "string"
                      },
                      "rewilding_area": {
                        "type": "string"
                      },
                      "rewilding_location": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "rewilding_country_code": {
                        "type": "string"
                      },
                      "rewilding_achievement_type": {
                        "type": "string"
                      },
                      "rewilding_achievement_type_id": {
                        "type": "string"
                      },
                      "rewilding_name": {
                        "type": "string"
                      },
                      "rewilding_rating": {
                        "type": "integer"
                      },
                      "rewilding_lat": {
                        "type": "number"
                      },
                      "rewilding_lng": {
                        "type": "number"
                      },
                      "rewilding_place_id": {
                        "type": "string"
                      },
                      "rewilding_elevation": {
                        "type": "number"
                      },
                      "rewilding_photos": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rewilding_photos_id": {
                              "type": "string"
                            },
                            "rewilding_photos_path": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "rewilding_photos_id",
                            "rewilding_photos_path"
                          ]
                        }
                      },
                      "rewilding_reference_links": {
                        "type": "null"
                      },
                      "rewilding_apply_official": {
                        "type": "boolean"
                      },
                      "rewilding_created_by": {
                        "type": "string"
                      },
                      "rewilding_created_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/rewilding-searchNearby": {
      "get": {
        "summary": "附近的野放點",
        "deprecated": false,
        "description": "",
        "operationId": "rewildSearchNearby",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "Rewilding Search",
          "T1 探索 Discover",
          "T2 揪團基地 Basecamp",
          "1.1a",
          "1.3"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "example": "hiking_area,national_park",
            "schema": {
              "type": "string",
              "enum": [
                "mountain_climbing",
                "hiking_area",
                "ecol_landscape",
                "camping",
                "picnic",
                "water_related"
              ]
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "",
            "required": false,
            "example": -7.942238300570569,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "lng",
            "in": "query",
            "description": "",
            "required": false,
            "example": 112.95262590230753,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "半徑(單位為公尺)",
            "required": false,
            "example": 4000,
            "schema": {
              "type": "number",
              "minimum": 0,
              "maximum": 50000
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "",
            "required": false,
            "example": "en",
            "schema": {
              "type": "string",
              "enum": ["en", "zh-TW"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "rewilding_id": {
                        "type": "string"
                      },
                      "rewilding_area": {
                        "type": "string"
                      },
                      "rewilding_location": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "rewilding_country_code": {
                        "type": "string"
                      },
                      "rewilding_achievement_type": {
                        "type": "string"
                      },
                      "rewilding_achievement_type_id": {
                        "type": "string"
                      },
                      "rewilding_name": {
                        "type": "string"
                      },
                      "rewilding_rating": {
                        "type": "integer"
                      },
                      "rewilding_lat": {
                        "type": "number"
                      },
                      "rewilding_lng": {
                        "type": "number"
                      },
                      "rewilding_place_id": {
                        "type": "string"
                      },
                      "rewilding_elevation": {
                        "type": "number"
                      },
                      "rewilding_photos": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rewilding_photos_id": {
                              "type": "string"
                            },
                            "rewilding_photos_path": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "rewilding_photos_id",
                            "rewilding_photos_path"
                          ]
                        }
                      },
                      "rewilding_reference_links": {
                        "type": "null"
                      },
                      "rewilding_apply_official": {
                        "type": "boolean"
                      },
                      "rewilding_created_by": {
                        "type": "string"
                      },
                      "rewilding_created_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "rewilding_id",
                      "rewilding_area",
                      "rewilding_location",
                      "rewilding_country_code",
                      "rewilding_achievement_type",
                      "rewilding_achievement_type_id",
                      "rewilding_name",
                      "rewilding_rating",
                      "rewilding_lat",
                      "rewilding_lng",
                      "rewilding_place_id",
                      "rewilding_elevation",
                      "rewilding_photos",
                      "rewilding_reference_links",
                      "rewilding_apply_official",
                      "rewilding_created_by",
                      "rewilding_created_at"
                    ]
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/rewilding-autocomplete": {
      "get": {
        "summary": "野放點自動完成",
        "deprecated": false,
        "description": "",
        "operationId": "rewildAutoComplete",
        "tags": [
          "T1 探索 Discover",
          "T2 揪團基地 Basecamp",
          "OOSA_REWILD_SERVICE",
          "Rewilding Search",
          "1.2a",
          "1.2b"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "description": "關鍵字",
            "required": false,
            "example": "象山",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "語言",
            "required": false,
            "example": "en",
            "schema": {
              "type": "string",
              "enum": ["en", "zh-TW"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "place_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "location": {
                        "type": "string"
                      },
                      "type": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": ["place_id", "name", "location", "type"]
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/rewilding/places/{place_id}": {
      "get": {
        "summary": "從google detail取得野放點資訊",
        "deprecated": false,
        "description": "將google place的資料轉成rewilding的格式，reference_links從google search取得前三個連結資料",
        "operationId": "rewildGoogle",
        "tags": [
          "OOSA_REWILD_SERVICE",
          "Rewilding Search",
          "T1 探索 Discover",
          "_R1"
        ],
        "parameters": [
          {
            "name": "place_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rewilding_id": {
                      "type": "string"
                    },
                    "rewilding_area": {
                      "type": "string"
                    },
                    "rewilding_location": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "rewilding_country_code": {
                      "type": "string"
                    },
                    "rewilding_achievement_type": {
                      "type": "string"
                    },
                    "rewilding_achievement_type_id": {
                      "type": "string"
                    },
                    "rewilding_name": {
                      "type": "string"
                    },
                    "rewilding_rating": {
                      "type": "integer"
                    },
                    "rewilding_lat": {
                      "type": "number"
                    },
                    "rewilding_lng": {
                      "type": "number"
                    },
                    "rewilding_place_id": {
                      "type": "string"
                    },
                    "rewilding_elevation": {
                      "type": "number"
                    },
                    "rewilding_photos": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "rewilding_photos_id": {
                            "type": "string"
                          },
                          "rewilding_photos_path": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "rewilding_photos_id",
                          "rewilding_photos_path"
                        ]
                      }
                    },
                    "rewilding_reference_links": {
                      "type": "null"
                    },
                    "rewilding_apply_official": {
                      "type": "boolean"
                    },
                    "rewilding_created_by": {
                      "type": "string"
                    },
                    "rewilding_created_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "rewilding_id",
                    "rewilding_area",
                    "rewilding_location",
                    "rewilding_country_code",
                    "rewilding_achievement_type",
                    "rewilding_achievement_type_id",
                    "rewilding_name",
                    "rewilding_rating",
                    "rewilding_lat",
                    "rewilding_lng",
                    "rewilding_place_id",
                    "rewilding_elevation",
                    "rewilding_photos",
                    "rewilding_reference_links",
                    "rewilding_apply_official",
                    "rewilding_created_by",
                    "rewilding_created_at"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/": {
      "get": {
        "summary": "Untitled Endpoint",
        "deprecated": false,
        "description": "「精華行程」建立",
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/maps/api/place/textsearch/json": {
      "get": {
        "summary": "文字搜尋",
        "deprecated": false,
        "description": "",
        "tags": ["guest"],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "",
            "required": false,
            "example": "{{Goog-Api-Key}}",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "",
            "required": false,
            "example": "zh-TW",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "https://developers.google.com/maps/documentation/places/web-service/supported_types?hl=zh-tw",
            "required": false,
            "example": "",
            "schema": {
              "type": "string",
              "enum": ["campground", "tourist_attraction"]
            }
          },
          {
            "name": "X-Goog-FieldMask",
            "in": "header",
            "description": "",
            "required": false,
            "example": "places.id,places.types,places.displayName,places.formattedAddress,places.location,places.rating,places.userRatingCount",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/maps/api/place/nearbysearch/json": {
      "get": {
        "summary": "NearbySearch",
        "deprecated": false,
        "description": "",
        "tags": ["guest"],
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "description": "",
            "required": false,
            "example": "25.080000968505708, 121.57982302846756",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "",
            "required": false,
            "example": "5000",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "",
            "required": false,
            "example": "{{Goog-Api-Key}}",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "",
            "required": false,
            "example": "zh-TW",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "https://developers.google.com/maps/documentation/places/web-service/supported_types?hl=zh-tw",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/v1/places:searchNearby": {
      "post": {
        "summary": "搜尋附近地點 (新)",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "X-Goog-FieldMask",
            "in": "header",
            "description": "",
            "required": false,
            "example": "{{Goog-FieldMask}}",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Goog-Api-Key",
            "in": "header",
            "description": "",
            "required": false,
            "example": "{{Goog-Api-Key}}",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "locationRestriction": {
                    "type": "object",
                    "properties": {
                      "circle": {
                        "type": "object",
                        "properties": {
                          "center": {
                            "type": "object",
                            "properties": {
                              "latitude": {
                                "type": "number"
                              },
                              "longitude": {
                                "type": "number"
                              }
                            },
                            "required": ["latitude", "longitude"]
                          },
                          "radius": {
                            "type": "number"
                          }
                        },
                        "required": ["center", "radius"]
                      }
                    },
                    "required": ["circle"]
                  },
                  "maxResultCount": {
                    "type": "integer"
                  },
                  "languageCode": {
                    "type": "string"
                  },
                  "includedTypes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "hiking_area",
                        "tourist_attraction",
                        "park",
                        "playground",
                        "campground",
                        "camping_cabin",
                        "national_park"
                      ]
                    }
                  }
                },
                "required": [
                  "locationRestriction",
                  "maxResultCount",
                  "languageCode",
                  "includedTypes"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/v1/places:searchText": {
      "post": {
        "summary": "Text Search (新版)",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "X-Goog-FieldMask",
            "in": "header",
            "description": "",
            "required": false,
            "example": "{{Goog-FieldMask}}",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Goog-Api-Key",
            "in": "header",
            "description": "",
            "required": false,
            "example": "{{Goog-Api-Key}}",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "locationBias": {
                    "type": "object",
                    "properties": {
                      "circle": {
                        "type": "object",
                        "properties": {
                          "center": {
                            "type": "object",
                            "properties": {
                              "latitude": {
                                "type": "number",
                                "faker": "25.272241666454992"
                              },
                              "longitude": {
                                "type": "number",
                                "faker": "121.51826541064499"
                              }
                            },
                            "required": ["latitude", "longitude"]
                          },
                          "radius": {
                            "type": "number",
                            "faker": "5000.0"
                          }
                        },
                        "required": ["center", "radius"]
                      }
                    },
                    "required": ["circle"]
                  },
                  "pageSize": {
                    "type": "integer",
                    "faker": "20"
                  },
                  "languageCode": {
                    "type": "string",
                    "faker": "zh-TW"
                  },
                  "includedType": {
                    "type": "string",
                    "description": "hiking_area"
                  },
                  "textQuery": {
                    "type": "string"
                  },
                  "strictTypeFiltering": {
                    "type": "boolean",
                    "faker": "false"
                  }
                },
                "required": [
                  "locationBias",
                  "pageSize",
                  "languageCode",
                  "textQuery"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/v1/places:autocomplete": {
      "post": {
        "summary": "自動完成 (新版)",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "X-Goog-Api-Key",
            "in": "header",
            "description": "",
            "required": false,
            "example": "{{Goog-Api-Key}}",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "locationRestriction": {
                    "type": "object",
                    "properties": {
                      "circle": {
                        "type": "object",
                        "properties": {
                          "center": {
                            "type": "object",
                            "properties": {
                              "latitude": {
                                "type": "number",
                                "faker": "25.272241666454992"
                              },
                              "longitude": {
                                "type": "number",
                                "faker": "121.51826541064499"
                              }
                            },
                            "required": ["latitude", "longitude"]
                          },
                          "radius": {
                            "type": "number",
                            "faker": "5000.0"
                          }
                        },
                        "required": ["center", "radius"]
                      }
                    },
                    "required": ["circle"]
                  },
                  "languageCode": {
                    "type": "string",
                    "faker": "zh-TW"
                  },
                  "includedPrimaryTypes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "input": {
                    "type": "string"
                  }
                },
                "required": [
                  "locationRestriction",
                  "languageCode",
                  "includedPrimaryTypes",
                  "input"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/self-service/settings": {
      "post": {
        "summary": "Complete Settings Flow",
        "deprecated": false,
        "description": "Use this endpoint to complete a settings flow by sending an identity's updated password. This endpoint\nbehaves differently for API and browser flows.\n\nAPI-initiated flows expect `application/json` to be sent in the body and respond with\nHTTP 200 and an application/json body with the session token on success;\nHTTP 303 redirect to a fresh settings flow if the original flow expired with the appropriate error messages set;\nHTTP 400 on form validation errors.\nHTTP 401 when the endpoint is called without a valid session token.\nHTTP 403 when `selfservice.flows.settings.privileged_session_max_age` was reached or the session's AAL is too low.\nImplies that the user needs to re-authenticate.\n\nBrowser flows without HTTP Header `Accept` or with `Accept: text/*` respond with\na HTTP 303 redirect to the post/after settings URL or the `return_to` value if it was set and if the flow succeeded;\na HTTP 303 redirect to the Settings UI URL with the flow ID containing the validation errors otherwise.\na HTTP 303 redirect to the login endpoint when `selfservice.flows.settings.privileged_session_max_age` was reached or the session's AAL is too low.\n\nBrowser flows with HTTP Header `Accept: application/json` respond with\nHTTP 200 and a application/json body with the signed in identity and a `Set-Cookie` header on success;\nHTTP 303 redirect to a fresh login flow if the original flow expired with the appropriate error messages set;\nHTTP 401 when the endpoint is called without a valid session cookie.\nHTTP 403 when the page is accessed without a session cookie or the session's AAL is too low.\nHTTP 400 on form validation errors.\n\nDepending on your configuration this endpoint might return a 403 error if the session has a lower Authenticator\nAssurance Level (AAL) than is possible for the identity. This can happen if the identity has password + webauthn\ncredentials (which would result in AAL2) but the session has only AAL1. If this error occurs, ask the user\nto sign in with the second factor (happens automatically for server-side browser flows) or change the configuration.\n\nIf this endpoint is called with a `Accept: application/json` HTTP header, the response contains the flow without a redirect. In the\ncase of an error, the `error.id` of the JSON response body can be one of:\n\n`session_refresh_required`: The identity requested to change something that needs a privileged session. Redirect\nthe identity to the login init endpoint with query parameters `?refresh=true&return_to=<the-current-browser-url>`,\nor initiate a refresh login flow otherwise.\n`security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.\n`session_inactive`: No Ory Session was found - sign in a user first.\n`security_identity_mismatch`: The flow was interrupted with `session_refresh_required` but apparently some other\nidentity logged in instead.\n`security_identity_mismatch`: The requested `?return_to` address is not allowed to be used. Adjust this in the configuration!\n`browser_location_change_required`: Usually sent when an AJAX request indicates that the browser needs to open a specific URL.\nMost likely used in Social Sign In flows.\n\nMore information can be found at [Ory Kratos User Settings & Profile Management Documentation](../self-service/flows/user-settings).",
        "operationId": "updateSettingsFlow",
        "tags": ["frontend"],
        "parameters": [
          {
            "name": "flow",
            "in": "query",
            "description": "The Settings Flow ID\n\nThe value for this parameter comes from `flow` URL Query parameter sent to your\napplication (e.g. `/settings?flow=abcde`).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Session-Token",
            "in": "header",
            "description": "The Session Token of the Identity performing the settings flow.",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Cookie",
            "in": "header",
            "description": "HTTP Cookies\n\nWhen using the SDK in a browser app, on the server side you must include the HTTP Cookie Header\nsent by the client to your server here. This ensures that CSRF and session cookies are respected.",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settingsFlow"
                }
              }
            },
            "headers": {}
          },
          "303": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settingsFlow"
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "410": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBrowserLocationChangeRequired"
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/self-service/recovery": {
      "post": {
        "summary": "Update Recovery Flow",
        "deprecated": false,
        "description": "Use this endpoint to update a recovery flow. This endpoint\nbehaves differently for API and browser flows and has several states:\n\n`choose_method` expects `flow` (in the URL query) and `email` (in the body) to be sent\nand works with API- and Browser-initiated flows.\nFor API clients and Browser clients with HTTP Header `Accept: application/json` it either returns a HTTP 200 OK when the form is valid and HTTP 400 OK when the form is invalid.\nand a HTTP 303 See Other redirect with a fresh recovery flow if the flow was otherwise invalid (e.g. expired).\nFor Browser clients without HTTP Header `Accept` or with `Accept: text/*` it returns a HTTP 303 See Other redirect to the Recovery UI URL with the Recovery Flow ID appended.\n`sent_email` is the success state after `choose_method` for the `link` method and allows the user to request another recovery email. It\nworks for both API and Browser-initiated flows and returns the same responses as the flow in `choose_method` state.\n`passed_challenge` expects a `token` to be sent in the URL query and given the nature of the flow (\"sending a recovery link\")\ndoes not have any API capabilities. The server responds with a HTTP 303 See Other redirect either to the Settings UI URL\n(if the link was valid) and instructs the user to update their password, or a redirect to the Recover UI URL with\na new Recovery Flow ID which contains an error message that the recovery link was invalid.\n\nMore information can be found at [Ory Kratos Account Recovery Documentation](../self-service/flows/account-recovery).",
        "operationId": "updateRecoveryFlow",
        "tags": ["frontend"],
        "parameters": [
          {
            "name": "flow",
            "in": "query",
            "description": "The Recovery Flow ID\n\nThe value for this parameter comes from `flow` URL Query parameter sent to your\napplication (e.g. `/recovery?flow=abcde`).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Recovery Token\n\nThe recovery token which completes the recovery request. If the token\nis invalid (e.g. expired) an error will be shown to the end-user.\n\nThis parameter is usually set in a link and not used by any direct API call.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Cookie",
            "in": "header",
            "description": "HTTP Cookies\n\nWhen using the SDK in a browser app, on the server side you must include the HTTP Cookie Header\nsent by the client to your server here. This ensures that CSRF and session cookies are respected.",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recoveryFlow"
                }
              }
            },
            "headers": {}
          },
          "303": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recoveryFlow"
                }
              }
            },
            "headers": {}
          },
          "410": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBrowserLocationChangeRequired"
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/self-service/logout/browser": {
      "get": {
        "summary": "Create a Logout URL for Browsers",
        "deprecated": false,
        "description": "This endpoint initializes a browser-based user logout flow and a URL which can be used to log out the user.\n\nThis endpoint is NOT INTENDED for API clients and only works\nwith browsers (Chrome, Firefox, ...). For API clients you can\ncall the `/self-service/logout/api` URL directly with the Ory Session Token.\n\nThe URL is only valid for the currently signed in user. If no user is signed in, this endpoint returns\na 401 error.\n\nWhen calling this endpoint from a backend, please ensure to properly forward the HTTP cookies.",
        "operationId": "createBrowserLogoutFlow",
        "tags": ["frontend"],
        "parameters": [
          {
            "name": "return_to",
            "in": "query",
            "description": "Return to URL\n\nThe URL to which the browser should be redirected to after the logout\nhas been performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cookie",
            "in": "header",
            "description": "HTTP Cookies\n\nIf you call this endpoint from a backend, please include the\noriginal Cookie header in the request.",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logoutFlow"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/self-service/logout": {
      "get": {
        "summary": "Update Logout Flow",
        "deprecated": false,
        "description": "This endpoint logs out an identity in a self-service manner.\n\nIf the `Accept` HTTP header is not set to `application/json`, the browser will be redirected (HTTP 303 See Other)\nto the `return_to` parameter of the initial request or fall back to `urls.default_return_to`.\n\nIf the `Accept` HTTP header is set to `application/json`, a 204 No Content response\nwill be sent on successful logout instead.\n\nThis endpoint is NOT INTENDED for API clients and only works\nwith browsers (Chrome, Firefox, ...). For API clients you can\ncall the `/self-service/logout/api` URL directly with the Ory Session Token.\n\nMore information can be found at [Ory Kratos User Logout Documentation](https://www.ory.sh/docs/next/kratos/self-service/flows/user-logout).",
        "operationId": "updateLogoutFlow",
        "tags": ["frontend"],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "A Valid Logout Token\n\nIf you do not have a logout token because you only have a session cookie,\ncall `/self-service/logout/browser` to generate a URL for this endpoint.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "return_to",
            "in": "query",
            "description": "The URL to return to after the logout was completed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Cookie",
            "in": "header",
            "description": "HTTP Cookies\n\nWhen using the SDK in a browser app, on the server side you must include the HTTP Cookie Header\nsent by the client to your server here. This ensures that CSRF and session cookies are respected.",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "303": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/self-service/verification": {
      "post": {
        "summary": "Complete Verification Flow",
        "deprecated": false,
        "description": "Use this endpoint to complete a verification flow. This endpoint\nbehaves differently for API and browser flows and has several states:\n\n`choose_method` expects `flow` (in the URL query) and `email` (in the body) to be sent\nand works with API- and Browser-initiated flows.\nFor API clients and Browser clients with HTTP Header `Accept: application/json` it either returns a HTTP 200 OK when the form is valid and HTTP 400 OK when the form is invalid\nand a HTTP 303 See Other redirect with a fresh verification flow if the flow was otherwise invalid (e.g. expired).\nFor Browser clients without HTTP Header `Accept` or with `Accept: text/*` it returns a HTTP 303 See Other redirect to the Verification UI URL with the Verification Flow ID appended.\n`sent_email` is the success state after `choose_method` when using the `link` method and allows the user to request another verification email. It\nworks for both API and Browser-initiated flows and returns the same responses as the flow in `choose_method` state.\n`passed_challenge` expects a `token` to be sent in the URL query and given the nature of the flow (\"sending a verification link\")\ndoes not have any API capabilities. The server responds with a HTTP 303 See Other redirect either to the Settings UI URL\n(if the link was valid) and instructs the user to update their password, or a redirect to the Verification UI URL with\na new Verification Flow ID which contains an error message that the verification link was invalid.\n\nMore information can be found at [Ory Kratos Email and Phone Verification Documentation](https://www.ory.sh/docs/kratos/self-service/flows/verify-email-account-activation).",
        "operationId": "updateVerificationFlow",
        "tags": ["frontend"],
        "parameters": [
          {
            "name": "flow",
            "in": "query",
            "description": "The Verification Flow ID\n\nThe value for this parameter comes from `flow` URL Query parameter sent to your\napplication (e.g. `/verification?flow=abcde`).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Verification Token\n\nThe verification token which completes the verification request. If the token\nis invalid (e.g. expired) an error will be shown to the end-user.\n\nThis parameter is usually set in a link and not used by any direct API call.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Cookie",
            "in": "header",
            "description": "HTTP Cookies\n\nWhen using the SDK in a browser app, on the server side you must include the HTTP Cookie Header\nsent by the client to your server here. This ensures that CSRF and session cookies are respected.",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/verificationFlow"
                }
              }
            },
            "headers": {}
          },
          "303": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/verificationFlow"
                }
              }
            },
            "headers": {}
          },
          "410": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "get": {
        "summary": "Complete Verification Flow With Link",
        "deprecated": false,
        "description": "Use this endpoint to complete a verification flow. This endpoint\nbehaves differently for API and browser flows and has several states:\n\n`choose_method` expects `flow` (in the URL query) and `email` (in the body) to be sent\nand works with API- and Browser-initiated flows.\nFor API clients and Browser clients with HTTP Header `Accept: application/json` it either returns a HTTP 200 OK when the form is valid and HTTP 400 OK when the form is invalid\nand a HTTP 303 See Other redirect with a fresh verification flow if the flow was otherwise invalid (e.g. expired).\nFor Browser clients without HTTP Header `Accept` or with `Accept: text/*` it returns a HTTP 303 See Other redirect to the Verification UI URL with the Verification Flow ID appended.\n`sent_email` is the success state after `choose_method` when using the `link` method and allows the user to request another verification email. It\nworks for both API and Browser-initiated flows and returns the same responses as the flow in `choose_method` state.\n`passed_challenge` expects a `token` to be sent in the URL query and given the nature of the flow (\"sending a verification link\")\ndoes not have any API capabilities. The server responds with a HTTP 303 See Other redirect either to the Settings UI URL\n(if the link was valid) and instructs the user to update their password, or a redirect to the Verification UI URL with\na new Verification Flow ID which contains an error message that the verification link was invalid.\n\nMore information can be found at [Ory Kratos Email and Phone Verification Documentation](https://www.ory.sh/docs/kratos/self-service/flows/verify-email-account-activation).",
        "operationId": "getCompleteVerificationFlow",
        "tags": ["frontend"],
        "parameters": [
          {
            "name": "flow",
            "in": "query",
            "description": "The Verification Flow ID\n\nThe value for this parameter comes from `flow` URL Query parameter sent to your\napplication (e.g. `/verification?flow=abcde`).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "Verification Token\n\nThe verification token which completes the verification request. If the token\nis invalid (e.g. expired) an error will be shown to the end-user.\n\nThis parameter is usually set in a link and not used by any direct API call.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Cookie",
            "in": "header",
            "description": "HTTP Cookies\n\nWhen using the SDK in a browser app, on the server side you must include the HTTP Cookie Header\nsent by the client to your server here. This ensures that CSRF and session cookies are respected.",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "examples": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/verificationFlow"
                }
              }
            },
            "headers": {}
          },
          "303": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/verificationFlow"
                }
              }
            },
            "headers": {}
          },
          "410": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/self-service/errors": {
      "get": {
        "summary": "Get User-Flow Errors",
        "deprecated": false,
        "description": "This endpoint returns the error associated with a user-facing self service errors.\n\nThis endpoint supports stub values to help you implement the error UI:\n\n`?id=stub:500` - returns a stub 500 (Internal Server Error) error.\n\nMore information can be found at [Ory Kratos User User Facing Error Documentation](https://www.ory.sh/docs/kratos/self-service/flows/user-facing-errors).",
        "operationId": "getFlowError",
        "tags": ["frontend"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Error is the error's ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/flowError"
                }
              }
            },
            "headers": {}
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/self-service/settings/browser": {
      "get": {
        "summary": "Create Settings Flow for Browsers",
        "deprecated": false,
        "description": "This endpoint initializes a browser-based user settings flow. Once initialized, the browser will be redirected to\n`selfservice.flows.settings.ui_url` with the flow ID set as the query parameter `?flow=`. If no valid\nOry Kratos Session Cookie is included in the request, a login flow will be initialized.\n\nIf this endpoint is opened as a link in the browser, it will be redirected to\n`selfservice.flows.settings.ui_url` with the flow ID set as the query parameter `?flow=`. If no valid user session\nwas set, the browser will be redirected to the login endpoint.\n\nIf this endpoint is called via an AJAX request, the response contains the settings flow without any redirects\nor a 401 forbidden error if no valid session was set.\n\nDepending on your configuration this endpoint might return a 403 error if the session has a lower Authenticator\nAssurance Level (AAL) than is possible for the identity. This can happen if the identity has password + webauthn\ncredentials (which would result in AAL2) but the session has only AAL1. If this error occurs, ask the user\nto sign in with the second factor (happens automatically for server-side browser flows) or change the configuration.\n\nIf this endpoint is called via an AJAX request, the response contains the flow without a redirect. In the\ncase of an error, the `error.id` of the JSON response body can be one of:\n\n`security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.\n`session_inactive`: No Ory Session was found - sign in a user first.\n`security_identity_mismatch`: The requested `?return_to` address is not allowed to be used. Adjust this in the configuration!\n\nThis endpoint is NOT INTENDED for clients that do not have a browser (Chrome, Firefox, ...) as cookies are needed.\n\nMore information can be found at [Ory Kratos User Settings & Profile Management Documentation](../self-service/flows/user-settings).",
        "operationId": "createBrowserSettingsFlow",
        "tags": ["frontend"],
        "parameters": [
          {
            "name": "return_to",
            "in": "query",
            "description": "The URL to return the browser to after the flow was completed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Cookie",
            "in": "header",
            "description": "HTTP Cookies\n\nWhen using the SDK in a browser app, on the server side you must include the HTTP Cookie Header\nsent by the client to your server here. This ensures that CSRF and session cookies are respected.",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settingsFlow"
                }
              }
            },
            "headers": {}
          },
          "303": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/self-service/recovery/browser": {
      "get": {
        "summary": "Create Recovery Flow for Browsers",
        "deprecated": false,
        "description": "This endpoint initializes a browser-based account recovery flow. Once initialized, the browser will be redirected to\n`selfservice.flows.recovery.ui_url` with the flow ID set as the query parameter `?flow=`. If a valid user session\nexists, the browser is returned to the configured return URL.\n\nIf this endpoint is called via an AJAX request, the response contains the recovery flow without any redirects\nor a 400 bad request error if the user is already authenticated.\n\nThis endpoint is NOT INTENDED for clients that do not have a browser (Chrome, Firefox, ...) as cookies are needed.\n\nMore information can be found at [Ory Kratos Account Recovery Documentation](../self-service/flows/account-recovery).",
        "operationId": "createBrowserRecoveryFlow",
        "tags": ["frontend"],
        "parameters": [
          {
            "name": "return_to",
            "in": "query",
            "description": "The URL to return the browser to after the flow was completed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recoveryFlow"
                }
              }
            },
            "headers": {}
          },
          "303": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/self-service/verification/browser": {
      "get": {
        "summary": "Create Verification Flow for Browser Clients",
        "deprecated": false,
        "description": "This endpoint initializes a browser-based account verification flow. Once initialized, the browser will be redirected to\n`selfservice.flows.verification.ui_url` with the flow ID set as the query parameter `?flow=`.\n\nIf this endpoint is called via an AJAX request, the response contains the recovery flow without any redirects.\n\nThis endpoint is NOT INTENDED for API clients and only works with browsers (Chrome, Firefox, ...).\n\nMore information can be found at [Ory Kratos Email and Phone Verification Documentation](https://www.ory.sh/docs/kratos/self-service/flows/verify-email-account-activation).",
        "operationId": "createBrowserVerificationFlow",
        "tags": ["frontend"],
        "parameters": [
          {
            "name": "return_to",
            "in": "query",
            "description": "The URL to return the browser to after the flow was completed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/verificationFlow"
                }
              }
            },
            "headers": {}
          },
          "303": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/self-service/login/browser": {
      "get": {
        "summary": "初始登入流程(取得flowId)",
        "deprecated": false,
        "description": "This endpoint initializes a browser-based user login flow. This endpoint will set the appropriate\ncookies and anti-CSRF measures required for browser-based flows.\n\nIf this endpoint is opened as a link in the browser, it will be redirected to\n`selfservice.flows.login.ui_url` with the flow ID set as the query parameter `?flow=`. If a valid user session\nexists already, the browser will be redirected to `urls.default_redirect_url` unless the query parameter\n`?refresh=true` was set.\n\nIf this endpoint is called via an AJAX request, the response contains the flow without a redirect. In the\ncase of an error, the `error.id` of the JSON response body can be one of:\n\n`session_already_available`: The user is already signed in.\n`session_aal1_required`: Multi-factor auth (e.g. 2fa) was requested but the user has no session yet.\n`security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.\n`security_identity_mismatch`: The requested `?return_to` address is not allowed to be used. Adjust this in the configuration!\n\nThe optional query parameter login_challenge is set when using Kratos with\nHydra in an OAuth2 flow. See the oauth2_provider.url configuration\noption.\n\nThis endpoint is NOT INTENDED for clients that do not have a browser (Chrome, Firefox, ...) as cookies are needed.\n\nMore information can be found at [Ory Kratos User Login](https://www.ory.sh/docs/kratos/self-service/flows/user-login) and [User Registration Documentation](https://www.ory.sh/docs/kratos/self-service/flows/user-registration).",
        "operationId": "createBrowserLoginFlow",
        "tags": [],
        "parameters": [
          {
            "name": "return_to",
            "in": "query",
            "description": "The URL to return the browser to after the flow was completed.",
            "required": false,
            "example": "https://dev.oosa.life",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "description": "This object represents a login flow. A login flow is initiated at the \"Initiate Login API / Browser Flow\"\nendpoint by a client.\n\nOnce a login flow is completed successfully, a session cookie or session token will be issued.",
                  "properties": {
                    "active": {
                      "description": "The active login method\n\nIf set contains the login method used. If the flow is new, it is unset.\npassword CredentialsTypePassword\noidc CredentialsTypeOIDC\ntotp CredentialsTypeTOTP\nlookup_secret CredentialsTypeLookup\nwebauthn CredentialsTypeWebAuthn\ncode CredentialsTypeCodeAuth\npasskey CredentialsTypePasskey\nprofile CredentialsTypeProfile\nlink_recovery CredentialsTypeRecoveryLink  CredentialsTypeRecoveryLink is a special credential type linked to the link strategy (recovery flow).  It is not used within the credentials object itself.\ncode_recovery CredentialsTypeRecoveryCode",
                      "enum": [
                        "password",
                        "oidc",
                        "totp",
                        "lookup_secret",
                        "webauthn",
                        "code",
                        "passkey",
                        "profile",
                        "link_recovery",
                        "code_recovery"
                      ],
                      "type": "string",
                      "x-go-enum-desc": "password CredentialsTypePassword\noidc CredentialsTypeOIDC\ntotp CredentialsTypeTOTP\nlookup_secret CredentialsTypeLookup\nwebauthn CredentialsTypeWebAuthn\ncode CredentialsTypeCodeAuth\npasskey CredentialsTypePasskey\nprofile CredentialsTypeProfile\nlink_recovery CredentialsTypeRecoveryLink  CredentialsTypeRecoveryLink is a special credential type linked to the link strategy (recovery flow).  It is not used within the credentials object itself.\ncode_recovery CredentialsTypeRecoveryCode"
                    },
                    "created_at": {
                      "description": "CreatedAt is a helper struct field for gobuffalo.pop.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "expires_at": {
                      "description": "ExpiresAt is the time (UTC) when the flow expires. If the user still wishes to log in,\na new flow has to be initiated.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "id": {
                      "description": "ID represents the flow's unique ID. When performing the login flow, this\nrepresents the id in the login UI's query parameter: http://<selfservice.flows.login.ui_url>/?flow=<flow_id>",
                      "format": "uuid",
                      "type": "string"
                    },
                    "issued_at": {
                      "description": "IssuedAt is the time (UTC) when the flow started.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "oauth2_login_challenge": {
                      "description": "Ory OAuth 2.0 Login Challenge.\n\nThis value is set using the `login_challenge` query parameter of the registration and login endpoints.\nIf set will cooperate with Ory OAuth2 and OpenID to act as an OAuth2 server / OpenID Provider.",
                      "type": "string"
                    },
                    "oauth2_login_request": {
                      "type": "object",
                      "properties": {}
                    },
                    "organization_id": {
                      "type": "object",
                      "properties": {}
                    },
                    "refresh": {
                      "description": "Refresh stores whether this login flow should enforce re-authentication.",
                      "type": "boolean"
                    },
                    "request_url": {
                      "description": "RequestURL is the initial URL that was requested from Ory Kratos. It can be used\nto forward information contained in the URL's path or query for example.",
                      "type": "string"
                    },
                    "requested_aal": {
                      "type": "object",
                      "properties": {}
                    },
                    "return_to": {
                      "description": "ReturnTo contains the requested return_to URL.",
                      "type": "string"
                    },
                    "session_token_exchange_code": {
                      "description": "SessionTokenExchangeCode holds the secret code that the client can use to retrieve a session token after the login flow has been completed.\nThis is only set if the client has requested a session token exchange code, and if the flow is of type \"api\",\nand only on creating the login flow.",
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "transient_payload": {
                      "description": "TransientPayload is used to pass data from the login to hooks and email templates",
                      "type": "object",
                      "properties": {}
                    },
                    "type": {
                      "type": "object",
                      "properties": {}
                    },
                    "ui": {
                      "type": "object",
                      "properties": {}
                    },
                    "updated_at": {
                      "description": "UpdatedAt is a helper struct field for gobuffalo.pop.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "type",
                    "expires_at",
                    "issued_at",
                    "request_url",
                    "ui",
                    "state"
                  ],
                  "title": "Login Flow",
                  "type": "object"
                }
              }
            },
            "headers": {}
          },
          "303": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/self-service/registration/flows": {
      "get": {
        "summary": "取得Registration Flow",
        "deprecated": false,
        "description": "",
        "operationId": "getRegistrationFlow",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/self-service/settings/flows": {
      "get": {
        "summary": "Get Settings Flow",
        "deprecated": false,
        "description": "When accessing this endpoint through Ory Kratos' Public API you must ensure that either the Ory Kratos Session Cookie\nor the Ory Kratos Session Token are set.\n\nDepending on your configuration this endpoint might return a 403 error if the session has a lower Authenticator\nAssurance Level (AAL) than is possible for the identity. This can happen if the identity has password + webauthn\ncredentials (which would result in AAL2) but the session has only AAL1. If this error occurs, ask the user\nto sign in with the second factor or change the configuration.\n\nYou can access this endpoint without credentials when using Ory Kratos' Admin API.\n\nIf this endpoint is called via an AJAX request, the response contains the flow without a redirect. In the\ncase of an error, the `error.id` of the JSON response body can be one of:\n\n`security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.\n`session_inactive`: No Ory Session was found - sign in a user first.\n`security_identity_mismatch`: The flow was interrupted with `session_refresh_required` but apparently some other\nidentity logged in instead.\n\nMore information can be found at [Ory Kratos User Settings & Profile Management Documentation](../self-service/flows/user-settings).",
        "operationId": "getSettingsFlow",
        "tags": ["frontend"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID is the Settings Flow ID\n\nThe value for this parameter comes from `flow` URL Query parameter sent to your\napplication (e.g. `/settings?flow=abcde`).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Session-Token",
            "in": "header",
            "description": "The Session Token\n\nWhen using the SDK in an app without a browser, please include the\nsession token here.",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Cookie",
            "in": "header",
            "description": "HTTP Cookies\n\nWhen using the SDK in a browser app, on the server side you must include the HTTP Cookie Header\nsent by the client to your server here. This ensures that CSRF and session cookies are respected.",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settingsFlow"
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "410": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/self-service/recovery/flows": {
      "get": {
        "summary": "Get Recovery Flow",
        "deprecated": false,
        "description": "This endpoint returns a recovery flow's context with, for example, error details and other information.\n\nBrowser flows expect the anti-CSRF cookie to be included in the request's HTTP Cookie Header.\nFor AJAX requests you must ensure that cookies are included in the request or requests will fail.\n\nIf you use the browser-flow for server-side apps, the services need to run on a common top-level-domain\nand you need to forward the incoming HTTP Cookie header to this endpoint:\n\n```js\npseudo-code example\nrouter.get('/recovery', async function (req, res) {\nconst flow = await client.getRecoveryFlow(req.header('Cookie'), req.query['flow'])\n\nres.render('recovery', flow)\n})\n```\n\nMore information can be found at [Ory Kratos Account Recovery Documentation](../self-service/flows/account-recovery).",
        "operationId": "getRecoveryFlow",
        "tags": ["frontend"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The Flow ID\n\nThe value for this parameter comes from `request` URL Query parameter sent to your\napplication (e.g. `/recovery?flow=abcde`).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Cookie",
            "in": "header",
            "description": "HTTP Cookies\n\nWhen using the SDK in a browser app, on the server side you must include the HTTP Cookie Header\nsent by the client to your server here. This ensures that CSRF and session cookies are respected.",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recoveryFlow"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "410": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/self-service/verification/flows": {
      "get": {
        "summary": "Get Verification Flow",
        "deprecated": false,
        "description": "This endpoint returns a verification flow's context with, for example, error details and other information.\n\nBrowser flows expect the anti-CSRF cookie to be included in the request's HTTP Cookie Header.\nFor AJAX requests you must ensure that cookies are included in the request or requests will fail.\n\nIf you use the browser-flow for server-side apps, the services need to run on a common top-level-domain\nand you need to forward the incoming HTTP Cookie header to this endpoint:\n\n```js\npseudo-code example\nrouter.get('/recovery', async function (req, res) {\nconst flow = await client.getVerificationFlow(req.header('cookie'), req.query['flow'])\n\nres.render('verification', flow)\n})\n```\n\nMore information can be found at [Ory Kratos Email and Phone Verification Documentation](https://www.ory.sh/docs/kratos/self-service/flows/verify-email-account-activation).",
        "operationId": "getVerificationFlow",
        "tags": ["frontend"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The Flow ID\n\nThe value for this parameter comes from `request` URL Query parameter sent to your\napplication (e.g. `/verification?flow=abcde`).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cookie",
            "in": "header",
            "description": "HTTP Cookies\n\nWhen using the SDK on the server side you must include the HTTP Cookie Header\noriginally sent to your HTTP handler here.",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/verificationFlow"
                }
              }
            },
            "headers": {}
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/self-service/login/flows": {
      "get": {
        "summary": "取得登入流程所需要的資訊(csrf_token)",
        "deprecated": false,
        "description": "This endpoint returns a login flow's context with, for example, error details and other information.\n\nBrowser flows expect the anti-CSRF cookie to be included in the request's HTTP Cookie Header.\nFor AJAX requests you must ensure that cookies are included in the request or requests will fail.\n\nIf you use the browser-flow for server-side apps, the services need to run on a common top-level-domain\nand you need to forward the incoming HTTP Cookie header to this endpoint:\n\n```js\npseudo-code example\nrouter.get('/login', async function (req, res) {\nconst flow = await client.getLoginFlow(req.header('cookie'), req.query['flow'])\n\nres.render('login', flow)\n})\n```\n\nThis request may fail due to several reasons. The `error.id` can be one of:\n\n`session_already_available`: The user is already signed in.\n`self_service_flow_expired`: The flow is expired and you should request a new one.\n\nMore information can be found at [Ory Kratos User Login](https://www.ory.sh/docs/kratos/self-service/flows/user-login) and [User Registration Documentation](https://www.ory.sh/docs/kratos/self-service/flows/user-registration).",
        "operationId": "getLoginFlow",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The Login Flow ID\n\nThe value for this parameter comes from `flow` URL Query parameter sent to your\napplication (e.g. `/login?flow=abcde`).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID represents the flow's unique ID. When performing the login flow, this\nrepresents the id in the login UI's query parameter: http://<selfservice.flows.login.ui_url>/?flow=<flow_id>"
                    },
                    "organization_id": {
                      "type": "null"
                    },
                    "type": {
                      "type": "string"
                    },
                    "expires_at": {
                      "type": "string",
                      "description": "ExpiresAt is the time (UTC) when the flow expires. If the user still wishes to log in,\na new flow has to be initiated."
                    },
                    "issued_at": {
                      "type": "string",
                      "description": "IssuedAt is the time (UTC) when the flow started."
                    },
                    "request_url": {
                      "type": "string",
                      "description": "RequestURL is the initial URL that was requested from Ory Kratos. It can be used\nto forward information contained in the URL's path or query for example."
                    },
                    "return_to": {
                      "type": "string",
                      "description": "ReturnTo contains the requested return_to URL."
                    },
                    "ui": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "type": "string"
                        },
                        "method": {
                          "type": "string"
                        },
                        "nodes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "group": {
                                "type": "string"
                              },
                              "attributes": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "disabled": {
                                    "type": "boolean"
                                  },
                                  "node_type": {
                                    "type": "string"
                                  },
                                  "required": {
                                    "type": "boolean"
                                  },
                                  "autocomplete": {
                                    "type": "string"
                                  }
                                }
                              },
                              "messages": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "meta": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer"
                                      },
                                      "text": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "context": {
                                        "type": "object",
                                        "properties": {
                                          "provider": {
                                            "type": "string"
                                          },
                                          "provider_id": {
                                            "type": "string"
                                          }
                                        },
                                        "required": ["provider", "provider_id"]
                                      }
                                    },
                                    "required": ["id", "text", "type"]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "description": "CreatedAt is a helper struct field for gobuffalo.pop."
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "UpdatedAt is a helper struct field for gobuffalo.pop."
                    },
                    "refresh": {
                      "type": "boolean",
                      "description": "Refresh stores whether this login flow should enforce re-authentication."
                    },
                    "requested_aal": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "organization_id",
                    "type",
                    "expires_at",
                    "issued_at",
                    "request_url",
                    "return_to",
                    "created_at",
                    "updated_at",
                    "refresh",
                    "requested_aal",
                    "state",
                    "ui"
                  ],
                  "title": "Login Flow",
                  "description": "This object represents a login flow. A login flow is initiated at the \"Initiate Login API / Browser Flow\"\nendpoint by a client.\n\nOnce a login flow is completed successfully, a session cookie or session token will be issued."
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/self-service/login": {
      "post": {
        "summary": "登入",
        "deprecated": false,
        "description": "",
        "operationId": "oauth2Login",
        "tags": [],
        "parameters": [
          {
            "name": "flow",
            "in": "query",
            "description": "",
            "required": false,
            "example": "d37186af-6e31-48a3-a7a9-4e7cf98a5151",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "identifier": {
                    "type": "string"
                  },
                  "method": {
                    "type": "string"
                  },
                  "csrf_token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "session": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "active": {
                          "type": "boolean"
                        },
                        "expires_at": {
                          "type": "string"
                        },
                        "authenticated_at": {
                          "type": "string"
                        },
                        "authenticator_assurance_level": {
                          "type": "string"
                        },
                        "authentication_methods": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "method": {
                                "type": "string"
                              },
                              "aal": {
                                "type": "string"
                              },
                              "completed_at": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "issued_at": {
                          "type": "string"
                        },
                        "identity": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "schema_id": {
                              "type": "string"
                            },
                            "schema_url": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "state_changed_at": {
                              "type": "string"
                            },
                            "traits": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "picture": {
                                  "type": "string"
                                },
                                "language": {
                                  "type": "string"
                                },
                                "username": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "email",
                                "picture",
                                "language",
                                "username"
                              ]
                            },
                            "verifiable_addresses": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "verified": {
                                    "type": "boolean"
                                  },
                                  "via": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string"
                                  },
                                  "created_at": {
                                    "type": "string"
                                  },
                                  "updated_at": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "recovery_addresses": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "via": {
                                    "type": "string"
                                  },
                                  "created_at": {
                                    "type": "string"
                                  },
                                  "updated_at": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "metadata_public": {
                              "type": "null"
                            },
                            "created_at": {
                              "type": "string"
                            },
                            "updated_at": {
                              "type": "string"
                            },
                            "organization_id": {
                              "type": "null"
                            }
                          },
                          "required": [
                            "id",
                            "schema_id",
                            "schema_url",
                            "state",
                            "state_changed_at",
                            "traits",
                            "verifiable_addresses",
                            "recovery_addresses",
                            "metadata_public",
                            "created_at",
                            "updated_at",
                            "organization_id"
                          ]
                        },
                        "devices": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "ip_address": {
                                "type": "string"
                              },
                              "user_agent": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "id",
                        "active",
                        "expires_at",
                        "authenticated_at",
                        "authenticator_assurance_level",
                        "authentication_methods",
                        "issued_at",
                        "identity",
                        "devices"
                      ]
                    },
                    "continue_with": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action": {
                            "type": "string"
                          },
                          "redirect_browser_to": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": ["session", "continue_with"]
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The status code",
                          "format": "int64",
                          "type": "integer",
                          "examples": [404]
                        },
                        "debug": {
                          "description": "Debug information\n\nThis field is often not exposed to protect against leaking\nsensitive information.",
                          "type": "string",
                          "examples": ["SQL field \"foo\" is not a bool."]
                        },
                        "details": {
                          "additionalProperties": false,
                          "description": "Further error details",
                          "type": "object",
                          "properties": {}
                        },
                        "id": {
                          "description": "The error ID\n\nUseful when trying to identify various errors in application logic.",
                          "type": "string"
                        },
                        "message": {
                          "description": "Error message\n\nThe error's message.",
                          "type": "string",
                          "examples": ["The resource could not be found"]
                        },
                        "reason": {
                          "description": "A human-readable reason for the error",
                          "type": "string",
                          "examples": ["User with ID 1234 does not exist."]
                        },
                        "request": {
                          "description": "The request ID\n\nThe request ID is often exposed internally in order to trace\nerrors across service architectures. This is often a UUID.",
                          "type": "string",
                          "examples": ["d7ef54b1-ec15-46e6-bccb-524b82c035e6"]
                        },
                        "status": {
                          "description": "The status description",
                          "type": "string",
                          "examples": ["Not Found"]
                        }
                      },
                      "required": ["message"]
                    },
                    "redirect_browser_to": {
                      "description": "Points to where to redirect the user to next.",
                      "type": "string"
                    }
                  },
                  "required": ["error"]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/self-service/registration/browser": {
      "get": {
        "summary": "建立瀏覽器註冊流程",
        "deprecated": false,
        "description": "",
        "operationId": "createBrowserRegistrationFlow",
        "tags": [],
        "parameters": [
          {
            "name": "return_to",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "303": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "example": "<a href=\"https://dev-sso.oosa.life/registration?flow=8768e4e9-62b2-4a99-baac-8eb4dc18b1b8\">See Other</a>."
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/self-service/registration": {
      "post": {
        "summary": "註冊使用者",
        "deprecated": false,
        "description": "",
        "operationId": "registrationByEmailFlow",
        "tags": [],
        "parameters": [
          {
            "name": "flow",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "csrf_token": {
                    "type": "string"
                  },
                  "traits.name": {
                    "type": "string"
                  },
                  "traits.language": {
                    "type": "string"
                  },
                  "traits.picture": {
                    "type": "string"
                  },
                  "traits.email": {
                    "type": "string"
                  },
                  "traits.username": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/sessions/whoami": {
      "get": {
        "summary": "Check Who the Current HTTP Session Belongs To",
        "deprecated": false,
        "description": "Uses the HTTP Headers in the GET request to determine (e.g. by using checking the cookies) who is authenticated.\nReturns a session object in the body or 401 if the credentials are invalid or no credentials were sent.\nWhen the request it successful it adds the user ID to the 'X-Kratos-Authenticated-Identity-Id' header\nin the response.\n\nIf you call this endpoint from a server-side application, you must forward the HTTP Cookie Header to this endpoint:\n\n```js\npseudo-code example\nrouter.get('/protected-endpoint', async function (req, res) {\nconst session = await client.toSession(undefined, req.header('cookie'))\n\nconsole.log(session)\n})\n```\n\nWhen calling this endpoint from a non-browser application (e.g. mobile app) you must include the session token:\n\n```js\npseudo-code example\n...\nconst session = await client.toSession(\"the-session-token\")\n\nconsole.log(session)\n```\n\nWhen using a token template, the token is included in the `tokenized` field of the session.\n\n```js\npseudo-code example\n...\nconst session = await client.toSession(\"the-session-token\", { tokenize_as: \"example-jwt-template\" })\n\nconsole.log(session.tokenized) // The JWT\n```\n\nDepending on your configuration this endpoint might return a 403 status code if the session has a lower Authenticator\nAssurance Level (AAL) than is possible for the identity. This can happen if the identity has password + webauthn\ncredentials (which would result in AAL2) but the session has only AAL1. If this error occurs, ask the user\nto sign in with the second factor or change the configuration.\n\nThis endpoint is useful for:\n\nAJAX calls. Remember to send credentials and set up CORS correctly!\nReverse proxies and API Gateways\nServer-side calls - use the `X-Session-Token` header!\n\nThis endpoint authenticates users by checking:\n\nif the `Cookie` HTTP header was set containing an Ory Kratos Session Cookie;\nif the `Authorization: bearer <ory-session-token>` HTTP header was set with a valid Ory Kratos Session Token;\nif the `X-Session-Token` HTTP header was set with a valid Ory Kratos Session Token.\n\nIf none of these headers are set or the cookie or token are invalid, the endpoint returns a HTTP 401 status code.\n\nAs explained above, this request may fail due to several reasons. The `error.id` can be one of:\n\n`session_inactive`: No active session was found in the request (e.g. no Ory Session Cookie / Ory Session Token).\n`session_aal2_required`: An active session was found but it does not fulfil the Authenticator Assurance Level, implying that the session must (e.g.) authenticate the second factor.",
        "operationId": "toSession",
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/self-service/methods/oidc/callback/{provider}": {
      "get": {
        "summary": "OIDC call back",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["line", "google", "apple"]
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "summary": "OIDC call back (Apple)",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["line", "google", "apple"]
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/notification": {
      "post": {
        "summary": "Create notification",
        "deprecated": false,
        "description": "建立通知",
        "operationId": "create_notification",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "from": {
                    "type": "string"
                  },
                  "event": {
                    "type": "string"
                  },
                  "data": {
                    "type": "object",
                    "properties": {}
                  }
                },
                "required": ["to", "from", "event", "data"]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "206": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      }
                    },
                    "required": ["error", "email"]
                  }
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidationError"
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "title": "",
                      "description": "message"
                    }
                  },
                  "required": ["message"]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "LinkQuery": {
        "type": "object",
        "properties": {
          "Title": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "OGTitle": {
            "type": "string"
          },
          "OGDescription": {
            "type": "string"
          },
          "OGImage": {
            "type": "string"
          },
          "OGSiteName": {
            "type": "string"
          }
        },
        "required": [
          "Title",
          "Description",
          "OGTitle",
          "OGDescription",
          "OGImage",
          "OGSiteName"
        ]
      },
      "EventScheduleBulk": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EventScheduleBulkItemTime"
        }
      },
      "EventScheduleBulkItemTime": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "examples": ["08:00"],
            "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"
          },
          "description": {
            "type": "string"
          }
        },
        "required": ["time", "description"]
      },
      "RequestEventSchedulesBulk": {
        "type": "object",
        "properties": {
          "schedule": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestEventSchedules"
            }
          }
        }
      },
      "RequestGoogleAuth": {
        "type": "object",
        "properties": {
          "credential": {
            "type": "string"
          }
        }
      },
      "RequestForgetPasswordReset": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "default": "tommy@oosa.ar.tw"
          },
          "password": {
            "type": "string",
            "default": 123456
          }
        }
      },
      "RequestEventAccounting": {
        "type": "object",
        "properties": {
          "event_accounting_amount": {
            "type": "string",
            "default": 20.5
          },
          "event_accounting_message": {
            "type": "string",
            "default": "Entrance ticket"
          },
          "event_accounting_paid_by": {
            "type": "string"
          }
        },
        "required": [
          "event_accounting_amount",
          "event_accounting_message",
          "event_accounting_paid_by"
        ]
      },
      "RequestEventReferenceLinks": {
        "type": "object",
        "properties": {
          "event_reference_links_link": {
            "type": "string",
            "default": "https://google.com.sg"
          },
          "event_reference_links_title": {
            "type": "string",
            "default": "Google Singapore"
          }
        },
        "required": [
          "event_reference_links_link",
          "event_reference_links_title"
        ]
      },
      "RequestUsersUpdatePassword": {
        "type": "object",
        "properties": {
          "new_password": {
            "type": "string",
            "default": 12345
          },
          "password": {
            "type": "string",
            "default": 123456
          }
        }
      },
      "RequestPocketList": {
        "type": "object",
        "properties": {
          "pocket_lists_name": {
            "type": "string",
            "default": "Want to visit"
          }
        }
      },
      "RequestUserFollowing": {
        "type": "object",
        "properties": {
          "user_followings_following": {
            "type": "string",
            "default": "6613fae21977170d4fd608a6"
          }
        }
      },
      "RequestEventInvitationUpdate": {
        "type": "object",
        "properties": {
          "event_participants_status": {
            "type": "number",
            "default": 0,
            "description": "1: Accept, 2: Rejected"
          }
        }
      },
      "ResponseGeneralSuccess": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": ["message"]
      },
      "RequestUserLoginEmail": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "default": "user@arwork.tw"
          },
          "password": {
            "type": "string",
            "default": 123
          }
        },
        "required": ["email", "password"]
      },
      "RewildingOptions": {
        "type": "object",
        "properties": {
          "rewilding_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefRewildingTypes"
            }
          }
        }
      },
      "RewildingReferenceLinks": {
        "type": "object",
        "properties": {
          "rewilding_reference_links_link": {
            "type": "string"
          },
          "rewilding_reference_links_title": {
            "type": "string"
          }
        },
        "required": ["rewilding_reference_links_link"]
      },
      "RequestAuthUpdateAvatar": {
        "type": "object",
        "properties": {
          "users_avatar": {
            "type": "string",
            "default": "AVATAR_1"
          }
        }
      },
      "RequestCollaborativeLogExperience": {
        "type": "object",
        "properties": {
          "events_experience": {
            "type": "string",
            "default": "EXPERIENCE_1",
            "description": "\"EXPERIENCE_1\" to \"EXPERIENCE_6\""
          }
        }
      },
      "RequestLinkQuery": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "required": ["url"]
      },
      "RequestEventInvitation": {
        "type": "object",
        "properties": {
          "events_invitation_is_accept": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RequestEventJoin": {
        "type": "object",
        "properties": {
          "event_participants_request_message": {
            "type": "string"
          }
        }
      },
      "ContactUs": {
        "type": "object",
        "properties": {
          "contact_us_id": {
            "type": "string",
            "description": "序列 id",
            "format": "uuid"
          },
          "contact_us_created_at": {
            "type": "string",
            "description": "資料建立時間",
            "format": "date-time"
          },
          "contact_us_email": {
            "type": "string",
            "description": "聯絡信箱",
            "format": "email"
          },
          "contact_us_message": {
            "type": "string",
            "description": "聯繫內容",
            "format": "char",
            "maxLength": 250,
            "minLength": 1,
            "pattern": "^[^\\s][\\s\\S]*$"
          }
        },
        "required": [
          "contact_us_message",
          "contact_us_email",
          "contact_us_id",
          "contact_us_created_at"
        ]
      },
      "RequestContactUs": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "RequestEventMessageBoard": {
        "type": "object",
        "properties": {
          "event_message_board_base_message": {
            "type": "string",
            "default": "Is there toilet there?"
          },
          "event_message_board_is_pinned": {
            "type": "integer"
          }
        },
        "required": ["event_message_board_base_message"]
      },
      "RequestUsersUpdate": {
        "type": "object",
        "properties": {
          "users_avatar": {
            "type": "string"
          },
          "users_created_at": {
            "type": "string",
            "format": "int32"
          },
          "users_email": {
            "type": "string"
          },
          "users_id": {
            "type": "string"
          },
          "users_is_business": {
            "type": "boolean",
            "default": false
          },
          "users_is_subscribed": {
            "type": "boolean",
            "default": false
          },
          "users_name": {
            "type": "string"
          },
          "users_object": {
            "type": "string"
          },
          "users_password": {
            "type": "string"
          },
          "users_setting_friend_auto_add": {
            "type": "integer",
            "format": "int32"
          },
          "users_setting_is_visible_friends": {
            "type": "integer",
            "format": "int32"
          },
          "users_setting_is_visible_statistics": {
            "type": "integer",
            "format": "int32"
          },
          "users_setting_language": {
            "type": "string"
          },
          "users_setting_visibility_activity_summary": {
            "type": "integer",
            "format": "int32"
          },
          "users_source": {
            "type": "integer",
            "format": "int32"
          },
          "users_source_id": {
            "type": "string"
          },
          "users_username": {
            "type": "string"
          },
          "users_breathing_points": {
            "type": "integer"
          },
          "users_following_count": {
            "type": "integer"
          },
          "users_follower_count": {
            "type": "integer"
          }
        },
        "required": [
          "users_avatar",
          "users_created_at",
          "users_email",
          "users_id",
          "users_is_business",
          "users_is_subscribed",
          "users_name",
          "users_object",
          "users_setting_friend_auto_add",
          "users_setting_is_visible_friends",
          "users_setting_is_visible_statistics",
          "users_setting_language",
          "users_setting_visibility_activity_summary",
          "users_source",
          "users_source_id",
          "users_username"
        ]
      },
      "RequestPocketListItem": {
        "type": "object",
        "properties": {
          "pocket_list_items_place_id": {
            "type": "string",
            "default": "ChIJJyIiioc21i0R-fNFWJonSxA",
            "description": "PLACE_ID for Google"
          },
          "pocket_list_items_place_name": {
            "type": "string",
            "default": "Bromo"
          },
          "pocket_list_items_rewilding_id": {
            "type": "string",
            "description": "Pass RewildingID if this is adding Rewild spot"
          }
        }
      },
      "RequestEventAlbumLinks": {
        "type": "object",
        "properties": {
          "event_album_link_album_url": {
            "type": "string",
            "default": "https://photos.google.com"
          },
          "event_album_link_visibility": {
            "type": "string",
            "default": 1
          }
        }
      },
      "AchievementEvent": {
        "type": "object",
        "properties": {
          "achievement_released_id": {
            "type": "string"
          },
          "achievement_released_name": {
            "type": "string"
          },
          "achievement_released_lat": {
            "type": "number"
          },
          "achievement_released_lng": {
            "type": "number"
          },
          "achievement_released_count": {
            "type": "integer"
          }
        },
        "required": [
          "achievement_released_id",
          "achievement_released_name",
          "achievement_released_lat",
          "achievement_released_lng",
          "achievement_released_count"
        ]
      },
      "UserOther": {
        "type": "object",
        "properties": {
          "users_avatar": {
            "type": "string"
          },
          "users_created_at": {
            "type": "string",
            "format": "int32"
          },
          "users_email": {
            "type": "string"
          },
          "users_id": {
            "type": "string"
          },
          "users_is_business": {
            "type": "boolean",
            "default": false
          },
          "users_is_subscribed": {
            "type": "boolean",
            "default": false
          },
          "users_name": {
            "type": "string"
          },
          "users_object": {
            "type": "string"
          },
          "users_password": {
            "type": "string"
          },
          "users_setting_friend_auto_add": {
            "type": "integer",
            "format": "int32"
          },
          "users_setting_is_visible_friends": {
            "type": "integer",
            "format": "int32"
          },
          "users_setting_is_visible_statistics": {
            "type": "integer",
            "format": "int32"
          },
          "users_setting_language": {
            "type": "string"
          },
          "users_setting_visibility_activity_summary": {
            "type": "integer",
            "format": "int32"
          },
          "users_source": {
            "type": "integer",
            "format": "int32"
          },
          "users_source_id": {
            "type": "string"
          },
          "users_username": {
            "type": "string"
          },
          "users_breathing_points": {
            "type": "integer"
          },
          "users_following_count": {
            "type": "integer"
          },
          "users_follower_count": {
            "type": "integer"
          },
          "users_followings": {
            "$ref": "#/components/schemas/UserFollowings"
          }
        },
        "required": [
          "users_avatar",
          "users_created_at",
          "users_email",
          "users_id",
          "users_is_business",
          "users_is_subscribed",
          "users_name",
          "users_object",
          "users_setting_friend_auto_add",
          "users_setting_is_visible_friends",
          "users_setting_is_visible_statistics",
          "users_setting_language",
          "users_setting_visibility_activity_summary",
          "users_source",
          "users_source_id",
          "users_username",
          "users_followings"
        ]
      },
      "RankingRewilding": {
        "type": "object",
        "properties": {
          "rewilding_id": {
            "type": "string"
          },
          "rewilding_name": {
            "type": "string"
          },
          "rewilding_type_list": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rewilding_participants_experience_count": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "rewilding_id",
          "rewilding_name",
          "rewilding_type_list",
          "rewilding_participants_experience_count"
        ]
      },
      "RequestNews": {
        "type": "object",
        "properties": {
          "news_date": {
            "type": "string"
          },
          "news_title": {
            "type": "string"
          },
          "news_content": {
            "type": "string"
          }
        },
        "required": ["news_title", "news_content"]
      },
      "News": {
        "type": "object",
        "properties": {
          "news_id": {
            "type": "string"
          },
          "news_date": {
            "type": "string"
          },
          "news_title": {
            "type": "string"
          },
          "news_content": {
            "type": "string"
          },
          "news_created_at": {
            "type": "string"
          },
          "news_created_by": {
            "type": "string"
          }
        },
        "required": [
          "news_title",
          "news_content",
          "news_id",
          "news_date",
          "news_created_at",
          "news_created_by"
        ]
      },
      "RewildingDetail": {
        "type": "object",
        "properties": {
          "rewilding_id": {
            "type": "string"
          },
          "rewilding_name": {
            "type": "string"
          },
          "rewilding_location": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["rewilding_id", "rewilding_name", "rewilding_location"]
      },
      "RequestEventMessageBoardPin": {
        "type": "object",
        "properties": {
          "event_message_board_category": {
            "type": "string",
            "default": "Please arrive 30 minutes before event start time"
          }
        }
      },
      "EventAnnouncement": {
        "type": "object",
        "properties": {
          "event_announcement": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "event_announcement_message": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "event_announcement_category": {
                  "type": "string"
                }
              },
              "required": [
                "event_announcement_message",
                "event_announcement_category"
              ]
            }
          },
          "event_announcement_created_at": {
            "type": "string"
          },
          "event_announcement_event_id": {
            "type": "string"
          }
        },
        "required": [
          "event_announcement",
          "event_announcement_created_at",
          "event_announcement_event_id"
        ]
      },
      "RequestEventAnnouncement": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "event_announcement_message": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "event_announcement_category": {
              "type": "string"
            }
          },
          "required": [
            "event_announcement_message",
            "event_announcement_category"
          ]
        }
      },
      "RequestPocketListUpdateBulk": {
        "type": "object",
        "properties": {
          "pocket_list_items_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pocket_list_items_mst": {
            "type": "string"
          }
        },
        "required": ["pocket_list_items_id", "pocket_list_items_mst"]
      },
      "RequestUserFriend": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "對方用戶的 uuid"
          }
        },
        "required": ["user_id"]
      },
      "CollaborativeLogRandomCount": {
        "type": "object",
        "properties": {
          "random_count": {
            "type": "integer"
          }
        }
      },
      "EventTypeGroupStatistics": {
        "type": "object",
        "properties": {
          "event_type": {
            "type": "string"
          },
          "event_type_name": {
            "type": "string"
          },
          "event_count": {
            "type": "number"
          }
        },
        "required": ["event_type", "event_type_name", "event_count"]
      },
      "EventTypeStatistics": {
        "type": "object",
        "properties": {
          "event_type": {
            "type": "string"
          },
          "event_count": {
            "type": "number"
          }
        },
        "required": ["event_type", "event_count"]
      },
      "EventStatisticsId": {
        "type": "object",
        "properties": {
          "month": {
            "type": "number"
          },
          "year": {
            "type": "number"
          }
        },
        "required": ["year", "month"]
      },
      "EventStatistics": {
        "type": "object",
        "properties": {
          "event_period": {
            "$ref": "#/components/schemas/EventStatisticsId"
          },
          "event_count": {
            "type": "number"
          }
        },
        "required": ["event_period", "event_count"]
      },
      "UserStarStatistics": {
        "type": "object",
        "properties": {
          "user_period": {
            "$ref": "#/components/schemas/EventStatisticsId"
          },
          "user_count": {
            "type": "number"
          },
          "total_star": {
            "type": "number"
          },
          "average_star": {
            "type": "number"
          }
        },
        "required": ["user_period", "user_count", "total_star", "average_star"]
      },
      "AchievementStatistics": {
        "type": "object",
        "properties": {
          "oosa_star_current_user": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventStatistics"
            }
          },
          "oosa_star_per_user": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserStarStatistics"
            }
          },
          "stars_months_last_achieved": {
            "type": "number"
          },
          "stars_last_achieved_month": {
            "type": "string"
          },
          "statistics_last_rewilding": {
            "type": "string"
          },
          "statistics_rewilding_by_month": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventStatistics"
            }
          },
          "user_star_by_type": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventTypeGroupStatistics"
            }
          },
          "user_star_per_year": {
            "type": "number"
          }
        },
        "required": [
          "oosa_star_current_user",
          "oosa_star_per_user",
          "stars_months_last_achieved",
          "stars_last_achieved_month",
          "statistics_last_rewilding",
          "statistics_rewilding_by_month",
          "user_star_by_type",
          "user_star_per_year"
        ]
      },
      "EventParticipantsInvitation": {
        "type": "object",
        "properties": {
          "event_participants_id": {
            "type": "string"
          },
          "event_participants_event": {
            "type": "string"
          },
          "event_participants_user": {
            "type": "string"
          },
          "event_participants_user_detail": {
            "type": "string"
          },
          "event_participants_is_paid": {
            "type": "integer"
          },
          "event_participants_paid_amount": {
            "type": "number"
          },
          "event_participants_paid_at": {
            "type": "string"
          },
          "event_participants_payment_request": {
            "type": "string"
          },
          "event_participants_payment_response": {
            "type": "string"
          },
          "event_participants_experience": {
            "type": "string"
          },
          "event_participants_request_message": {
            "type": "string"
          },
          "event_participants_created_at": {
            "type": "string"
          },
          "event_participants_created_by": {
            "type": "string"
          },
          "event_participant_invitation": {
            "type": "object",
            "properties": {
              "invitation_message": {
                "type": "string"
              },
              "invitation_template": {
                "type": "string"
              }
            }
          }
        }
      },
      "RequestCollaborativeLogQuestionnaire": {
        "type": "object",
        "properties": {
          "events_questionnaire_link": {
            "type": "string",
            "default": "https://surveycake.com/12"
          }
        }
      },
      "RequestEventInvitationMessageUpdate": {
        "type": "object",
        "properties": {
          "events_invitation_message": {
            "type": "string",
            "default": "Hey! Join me in the next OOSA event"
          },
          "events_invitation_template": {
            "type": "string"
          }
        },
        "required": ["events_invitation_template", "events_invitation_message"]
      },
      "RequestEventSchedules": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "default": "2024-03-31T15:20:00Z"
          },
          "description": {
            "type": "string",
            "default": "Gather#3"
          }
        }
      },
      "RequestForgetPassword": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "default": "tommy@oosa.ar.tw"
          }
        }
      },
      "RequestPocketListUpdate": {
        "type": "object",
        "properties": {
          "pocket_list_items_mst": {
            "type": "string"
          }
        }
      },
      "ResponseGeneralError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "RewildingPhotos": {
        "type": "object",
        "properties": {
          "rewilding_photos_id": {
            "type": "string"
          },
          "rewilding_photos_path": {
            "type": "string"
          }
        }
      },
      "RewildingSearch": {
        "type": "object",
        "properties": {
          "places": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewildingSearchOne"
            }
          }
        },
        "required": ["places"]
      },
      "UserFriends": {
        "type": "array",
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/UserFriendsOne"
            }
          ]
        }
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "token": {
            "type": "string"
          }
        },
        "required": ["token"]
      },
      "RequestAuthUpdateSetting": {
        "type": "object",
        "properties": {
          "users_setting_friend_auto_add": {
            "type": "number",
            "default": 0
          },
          "users_setting_is_visible_friends": {
            "type": "number",
            "default": 1
          },
          "users_setting_is_visible_statistics": {
            "type": "number",
            "default": 1
          },
          "users_setting_visibility_activity_summary": {
            "type": "number",
            "default": 1
          }
        }
      },
      "RequestUserRegisterEmail": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "default": "user@arwork.tw"
          },
          "is_business": {
            "type": "boolean",
            "default": false
          },
          "name": {
            "type": "string",
            "default": "Test User"
          },
          "password": {
            "type": "string",
            "default": 123
          }
        }
      },
      "RewildingApplyPhotos": {
        "type": "object",
        "properties": {
          "rewilding_apply_photos_id": {
            "type": "string"
          },
          "rewilding_apply_photos_path": {
            "type": "string"
          },
          "rewilding_apply_photos_rewilding_apply": {
            "type": "string"
          }
        }
      },
      "UserAgg": {
        "type": "object",
        "properties": {
          "user_avatar": {
            "type": "string"
          },
          "user_email": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "user_name": {
            "type": "string"
          }
        },
        "required": ["user_email", "user_id", "user_name", "user_avatar"]
      },
      "UserBadges": {
        "type": "object",
        "properties": {
          "user_badges_detail": {
            "$ref": "#/components/schemas/UserBadgesDetail"
          },
          "user_badges_badge": {
            "type": "string",
            "default": "6695534c1da4d6fee70fc3e4"
          },
          "user_badges_created_at": {
            "type": "string",
            "default": "2024-07-15T17:02:01.037Z"
          },
          "user_badges_id": {
            "type": "string",
            "default": "669556094dc5739b71e173fe"
          },
          "user_badges_user": {
            "type": "string",
            "default": "65f6861102948c60bcb3cb1d"
          }
        }
      },
      "UserBadgesDetail": {
        "type": "object",
        "properties": {
          "badges_code": {
            "type": "string",
            "default": "N1"
          },
          "badges_id": {
            "type": "string",
            "default": "6695534c1da4d6fee70fc3e4"
          },
          "badges_name": {
            "type": "string",
            "default": "1st. Rewild"
          }
        }
      },
      "UserFollowings": {
        "type": "object",
        "properties": {
          "user_followings_created_at": {
            "type": "string"
          },
          "user_followings_following": {
            "type": "string"
          },
          "user_followings_id": {
            "type": "string"
          },
          "user_followings_user": {
            "type": "string"
          }
        }
      },
      "UserFriendsOne": {
        "type": "object",
        "properties": {
          "users_avatar": {
            "type": "string",
            "default": "AVATAR_1"
          },
          "users_id": {
            "type": "string",
            "default": "6613fae21977170d4fd608a6"
          },
          "users_name": {
            "type": "string",
            "default": "Tommy"
          }
        }
      },
      "UserMilestones": {
        "type": "object",
        "properties": {
          "user_milestones_created_at": {
            "type": "string"
          },
          "user_milestones_created_by": {
            "type": "string"
          },
          "user_milestones_id": {
            "type": "string"
          },
          "user_milestones_milestone": {
            "type": "string"
          }
        }
      },
      "CollaborativeLog": {
        "type": "object",
        "properties": {
          "collaborative_log_album_url": {
            "type": "string"
          },
          "collaborative_log_created_at": {
            "type": "string"
          },
          "collaborative_log_created_by": {
            "type": "string"
          },
          "collaborative_log_event": {
            "type": "string"
          },
          "collaborative_log_id": {
            "type": "string"
          },
          "collaborative_log_visibility": {
            "type": "integer"
          }
        }
      },
      "EventAlbumLink": {
        "type": "object",
        "properties": {
          "event_album_link_created_by_user": {
            "$ref": "#/components/schemas/UserAgg"
          },
          "event_album_link_album_url": {
            "type": "string"
          },
          "event_album_link_created_at": {
            "type": "string"
          },
          "event_album_link_created_by": {
            "type": "string"
          },
          "event_album_link_event": {
            "type": "string"
          },
          "event_album_link_id": {
            "type": "string"
          },
          "event_album_link_visibility": {
            "type": "integer"
          }
        },
        "required": [
          "event_album_link_album_url",
          "event_album_link_created_at",
          "event_album_link_created_by",
          "event_album_link_event",
          "event_album_link_id",
          "event_album_link_visibility"
        ]
      },
      "EventAlbumLinkSimple": {
        "type": "object",
        "properties": {
          "event_album_link_album_url": {
            "type": "string"
          },
          "event_album_link_created_at": {
            "type": "string"
          },
          "event_album_link_created_by": {
            "type": "string"
          },
          "event_album_link_event": {
            "type": "string"
          },
          "event_album_link_id": {
            "type": "string"
          },
          "event_album_link_visibility": {
            "type": "integer"
          }
        },
        "required": [
          "event_album_link_album_url",
          "event_album_link_created_at",
          "event_album_link_created_by",
          "event_album_link_event",
          "event_album_link_id",
          "event_album_link_visibility"
        ]
      },
      "EventReferenceLinks": {
        "type": "object",
        "properties": {
          "event_reference_links_created_by_user": {
            "$ref": "#/components/schemas/UserAgg"
          },
          "event_reference_links_created_at": {
            "type": "string"
          },
          "event_reference_links_created_by": {
            "type": "string"
          },
          "event_reference_links_event": {
            "type": "string"
          },
          "event_reference_links_id": {
            "type": "string"
          },
          "event_reference_links_link": {
            "type": "string"
          },
          "event_reference_links_title": {
            "type": "string"
          }
        }
      },
      "EventReferenceLinksSimple": {
        "type": "object",
        "properties": {
          "event_reference_links_created_at": {
            "type": "string"
          },
          "event_reference_links_created_by": {
            "type": "string"
          },
          "event_reference_links_event": {
            "type": "string"
          },
          "event_reference_links_id": {
            "type": "string"
          },
          "event_reference_links_link": {
            "type": "string"
          },
          "event_reference_links_title": {
            "type": "string"
          }
        },
        "required": [
          "event_reference_links_created_at",
          "event_reference_links_created_by",
          "event_reference_links_event",
          "event_reference_links_id",
          "event_reference_links_link",
          "event_reference_links_title"
        ]
      },
      "EventSchedules": {
        "type": "object",
        "properties": {
          "event_schedules_created_by_user": {
            "$ref": "#/components/schemas/UserAgg"
          },
          "event_schedules_created_at": {
            "type": "string"
          },
          "event_schedules_created_by": {
            "type": "string"
          },
          "event_schedules_datetime": {
            "type": "string"
          },
          "event_schedules_description": {
            "type": "string"
          },
          "event_schedules_event": {
            "type": "string"
          },
          "event_schedules_id": {
            "type": "string"
          }
        }
      },
      "PocketList": {
        "type": "object",
        "properties": {
          "pocket_lists_count": {
            "type": "integer",
            "format": "int32"
          },
          "pocket_lists_created_at": {
            "type": "string"
          },
          "pocket_lists_id": {
            "type": "string"
          },
          "pocket_lists_name": {
            "type": "string"
          },
          "pocket_lists_user": {
            "type": "string"
          }
        },
        "required": [
          "pocket_lists_created_at",
          "pocket_lists_id",
          "pocket_lists_name",
          "pocket_lists_user",
          "pocket_lists_count"
        ]
      },
      "PocketListItems": {
        "type": "object",
        "properties": {
          "pocket_list_items_created_at": {
            "type": "string"
          },
          "pocket_list_items_event": {
            "type": "string"
          },
          "pocket_list_items_id": {
            "type": "string"
          },
          "pocket_list_items_mst": {
            "type": "string"
          },
          "pocket_list_items_name": {
            "type": "string"
          },
          "pocket_list_items_rewilding": {
            "type": "string"
          },
          "pocket_list_items_rewilding_detail": {
            "$ref": "#/components/schemas/Rewilding"
          }
        },
        "required": [
          "pocket_list_items_created_at",
          "pocket_list_items_event",
          "pocket_list_items_id",
          "pocket_list_items_mst",
          "pocket_list_items_name",
          "pocket_list_items_rewilding"
        ]
      },
      "RefRewildingTypes": {
        "type": "object",
        "properties": {
          "ref_rewilding_types_google": {
            "type": "string",
            "default": "national_park,hiking_area"
          },
          "ref_rewilding_types_id": {
            "type": "string",
            "default": "662696ebfc72a35c9b066f41"
          },
          "ref_rewilding_types_key": {
            "type": "string",
            "default": "mountain_climbing"
          },
          "ref_rewilding_types_name": {
            "type": "string",
            "default": "登山"
          },
          "ref_rewilding_types_name_en": {
            "type": "string",
            "default": "Mountain Climbing"
          }
        },
        "required": [
          "ref_rewilding_types_id",
          "ref_rewilding_types_name",
          "ref_rewilding_types_name_en",
          "ref_rewilding_types_key",
          "ref_rewilding_types_google"
        ]
      },
      "RequestUserPreference": {
        "type": "object",
        "properties": {
          "users_setting_language": {
            "type": "string"
          },
          "users_setting_vis_achievement_collab_log": {
            "type": "integer",
            "format": "int32"
          },
          "users_setting_vis_achievement_journal": {
            "type": "integer",
            "format": "int32"
          },
          "users_setting_vis_follow": {
            "type": "integer",
            "format": "int32"
          },
          "users_vis_events": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Sharing": {
        "type": "object",
        "properties": {
          "sharing_created_at": {
            "type": "string"
          },
          "sharing_created_by": {
            "type": "string"
          },
          "sharing_event": {
            "type": "string"
          },
          "sharing_event_album_link": {
            "type": "string"
          },
          "sharing_id": {
            "type": "string"
          },
          "sharing_platform": {
            "type": "string"
          }
        }
      },
      "EventAccounting": {
        "type": "object",
        "properties": {
          "event_accounting_created_by_user": {
            "$ref": "#/components/schemas/UserAgg"
          },
          "event_accounting_amount": {
            "type": "number"
          },
          "event_accounting_created_at": {
            "type": "string"
          },
          "event_accounting_created_by": {
            "type": "string"
          },
          "event_accounting_event": {
            "type": "string"
          },
          "event_accounting_id": {
            "type": "string"
          },
          "event_accounting_message": {
            "type": "string"
          },
          "event_accounting_updated_at": {
            "type": "string"
          },
          "event_accounting_updated_by": {
            "type": "string"
          }
        },
        "required": [
          "event_accounting_message",
          "event_accounting_id",
          "event_accounting_event",
          "event_accounting_created_by",
          "event_accounting_created_at",
          "event_accounting_amount"
        ]
      },
      "EventAccountingSingle": {
        "type": "object",
        "properties": {
          "event_accounting_amount": {
            "type": "number"
          },
          "event_accounting_created_at": {
            "type": "string"
          },
          "event_accounting_created_by": {
            "type": "string"
          },
          "event_accounting_event": {
            "type": "string"
          },
          "event_accounting_id": {
            "type": "string"
          },
          "event_accounting_message": {
            "type": "string"
          },
          "event_accounting_updated_at": {
            "type": "string"
          },
          "event_accounting_updated_by": {
            "type": "string"
          }
        },
        "required": ["event_accounting_amount"]
      },
      "EventPolaroids": {
        "type": "object",
        "properties": {
          "event_polaroids_created_by_user": {
            "$ref": "#/components/schemas/UserAgg"
          },
          "event_polaroids_created_at": {
            "type": "string"
          },
          "event_polaroids_created_by": {
            "type": "string"
          },
          "event_polaroids_event": {
            "type": "string"
          },
          "event_polaroids_id": {
            "type": "string"
          },
          "event_polaroids_lat": {
            "type": "number"
          },
          "event_polaroids_lng": {
            "type": "number"
          },
          "event_polaroids_url": {
            "type": "string"
          }
        }
      },
      "EventPolaroidsSimple": {
        "type": "object",
        "properties": {
          "event_polaroids_created_at": {
            "type": "string"
          },
          "event_polaroids_created_by": {
            "type": "string"
          },
          "event_polaroids_event": {
            "type": "string"
          },
          "event_polaroids_id": {
            "type": "string"
          },
          "event_polaroids_lat": {
            "type": "number"
          },
          "event_polaroids_lng": {
            "type": "number"
          },
          "event_polaroids_url": {
            "type": "string"
          }
        },
        "required": [
          "event_polaroids_created_by",
          "event_polaroids_event",
          "event_polaroids_id",
          "event_polaroids_lat",
          "event_polaroids_lng",
          "event_polaroids_url",
          "event_polaroids_created_at"
        ]
      },
      "RequestRewildingCreate": {
        "type": "object",
        "properties": {
          "rewilding_apply_official": {
            "type": "boolean",
            "default": "true,"
          },
          "rewilding_lat": {
            "type": "number",
            "default": "7.9422379184033,"
          },
          "rewilding_lng": {
            "type": "number",
            "default": 112.95275441058537
          },
          "rewilding_name": {
            "type": "string",
            "default": "TEST_REWILDING#2"
          },
          "rewilding_photo[]": {
            "type": "string",
            "format": "binary"
          },
          "rewilding_pocket_list": {
            "type": "string",
            "default": "66005467624a973abd8787d7"
          },
          "rewilding_reference_information": {
            "type": "string",
            "default": "www.google.com"
          },
          "rewilding_type": {
            "type": "string",
            "default": "662696ebfc72a35c9b066f41"
          }
        }
      },
      "ResponseValidationError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "EventMessageBoard": {
        "type": "object",
        "properties": {
          "event_message_board_created_by_user": {
            "$ref": "#/components/schemas/UserAgg"
          },
          "event_message_board_announcement": {
            "type": "string"
          },
          "event_message_board_base_message": {
            "type": "string"
          },
          "event_message_board_category": {
            "type": "string"
          },
          "event_message_board_created_at": {
            "type": "string"
          },
          "event_message_board_created_by": {
            "type": "string"
          },
          "event_message_board_event": {
            "type": "string"
          },
          "event_message_board_id": {
            "type": "string"
          },
          "event_message_board_is_pinned": {
            "type": "integer"
          },
          "event_message_board_status": {
            "type": "integer"
          }
        }
      },
      "EventMessageBoardSimple": {
        "type": "object",
        "properties": {
          "event_message_board_announcement": {
            "type": "string"
          },
          "event_message_board_base_message": {
            "type": "string"
          },
          "event_message_board_category": {
            "type": "string"
          },
          "event_message_board_created_at": {
            "type": "string"
          },
          "event_message_board_created_by": {
            "type": "string"
          },
          "event_message_board_event": {
            "type": "string"
          },
          "event_message_board_id": {
            "type": "string"
          },
          "event_message_board_is_pinned": {
            "type": "integer"
          },
          "event_message_board_status": {
            "type": "integer"
          }
        }
      },
      "RewildingApply": {
        "type": "object",
        "properties": {
          "rewilding_apply_area": {
            "type": "string"
          },
          "rewilding_apply_city": {
            "type": "string"
          },
          "rewilding_apply_created_at": {
            "type": "string"
          },
          "rewilding_apply_created_by": {
            "type": "string"
          },
          "rewilding_apply_id": {
            "type": "string"
          },
          "rewilding_apply_lat": {
            "type": "number"
          },
          "rewilding_apply_lng": {
            "type": "number"
          },
          "rewilding_apply_name": {
            "type": "string"
          },
          "rewilding_apply_rating": {
            "type": "number"
          },
          "rewilding_apply_type": {
            "type": "string"
          }
        }
      },
      "RewildingWiki": {
        "type": "object",
        "properties": {
          "rewilding_wiki_comments": {
            "type": "string"
          },
          "rewilding_wiki_created_at": {
            "type": "string"
          },
          "rewilding_wiki_created_by": {
            "type": "string"
          },
          "rewilding_wiki_event": {
            "type": "string"
          },
          "rewilding_wiki_feelings": {
            "type": "string"
          },
          "rewilding_wiki_id": {
            "type": "string"
          },
          "rewilding_wiki_photo": {
            "type": "string"
          },
          "rewilding_wiki_rewilding": {
            "type": "string"
          },
          "rewilding_wiki_type": {
            "type": "string"
          }
        }
      },
      "RequestEvent": {
        "type": "object",
        "properties": {
          "events_date": {
            "type": "string",
            "default": "2024-06-01T09:00:00Z"
          },
          "events_date_end": {
            "type": "string",
            "default": "2024-06-01T18:00:00Z"
          },
          "events_deadline": {
            "type": "string",
            "default": "2024-05-26T00:00:00Z"
          },
          "events_lat": {
            "type": "number",
            "default": -7.9421532937069514
          },
          "events_lng": {
            "type": "number",
            "default": 112.95357004216902
          },
          "events_meeting_point_lat": {
            "type": "number",
            "default": -7.929088255289928
          },
          "events_meeting_point_lng": {
            "type": "number",
            "default": 112.9654222278174
          },
          "events_meeting_point_name": {
            "type": "string"
          },
          "events_name": {
            "type": "string",
            "default": "Hike to Bromo"
          },
          "events_participant_limit": {
            "type": "number",
            "default": 4
          },
          "events_payment_fee": {
            "type": "number",
            "default": 450
          },
          "events_payment_required": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "events_place": {
            "type": "string",
            "default": "ChIJk9cKlIwgbzQR2BE-g395glo"
          },
          "events_requires_approval": {
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          "events_rewilding": {
            "type": "string"
          },
          "events_type": {
            "type": "string"
          }
        },
        "required": [
          "events_date",
          "events_date_end",
          "events_deadline",
          "events_lat",
          "events_lng",
          "events_meeting_point_lat",
          "events_meeting_point_lng",
          "events_name",
          "events_participant_limit",
          "events_payment_fee",
          "events_payment_required",
          "events_place",
          "events_requires_approval",
          "events_rewilding",
          "events_meeting_point_name",
          "events_type"
        ]
      },
      "Rewilding": {
        "type": "object",
        "properties": {
          "rewilding_apply_official": {
            "type": "boolean"
          },
          "rewilding_area": {
            "type": "string"
          },
          "rewilding_city": {
            "type": "string"
          },
          "rewilding_created_at": {
            "type": "string"
          },
          "rewilding_created_by": {
            "type": "string"
          },
          "rewilding_elevation": {
            "type": "number"
          },
          "rewilding_id": {
            "type": "string"
          },
          "rewilding_lat": {
            "type": "number"
          },
          "rewilding_lng": {
            "type": "number"
          },
          "rewilding_name": {
            "type": "string"
          },
          "rewilding_photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewildingPhotos"
            },
            "nullable": true
          },
          "rewilding_place_id": {
            "type": "string"
          },
          "rewilding_rating": {
            "type": "number"
          },
          "rewilding_country_code": {
            "type": "string"
          },
          "rewilding_location": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rewilding_reference_links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewildingReferenceLinks"
            },
            "nullable": true
          }
        },
        "required": [
          "rewilding_apply_official",
          "rewilding_area",
          "rewilding_city",
          "rewilding_created_at",
          "rewilding_created_by",
          "rewilding_elevation",
          "rewilding_id",
          "rewilding_lat",
          "rewilding_lng",
          "rewilding_name",
          "rewilding_place_id",
          "rewilding_rating",
          "rewilding_photos",
          "rewilding_location"
        ]
      },
      "RequestEventFormData": {
        "type": "object",
        "properties": {
          "events_date": {
            "type": "string",
            "default": "2024-06-01T09:00:00Z"
          },
          "events_date_end": {
            "type": "string",
            "default": "2024-06-01T18:00:00Z"
          },
          "events_deadline": {
            "type": "string",
            "default": "2024-05-26T00:00:00Z"
          },
          "events_lat": {
            "type": "number",
            "default": -7.9421532937069514
          },
          "events_lng": {
            "type": "number",
            "default": 112.95357004216902
          },
          "events_meeting_point_lat": {
            "type": "number",
            "default": -7.929088255289928
          },
          "events_meeting_point_lng": {
            "type": "number",
            "default": 112.9654222278174
          },
          "events_name": {
            "type": "string",
            "default": "Hike to Bromo"
          },
          "events_participant_limit": {
            "type": "number",
            "default": 4
          },
          "events_payment_fee": {
            "type": "number",
            "default": 450
          },
          "events_payment_required": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "events_photo": {
            "type": "string",
            "format": "binary"
          },
          "events_place": {
            "type": "string",
            "default": "ChIJk9cKlIwgbzQR2BE-g395glo"
          },
          "events_requires_approval": {
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          "events_rewilding": {
            "type": "string"
          }
        }
      },
      "RewildingSearchOne": {
        "type": "object",
        "properties": {
          "formattedAddress": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "rating": {
            "type": "number"
          },
          "userRatingCount": {
            "type": "number"
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "displayName": {
            "type": "object",
            "properties": {
              "languageCode": {
                "type": "string"
              },
              "text": {
                "type": "string"
              }
            }
          },
          "location": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            },
            "required": ["latitude", "longitude"]
          }
        },
        "required": [
          "formattedAddress",
          "id",
          "rating",
          "userRatingCount",
          "types",
          "displayName",
          "location"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "users_avatar": {
            "type": "string"
          },
          "users_created_at": {
            "type": "string",
            "format": "int32"
          },
          "users_email": {
            "type": "string"
          },
          "users_id": {
            "type": "string"
          },
          "users_is_business": {
            "type": "boolean",
            "default": false
          },
          "users_is_subscribed": {
            "type": "boolean",
            "default": false
          },
          "users_name": {
            "type": "string"
          },
          "users_object": {
            "type": "string"
          },
          "users_password": {
            "type": "string"
          },
          "users_setting_friend_auto_add": {
            "type": "integer",
            "format": "int32"
          },
          "users_setting_is_visible_friends": {
            "type": "integer",
            "format": "int32"
          },
          "users_setting_is_visible_statistics": {
            "type": "integer",
            "format": "int32"
          },
          "users_setting_language": {
            "type": "string"
          },
          "users_setting_visibility_activity_summary": {
            "type": "integer",
            "format": "int32"
          },
          "users_source": {
            "type": "integer",
            "format": "int32"
          },
          "users_source_id": {
            "type": "string"
          },
          "users_username": {
            "type": "string"
          },
          "users_breathing_points": {
            "type": "integer"
          },
          "users_following_count": {
            "type": "integer"
          },
          "users_follower_count": {
            "type": "integer"
          }
        },
        "required": [
          "users_avatar",
          "users_created_at",
          "users_email",
          "users_id",
          "users_is_business",
          "users_is_subscribed",
          "users_name",
          "users_object",
          "users_setting_friend_auto_add",
          "users_setting_is_visible_friends",
          "users_setting_is_visible_statistics",
          "users_setting_language",
          "users_setting_visibility_activity_summary",
          "users_source",
          "users_source_id",
          "users_username"
        ]
      },
      "EventsSimple": {
        "type": "object",
        "properties": {
          "events_city_id": {
            "type": "integer"
          },
          "events_created_at": {
            "type": "string"
          },
          "events_created_by": {
            "type": "string"
          },
          "events_date": {
            "type": "string"
          },
          "events_date_end": {
            "type": "string"
          },
          "events_deadline": {
            "type": "string"
          },
          "events_id": {
            "type": "string"
          },
          "events_invitation_message": {
            "type": "string"
          },
          "events_lat": {
            "type": "number"
          },
          "events_lng": {
            "type": "number"
          },
          "events_meeting_point_lat": {
            "type": "number"
          },
          "events_meeting_point_lng": {
            "type": "number"
          },
          "events_name": {
            "type": "string"
          },
          "events_participant_limit": {
            "type": "number"
          },
          "events_payment_fee": {
            "type": "number"
          },
          "events_payment_required": {
            "type": "integer"
          },
          "events_photo": {
            "type": "string"
          },
          "events_place": {
            "type": "string"
          },
          "events_questionnaire_link": {
            "type": "string"
          },
          "events_requires_approval": {
            "type": "integer"
          },
          "events_rewilding": {
            "type": "string"
          },
          "events_statistic_distance": {
            "type": "number"
          },
          "events_statistic_member_count": {
            "type": "number"
          },
          "events_statistic_time": {
            "type": "number"
          },
          "events_updated_at": {
            "type": "string"
          },
          "events_updated_by": {
            "type": "string"
          }
        }
      },
      "EventsDeleted": {
        "type": "object",
        "properties": {
          "events_city_id": {
            "type": "integer"
          },
          "events_created_at": {
            "type": "string"
          },
          "events_created_by": {
            "type": "string"
          },
          "events_date": {
            "type": "string"
          },
          "events_date_end": {
            "type": "string"
          },
          "events_deadline": {
            "type": "string"
          },
          "events_deleted": {
            "type": "number"
          },
          "events_deleted_at": {
            "type": "string"
          },
          "events_id": {
            "type": "string"
          },
          "events_invitation_message": {
            "type": "string"
          },
          "events_lat": {
            "type": "number"
          },
          "events_lng": {
            "type": "number"
          },
          "events_meeting_point_lat": {
            "type": "number"
          },
          "events_meeting_point_lng": {
            "type": "number"
          },
          "events_name": {
            "type": "string"
          },
          "events_participant_limit": {
            "type": "number"
          },
          "events_payment_fee": {
            "type": "number"
          },
          "events_payment_required": {
            "type": "integer"
          },
          "events_photo": {
            "type": "string"
          },
          "events_place": {
            "type": "string"
          },
          "events_questionnaire_link": {
            "type": "string"
          },
          "events_requires_approval": {
            "type": "integer"
          },
          "events_rewilding": {
            "type": "string"
          },
          "events_statistic_distance": {
            "type": "number"
          },
          "events_statistic_member_count": {
            "type": "number"
          },
          "events_statistic_time": {
            "type": "number"
          },
          "events_updated_at": {
            "type": "string"
          },
          "events_updated_by": {
            "type": "string"
          }
        }
      },
      "EventParticipants": {
        "type": "object",
        "properties": {
          "event_participants_user_detail": {
            "$ref": "#/components/schemas/UserAgg"
          },
          "event_participants_created_at": {
            "type": "string"
          },
          "event_participants_created_by": {
            "type": "string"
          },
          "event_participants_event": {
            "type": "string"
          },
          "event_participants_id": {
            "type": "string"
          },
          "event_participants_is_paid": {
            "type": "integer"
          },
          "event_participants_paid_amount": {
            "type": "number"
          },
          "event_participants_paid_at": {
            "type": "string"
          },
          "event_participants_payment_request": {
            "type": "string"
          },
          "event_participants_payment_response": {
            "type": "string"
          },
          "event_participants_status": {
            "type": "integer"
          },
          "event_participants_status_label": {
            "type": "string"
          },
          "event_participants_user": {
            "type": "string"
          }
        }
      },
      "RequestEventParticipant": {
        "type": "object",
        "properties": {
          "event_participants_user": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UserNotifications": {
        "type": "object",
        "properties": {
          "notifications_code": {
            "type": "string",
            "default": "Invitation"
          },
          "notifications_created_at": {
            "type": "string",
            "default": "2024-07-15T17:47:29.074Z"
          },
          "notifications_created_by": {
            "type": "string",
            "default": "65f6861102948c60bcb3cb1d"
          },
          "notifications_id": {
            "type": "string",
            "default": "669560b1e7777ddfc76043c2"
          },
          "notifications_identifier": {
            "type": "string",
            "default": "66005b3ef4ca36269a55b468"
          },
          "notifications_message": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "title": "",
                "description": "message"
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "badges_code": {
                      "type": "string"
                    },
                    "badges_id": {
                      "type": "string"
                    },
                    "badges_name": {
                      "type": "string"
                    },
                    "users_id": {
                      "type": "string"
                    },
                    "users_name": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "required": ["message", "data"]
          },
          "notifications_state": {
            "type": "string",
            "default": "New",
            "enum": ["new", "done"]
          },
          "notifications_user": {
            "type": "string",
            "default": "65f6861102948c60bcb3cb1d"
          }
        }
      },
      "Events": {
        "type": "object",
        "properties": {
          "events_created_by_user": {
            "$ref": "#/components/schemas/UserAgg"
          },
          "events_city_id": {
            "type": "integer"
          },
          "events_created_at": {
            "type": "string"
          },
          "events_created_by": {
            "type": "string"
          },
          "events_date": {
            "type": "string"
          },
          "events_date_end": {
            "type": "string"
          },
          "events_deadline": {
            "type": "string"
          },
          "events_id": {
            "type": "string"
          },
          "events_lat": {
            "type": "number"
          },
          "events_lng": {
            "type": "number"
          },
          "events_meeting_point_lat": {
            "type": "number"
          },
          "events_meeting_point_lng": {
            "type": "number"
          },
          "events_meeting_point_name": {
            "type": "string"
          },
          "events_name": {
            "type": "string"
          },
          "events_participant_limit": {
            "type": "number"
          },
          "events_payment_fee": {
            "type": "number"
          },
          "events_payment_required": {
            "type": "integer"
          },
          "events_photo": {
            "type": "string"
          },
          "events_place": {
            "type": "string"
          },
          "events_questionnaire_link": {
            "type": "string"
          },
          "events_requires_approval": {
            "type": "integer"
          },
          "events_rewilding": {
            "type": "string"
          },
          "events_statistic_distance": {
            "type": "number"
          },
          "events_statistic_member_count": {
            "type": "number"
          },
          "events_statistic_time": {
            "type": "number"
          },
          "events_updated_at": {
            "type": "string"
          },
          "events_updated_by": {
            "type": "string"
          },
          "events_participants": {
            "type": "object",
            "properties": {
              "latest_tree_user": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserAgg"
                },
                "description": "最近參加的三個人",
                "nullable": true
              },
              "remain_number": {
                "type": "integer",
                "description": "總人數-3"
              }
            },
            "required": ["latest_tree_user", "remain_number"]
          },
          "events_rewilding_detail": {
            "$ref": "#/components/schemas/RewildingDetail"
          },
          "events_type": {
            "type": "string"
          },
          "events_invitation_template": {
            "type": "string"
          },
          "events_invitation_message": {
            "type": "string"
          },
          "events_invitation_no": {
            "type": "string"
          }
        },
        "required": [
          "events_city_id",
          "events_date",
          "events_date_end",
          "events_deadline",
          "events_id",
          "events_invitation_message",
          "events_lat",
          "events_lng",
          "events_meeting_point_lat",
          "events_meeting_point_lng",
          "events_name",
          "events_participant_limit",
          "events_payment_fee",
          "events_payment_required",
          "events_statistic_time",
          "events_statistic_distance",
          "events_statistic_member_count",
          "events_rewilding",
          "events_requires_approval",
          "events_questionnaire_link",
          "events_photo",
          "events_place",
          "events_meeting_point_name",
          "events_type",
          "events_invitation_template",
          "events_invitation_no"
        ]
      },
      "errorBrowserLocationChangeRequired": {
        "properties": {
          "error": {
            "$ref": "#/components/schemas/errorGeneric"
          },
          "redirect_browser_to": {
            "description": "Points to where to redirect the user to next.",
            "type": "string"
          }
        },
        "title": "Is sent when a flow requires a browser to change its location.",
        "type": "object"
      },
      "errorGeneric": {
        "description": "The standard Ory JSON API error format.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/genericError"
          }
        },
        "required": ["error"],
        "title": "JSON API Error Response",
        "type": "object"
      },
      "genericError": {
        "properties": {
          "code": {
            "description": "The status code",
            "format": "int64",
            "type": "integer",
            "examples": [404]
          },
          "debug": {
            "description": "Debug information\n\nThis field is often not exposed to protect against leaking\nsensitive information.",
            "type": "string",
            "examples": ["SQL field \"foo\" is not a bool."]
          },
          "details": {
            "additionalProperties": false,
            "description": "Further error details",
            "type": "object",
            "properties": {}
          },
          "id": {
            "description": "The error ID\n\nUseful when trying to identify various errors in application logic.",
            "type": "string"
          },
          "message": {
            "description": "Error message\n\nThe error's message.",
            "type": "string",
            "examples": ["The resource could not be found"]
          },
          "reason": {
            "description": "A human-readable reason for the error",
            "type": "string",
            "examples": ["User with ID 1234 does not exist."]
          },
          "request": {
            "description": "The request ID\n\nThe request ID is often exposed internally in order to trace\nerrors across service architectures. This is often a UUID.",
            "type": "string",
            "examples": ["d7ef54b1-ec15-46e6-bccb-524b82c035e6"]
          },
          "status": {
            "description": "The status description",
            "type": "string",
            "examples": ["Not Found"]
          }
        },
        "required": ["message"],
        "type": "object"
      },
      "settingsFlow": {
        "description": "This flow is used when an identity wants to update settings\n(e.g. profile data, passwords, ...) in a selfservice manner.\n\nWe recommend reading the [User Settings Documentation](../self-service/flows/user-settings)",
        "properties": {
          "active": {
            "description": "Active, if set, contains the registration method that is being used. It is initially\nnot set.",
            "type": "string"
          },
          "continue_with": {
            "description": "Contains a list of actions, that could follow this flow\n\nIt can, for example, contain a reference to the verification flow, created as part of the user's\nregistration.",
            "items": {
              "$ref": "#/components/schemas/continueWith"
            },
            "type": "array"
          },
          "expires_at": {
            "description": "ExpiresAt is the time (UTC) when the flow expires. If the user still wishes to update the setting,\na new flow has to be initiated.",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "ID represents the flow's unique ID. When performing the settings flow, this\nrepresents the id in the settings ui's query parameter: http://<selfservice.flows.settings.ui_url>?flow=<id>",
            "format": "uuid",
            "type": "string"
          },
          "identity": {
            "$ref": "#/components/schemas/identity"
          },
          "issued_at": {
            "description": "IssuedAt is the time (UTC) when the flow occurred.",
            "format": "date-time",
            "type": "string"
          },
          "request_url": {
            "description": "RequestURL is the initial URL that was requested from Ory Kratos. It can be used\nto forward information contained in the URL's path or query for example.",
            "type": "string"
          },
          "return_to": {
            "description": "ReturnTo contains the requested return_to URL.",
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "transient_payload": {
            "description": "TransientPayload is used to pass data from the settings flow to hooks and email templates",
            "type": "object",
            "properties": {}
          },
          "type": {
            "$ref": "#/components/schemas/selfServiceFlowType"
          },
          "ui": {
            "$ref": "#/components/schemas/uiContainer"
          }
        },
        "required": [
          "id",
          "type",
          "expires_at",
          "issued_at",
          "request_url",
          "ui",
          "identity",
          "state"
        ],
        "title": "Flow represents a Settings Flow",
        "type": "object"
      },
      "continueWith": {
        "discriminator": {
          "mapping": {
            "redirect_browser_to": "#/components/schemas/continueWithRedirectBrowserTo",
            "set_ory_session_token": "#/components/schemas/continueWithSetOrySessionToken",
            "show_recovery_ui": "#/components/schemas/continueWithRecoveryUi",
            "show_settings_ui": "#/components/schemas/continueWithSettingsUi",
            "show_verification_ui": "#/components/schemas/continueWithVerificationUi"
          },
          "propertyName": "action"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/continueWithVerificationUi"
          },
          {
            "$ref": "#/components/schemas/continueWithSetOrySessionToken"
          },
          {
            "$ref": "#/components/schemas/continueWithSettingsUi"
          },
          {
            "$ref": "#/components/schemas/continueWithRecoveryUi"
          },
          {
            "$ref": "#/components/schemas/continueWithRedirectBrowserTo"
          }
        ]
      },
      "continueWithRecoveryUi": {
        "description": "Indicates, that the UI flow could be continued by showing a recovery ui",
        "properties": {
          "action": {
            "description": "Action will always be `show_recovery_ui`\nshow_recovery_ui ContinueWithActionShowRecoveryUIString",
            "enum": ["show_recovery_ui"],
            "type": "string",
            "x-go-enum-desc": "show_recovery_ui ContinueWithActionShowRecoveryUIString"
          },
          "flow": {
            "$ref": "#/components/schemas/continueWithRecoveryUiFlow"
          }
        },
        "required": ["action", "flow"],
        "type": "object"
      },
      "continueWithRecoveryUiFlow": {
        "properties": {
          "id": {
            "description": "The ID of the recovery flow",
            "format": "uuid",
            "type": "string"
          },
          "url": {
            "description": "The URL of the recovery flow\n\nIf this value is set, redirect the user's browser to this URL. This value is typically unset for native clients / API flows.",
            "type": "string"
          }
        },
        "required": ["id"],
        "type": "object"
      },
      "continueWithRedirectBrowserTo": {
        "description": "Indicates, that the UI flow could be continued by showing a recovery ui",
        "properties": {
          "action": {
            "description": "Action will always be `redirect_browser_to`\nredirect_browser_to ContinueWithActionRedirectBrowserToString",
            "enum": ["redirect_browser_to"],
            "type": "string",
            "x-go-enum-desc": "redirect_browser_to ContinueWithActionRedirectBrowserToString"
          },
          "redirect_browser_to": {
            "description": "The URL to redirect the browser to",
            "type": "string"
          }
        },
        "required": ["action", "redirect_browser_to"],
        "type": "object"
      },
      "continueWithSetOrySessionToken": {
        "description": "Indicates that a session was issued, and the application should use this token for authenticated requests",
        "properties": {
          "action": {
            "description": "Action will always be `set_ory_session_token`\nset_ory_session_token ContinueWithActionSetOrySessionTokenString",
            "enum": ["set_ory_session_token"],
            "type": "string",
            "x-go-enum-desc": "set_ory_session_token ContinueWithActionSetOrySessionTokenString"
          },
          "ory_session_token": {
            "description": "Token is the token of the session",
            "type": "string"
          }
        },
        "required": ["action", "ory_session_token"],
        "type": "object"
      },
      "continueWithSettingsUi": {
        "description": "Indicates, that the UI flow could be continued by showing a settings ui",
        "properties": {
          "action": {
            "description": "Action will always be `show_settings_ui`\nshow_settings_ui ContinueWithActionShowSettingsUIString",
            "enum": ["show_settings_ui"],
            "type": "string",
            "x-go-enum-desc": "show_settings_ui ContinueWithActionShowSettingsUIString"
          },
          "flow": {
            "$ref": "#/components/schemas/continueWithSettingsUiFlow"
          }
        },
        "required": ["action", "flow"],
        "type": "object"
      },
      "continueWithSettingsUiFlow": {
        "properties": {
          "id": {
            "description": "The ID of the settings flow",
            "format": "uuid",
            "type": "string"
          },
          "url": {
            "description": "The URL of the settings flow\n\nIf this value is set, redirect the user's browser to this URL. This value is typically unset for native clients / API flows.",
            "type": "string"
          }
        },
        "required": ["id"],
        "type": "object"
      },
      "continueWithVerificationUi": {
        "description": "Indicates, that the UI flow could be continued by showing a verification ui",
        "properties": {
          "action": {
            "description": "Action will always be `show_verification_ui`\nshow_verification_ui ContinueWithActionShowVerificationUIString",
            "enum": ["show_verification_ui"],
            "type": "string",
            "x-go-enum-desc": "show_verification_ui ContinueWithActionShowVerificationUIString"
          },
          "flow": {
            "$ref": "#/components/schemas/continueWithVerificationUiFlow"
          }
        },
        "required": ["action", "flow"],
        "type": "object"
      },
      "continueWithVerificationUiFlow": {
        "properties": {
          "id": {
            "description": "The ID of the verification flow",
            "format": "uuid",
            "type": "string"
          },
          "url": {
            "description": "The URL of the verification flow\n\nIf this value is set, redirect the user's browser to this URL. This value is typically unset for native clients / API flows.",
            "type": "string"
          },
          "verifiable_address": {
            "description": "The address that should be verified in this flow",
            "type": "string"
          }
        },
        "required": ["id", "verifiable_address"],
        "type": "object"
      },
      "identity": {
        "description": "An [identity](https://www.ory.sh/docs/kratos/concepts/identity-user-model) represents a (human) user in Ory.",
        "properties": {
          "created_at": {
            "description": "CreatedAt is a helper struct field for gobuffalo.pop.",
            "format": "date-time",
            "type": "string"
          },
          "credentials": {
            "additionalProperties": {
              "$ref": "#/components/schemas/identityCredentials"
            },
            "description": "Credentials represents all credentials that can be used for authenticating this identity.",
            "type": "object",
            "properties": {}
          },
          "id": {
            "description": "ID is the identity's unique identifier.\n\nThe Identity ID can not be changed and can not be chosen. This ensures future\ncompatibility and optimization for distributed stores such as CockroachDB.",
            "format": "uuid",
            "type": "string"
          },
          "metadata_admin": {
            "$ref": "#/components/schemas/nullJsonRawMessage"
          },
          "metadata_public": {
            "$ref": "#/components/schemas/nullJsonRawMessage"
          },
          "organization_id": {
            "$ref": "#/components/schemas/NullUUID"
          },
          "recovery_addresses": {
            "description": "RecoveryAddresses contains all the addresses that can be used to recover an identity.",
            "items": {
              "$ref": "#/components/schemas/recoveryIdentityAddress"
            },
            "type": "array",
            "x-omitempty": true
          },
          "schema_id": {
            "description": "SchemaID is the ID of the JSON Schema to be used for validating the identity's traits.",
            "type": "string"
          },
          "schema_url": {
            "description": "SchemaURL is the URL of the endpoint where the identity's traits schema can be fetched from.\n\nformat: url",
            "type": "string"
          },
          "state": {
            "description": "State is the identity's state.\n\nThis value has currently no effect.\nactive StateActive\ninactive StateInactive",
            "enum": ["active", "inactive"],
            "type": "string",
            "x-go-enum-desc": "active StateActive\ninactive StateInactive"
          },
          "state_changed_at": {
            "$ref": "#/components/schemas/nullTime"
          },
          "traits": {
            "$ref": "#/components/schemas/identityTraits"
          },
          "updated_at": {
            "description": "UpdatedAt is a helper struct field for gobuffalo.pop.",
            "format": "date-time",
            "type": "string"
          },
          "verifiable_addresses": {
            "description": "VerifiableAddresses contains all the addresses that can be verified by the user.",
            "items": {
              "$ref": "#/components/schemas/verifiableIdentityAddress"
            },
            "type": "array",
            "x-omitempty": true
          }
        },
        "required": ["id", "schema_id", "schema_url", "traits"],
        "title": "Identity represents an Ory Kratos identity",
        "type": "object"
      },
      "NullUUID": {
        "format": "uuid4",
        "type": "string",
        "nullable": true
      },
      "identityCredentials": {
        "description": "Credentials represents a specific credential type",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/JSONRawMessage"
          },
          "created_at": {
            "description": "CreatedAt is a helper struct field for gobuffalo.pop.",
            "format": "date-time",
            "type": "string"
          },
          "identifiers": {
            "description": "Identifiers represents a list of unique identifiers this credential type matches.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": {
            "description": "Type discriminates between different types of credentials.\npassword CredentialsTypePassword\noidc CredentialsTypeOIDC\ntotp CredentialsTypeTOTP\nlookup_secret CredentialsTypeLookup\nwebauthn CredentialsTypeWebAuthn\ncode CredentialsTypeCodeAuth\npasskey CredentialsTypePasskey\nprofile CredentialsTypeProfile\nlink_recovery CredentialsTypeRecoveryLink  CredentialsTypeRecoveryLink is a special credential type linked to the link strategy (recovery flow).  It is not used within the credentials object itself.\ncode_recovery CredentialsTypeRecoveryCode",
            "enum": [
              "password",
              "oidc",
              "totp",
              "lookup_secret",
              "webauthn",
              "code",
              "passkey",
              "profile",
              "link_recovery",
              "code_recovery"
            ],
            "type": "string",
            "x-go-enum-desc": "password CredentialsTypePassword\noidc CredentialsTypeOIDC\ntotp CredentialsTypeTOTP\nlookup_secret CredentialsTypeLookup\nwebauthn CredentialsTypeWebAuthn\ncode CredentialsTypeCodeAuth\npasskey CredentialsTypePasskey\nprofile CredentialsTypeProfile\nlink_recovery CredentialsTypeRecoveryLink  CredentialsTypeRecoveryLink is a special credential type linked to the link strategy (recovery flow).  It is not used within the credentials object itself.\ncode_recovery CredentialsTypeRecoveryCode"
          },
          "updated_at": {
            "description": "UpdatedAt is a helper struct field for gobuffalo.pop.",
            "format": "date-time",
            "type": "string"
          },
          "version": {
            "description": "Version refers to the version of the credential. Useful when changing the config schema.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "JSONRawMessage": {
        "title": "JSONRawMessage represents a json.RawMessage that works well with JSON, SQL, and Swagger.",
        "type": "object",
        "properties": {}
      },
      "identityTraits": {
        "type": "string"
      },
      "nullJsonRawMessage": {
        "description": "NullJSONRawMessage represents a json.RawMessage that works well with JSON, SQL, and Swagger and is NULLable-",
        "type": "null"
      },
      "nullTime": {
        "format": "date-time",
        "title": "NullTime implements sql.NullTime functionality.",
        "type": "string"
      },
      "recoveryIdentityAddress": {
        "properties": {
          "created_at": {
            "description": "CreatedAt is a helper struct field for gobuffalo.pop.",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "updated_at": {
            "description": "UpdatedAt is a helper struct field for gobuffalo.pop.",
            "format": "date-time",
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "via": {
            "$ref": "#/components/schemas/RecoveryAddressType"
          }
        },
        "required": ["id", "value", "via"],
        "type": "object"
      },
      "RecoveryAddressType": {
        "title": "RecoveryAddressType must not exceed 16 characters as that is the limitation in the SQL Schema.",
        "type": "string"
      },
      "verifiableIdentityAddress": {
        "description": "VerifiableAddress is an identity's verifiable address",
        "properties": {
          "created_at": {
            "description": "When this entry was created",
            "format": "date-time",
            "type": "string",
            "examples": ["2014-01-01T23:28:56.782Z"]
          },
          "id": {
            "description": "The ID",
            "format": "uuid",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/identityVerifiableAddressStatus"
          },
          "updated_at": {
            "description": "When this entry was last updated",
            "format": "date-time",
            "type": "string",
            "examples": ["2014-01-01T23:28:56.782Z"]
          },
          "value": {
            "description": "The address value\n\nexample foo@user.com",
            "type": "string"
          },
          "verified": {
            "description": "Indicates if the address has already been verified",
            "type": "boolean",
            "examples": [true]
          },
          "verified_at": {
            "$ref": "#/components/schemas/nullTime"
          },
          "via": {
            "description": "The delivery method",
            "enum": ["email", "sms"],
            "type": "string",
            "examples": ["email"]
          }
        },
        "required": ["value", "verified", "via", "status"],
        "type": "object"
      },
      "identityVerifiableAddressStatus": {
        "description": "VerifiableAddressStatus must not exceed 16 characters as that is the limitation in the SQL Schema",
        "type": "string"
      },
      "selfServiceFlowType": {
        "description": "The flow type can either be `api` or `browser`.",
        "title": "Type is the flow type.",
        "type": "string"
      },
      "uiContainer": {
        "description": "Container represents a HTML Form. The container can work with both HTTP Form and JSON requests",
        "properties": {
          "action": {
            "description": "Action should be used as the form action URL `<form action=\"{{ .Action }}\" method=\"post\">`.",
            "type": "string"
          },
          "messages": {
            "$ref": "#/components/schemas/uiTexts"
          },
          "method": {
            "description": "Method is the form method (e.g. POST)",
            "type": "string"
          },
          "nodes": {
            "$ref": "#/components/schemas/uiNodes"
          }
        },
        "required": ["action", "method", "nodes"],
        "type": "object"
      },
      "uiNodes": {
        "items": {
          "$ref": "#/components/schemas/uiNode"
        },
        "type": "array"
      },
      "uiNode": {
        "description": "Nodes are represented as HTML elements or their native UI equivalents. For example,\na node can be an `<img>` tag, or an `<input element>` but also `some plain text`.",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/uiNodeAttributes"
          },
          "group": {
            "description": "Group specifies which group (e.g. password authenticator) this node belongs to.\ndefault DefaultGroup\npassword PasswordGroup\noidc OpenIDConnectGroup\nprofile ProfileGroup\nlink LinkGroup\ncode CodeGroup\ntotp TOTPGroup\nlookup_secret LookupGroup\nwebauthn WebAuthnGroup\npasskey PasskeyGroup\nidentifier_first IdentifierFirstGroup",
            "enum": [
              "default",
              "password",
              "oidc",
              "profile",
              "link",
              "code",
              "totp",
              "lookup_secret",
              "webauthn",
              "passkey",
              "identifier_first"
            ],
            "type": "string",
            "x-go-enum-desc": "default DefaultGroup\npassword PasswordGroup\noidc OpenIDConnectGroup\nprofile ProfileGroup\nlink LinkGroup\ncode CodeGroup\ntotp TOTPGroup\nlookup_secret LookupGroup\nwebauthn WebAuthnGroup\npasskey PasskeyGroup\nidentifier_first IdentifierFirstGroup"
          },
          "messages": {
            "$ref": "#/components/schemas/uiTexts"
          },
          "meta": {
            "$ref": "#/components/schemas/uiNodeMeta"
          },
          "type": {
            "description": "The node's type\ntext Text\ninput Input\nimg Image\na Anchor\nscript Script",
            "enum": ["text", "input", "img", "a", "script"],
            "type": "string",
            "x-go-enum-desc": "text Text\ninput Input\nimg Image\na Anchor\nscript Script"
          }
        },
        "required": ["type", "group", "attributes", "messages", "meta"],
        "title": "Node represents a flow's nodes",
        "type": "object"
      },
      "uiNodeAttributes": {
        "discriminator": {
          "mapping": {
            "a": "#/components/schemas/uiNodeAnchorAttributes",
            "img": "#/components/schemas/uiNodeImageAttributes",
            "input": "#/components/schemas/uiNodeInputAttributes",
            "script": "#/components/schemas/uiNodeScriptAttributes",
            "text": "#/components/schemas/uiNodeTextAttributes"
          },
          "propertyName": "node_type"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/uiNodeInputAttributes"
          },
          {
            "$ref": "#/components/schemas/uiNodeTextAttributes"
          },
          {
            "$ref": "#/components/schemas/uiNodeImageAttributes"
          },
          {
            "$ref": "#/components/schemas/uiNodeAnchorAttributes"
          },
          {
            "$ref": "#/components/schemas/uiNodeScriptAttributes"
          }
        ],
        "title": "Attributes represents a list of attributes (e.g. `href=\"foo\"` for links)."
      },
      "uiNodeAnchorAttributes": {
        "properties": {
          "href": {
            "description": "The link's href (destination) URL.\n\nformat: uri",
            "type": "string"
          },
          "id": {
            "description": "A unique identifier",
            "type": "string"
          },
          "node_type": {
            "description": "NodeType represents this node's types. It is a mirror of `node.type` and\nis primarily used to allow compatibility with OpenAPI 3.0.  In this struct it technically always is \"a\".\ntext Text\ninput Input\nimg Image\na Anchor\nscript Script",
            "enum": ["text", "input", "img", "a", "script"],
            "type": "string",
            "x-go-enum-desc": "text Text\ninput Input\nimg Image\na Anchor\nscript Script"
          },
          "title": {
            "$ref": "#/components/schemas/uiText"
          }
        },
        "required": ["href", "title", "id", "node_type"],
        "title": "AnchorAttributes represents the attributes of an anchor node.",
        "type": "object"
      },
      "uiText": {
        "properties": {
          "context": {
            "description": "The message's context. Useful when customizing messages.",
            "type": "object",
            "properties": {}
          },
          "id": {
            "$ref": "#/components/schemas/ID"
          },
          "text": {
            "description": "The message text. Written in american english.",
            "type": "string"
          },
          "type": {
            "description": "The message type.\ninfo Info\nerror Error\nsuccess Success",
            "enum": ["info", "error", "success"],
            "type": "string",
            "x-go-enum-desc": "info Info\nerror Error\nsuccess Success"
          }
        },
        "required": ["id", "text", "type"],
        "type": "object"
      },
      "ID": {
        "format": "int64",
        "type": "integer"
      },
      "uiNodeImageAttributes": {
        "properties": {
          "height": {
            "description": "Height of the image",
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "A unique identifier",
            "type": "string"
          },
          "node_type": {
            "description": "NodeType represents this node's types. It is a mirror of `node.type` and\nis primarily used to allow compatibility with OpenAPI 3.0.  In this struct it technically always is \"img\".\ntext Text\ninput Input\nimg Image\na Anchor\nscript Script",
            "enum": ["text", "input", "img", "a", "script"],
            "type": "string",
            "x-go-enum-desc": "text Text\ninput Input\nimg Image\na Anchor\nscript Script"
          },
          "src": {
            "description": "The image's source URL.\n\nformat: uri",
            "type": "string"
          },
          "width": {
            "description": "Width of the image",
            "format": "int64",
            "type": "integer"
          }
        },
        "required": ["src", "id", "width", "height", "node_type"],
        "title": "ImageAttributes represents the attributes of an image node.",
        "type": "object"
      },
      "uiNodeInputAttributes": {
        "description": "InputAttributes represents the attributes of an input node",
        "properties": {
          "autocomplete": {
            "description": "The autocomplete attribute for the input.\nemail InputAttributeAutocompleteEmail\ntel InputAttributeAutocompleteTel\nurl InputAttributeAutocompleteUrl\ncurrent-password InputAttributeAutocompleteCurrentPassword\nnew-password InputAttributeAutocompleteNewPassword\none-time-code InputAttributeAutocompleteOneTimeCode",
            "enum": [
              "email",
              "tel",
              "url",
              "current-password",
              "new-password",
              "one-time-code"
            ],
            "type": "string",
            "x-go-enum-desc": "email InputAttributeAutocompleteEmail\ntel InputAttributeAutocompleteTel\nurl InputAttributeAutocompleteUrl\ncurrent-password InputAttributeAutocompleteCurrentPassword\nnew-password InputAttributeAutocompleteNewPassword\none-time-code InputAttributeAutocompleteOneTimeCode"
          },
          "disabled": {
            "description": "Sets the input's disabled field to true or false.",
            "type": "boolean"
          },
          "label": {
            "$ref": "#/components/schemas/uiText"
          },
          "maxlength": {
            "description": "MaxLength may contain the input's maximum length.",
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "description": "The input's element name.",
            "type": "string"
          },
          "node_type": {
            "description": "NodeType represents this node's types. It is a mirror of `node.type` and\nis primarily used to allow compatibility with OpenAPI 3.0.  In this struct it technically always is \"input\".\ntext Text\ninput Input\nimg Image\na Anchor\nscript Script",
            "enum": ["text", "input", "img", "a", "script"],
            "type": "string",
            "x-go-enum-desc": "text Text\ninput Input\nimg Image\na Anchor\nscript Script"
          },
          "onclick": {
            "description": "OnClick may contain javascript which should be executed on click. This is primarily\nused for WebAuthn.\n\nDeprecated: Using OnClick requires the use of eval() which is a security risk. Use OnClickTrigger instead.",
            "type": "string"
          },
          "onclickTrigger": {
            "description": "OnClickTrigger may contain a WebAuthn trigger which should be executed on click.\n\nThe trigger maps to a JavaScript function provided by Ory, which triggers actions such as PassKey registration or login.\noryWebAuthnRegistration WebAuthnTriggersWebAuthnRegistration\noryWebAuthnLogin WebAuthnTriggersWebAuthnLogin\noryPasskeyLogin WebAuthnTriggersPasskeyLogin\noryPasskeyLoginAutocompleteInit WebAuthnTriggersPasskeyLoginAutocompleteInit\noryPasskeyRegistration WebAuthnTriggersPasskeyRegistration\noryPasskeySettingsRegistration WebAuthnTriggersPasskeySettingsRegistration",
            "enum": [
              "oryWebAuthnRegistration",
              "oryWebAuthnLogin",
              "oryPasskeyLogin",
              "oryPasskeyLoginAutocompleteInit",
              "oryPasskeyRegistration",
              "oryPasskeySettingsRegistration"
            ],
            "type": "string",
            "x-go-enum-desc": "oryWebAuthnRegistration WebAuthnTriggersWebAuthnRegistration\noryWebAuthnLogin WebAuthnTriggersWebAuthnLogin\noryPasskeyLogin WebAuthnTriggersPasskeyLogin\noryPasskeyLoginAutocompleteInit WebAuthnTriggersPasskeyLoginAutocompleteInit\noryPasskeyRegistration WebAuthnTriggersPasskeyRegistration\noryPasskeySettingsRegistration WebAuthnTriggersPasskeySettingsRegistration"
          },
          "onload": {
            "description": "OnLoad may contain javascript which should be executed on load. This is primarily\nused for WebAuthn.\n\nDeprecated: Using OnLoad requires the use of eval() which is a security risk. Use OnLoadTrigger instead.",
            "type": "string"
          },
          "onloadTrigger": {
            "description": "OnLoadTrigger may contain a WebAuthn trigger which should be executed on load.\n\nThe trigger maps to a JavaScript function provided by Ory, which triggers actions such as PassKey registration or login.\noryWebAuthnRegistration WebAuthnTriggersWebAuthnRegistration\noryWebAuthnLogin WebAuthnTriggersWebAuthnLogin\noryPasskeyLogin WebAuthnTriggersPasskeyLogin\noryPasskeyLoginAutocompleteInit WebAuthnTriggersPasskeyLoginAutocompleteInit\noryPasskeyRegistration WebAuthnTriggersPasskeyRegistration\noryPasskeySettingsRegistration WebAuthnTriggersPasskeySettingsRegistration",
            "enum": [
              "oryWebAuthnRegistration",
              "oryWebAuthnLogin",
              "oryPasskeyLogin",
              "oryPasskeyLoginAutocompleteInit",
              "oryPasskeyRegistration",
              "oryPasskeySettingsRegistration"
            ],
            "type": "string",
            "x-go-enum-desc": "oryWebAuthnRegistration WebAuthnTriggersWebAuthnRegistration\noryWebAuthnLogin WebAuthnTriggersWebAuthnLogin\noryPasskeyLogin WebAuthnTriggersPasskeyLogin\noryPasskeyLoginAutocompleteInit WebAuthnTriggersPasskeyLoginAutocompleteInit\noryPasskeyRegistration WebAuthnTriggersPasskeyRegistration\noryPasskeySettingsRegistration WebAuthnTriggersPasskeySettingsRegistration"
          },
          "pattern": {
            "description": "The input's pattern.",
            "type": "string"
          },
          "required": {
            "description": "Mark this input field as required.",
            "type": "boolean"
          },
          "type": {
            "description": "The input's element type.\ntext InputAttributeTypeText\npassword InputAttributeTypePassword\nnumber InputAttributeTypeNumber\ncheckbox InputAttributeTypeCheckbox\nhidden InputAttributeTypeHidden\nemail InputAttributeTypeEmail\ntel InputAttributeTypeTel\nsubmit InputAttributeTypeSubmit\nbutton InputAttributeTypeButton\ndatetime-local InputAttributeTypeDateTimeLocal\ndate InputAttributeTypeDate\nurl InputAttributeTypeURI",
            "enum": [
              "text",
              "password",
              "number",
              "checkbox",
              "hidden",
              "email",
              "tel",
              "submit",
              "button",
              "datetime-local",
              "date",
              "url"
            ],
            "type": "string",
            "x-go-enum-desc": "text InputAttributeTypeText\npassword InputAttributeTypePassword\nnumber InputAttributeTypeNumber\ncheckbox InputAttributeTypeCheckbox\nhidden InputAttributeTypeHidden\nemail InputAttributeTypeEmail\ntel InputAttributeTypeTel\nsubmit InputAttributeTypeSubmit\nbutton InputAttributeTypeButton\ndatetime-local InputAttributeTypeDateTimeLocal\ndate InputAttributeTypeDate\nurl InputAttributeTypeURI"
          },
          "value": {
            "description": "The input's value.",
            "type": "null"
          }
        },
        "required": ["name", "type", "disabled", "node_type"],
        "type": "object"
      },
      "uiNodeScriptAttributes": {
        "properties": {
          "async": {
            "description": "The script async type",
            "type": "boolean"
          },
          "crossorigin": {
            "description": "The script cross origin policy",
            "type": "string"
          },
          "id": {
            "description": "A unique identifier",
            "type": "string"
          },
          "integrity": {
            "description": "The script's integrity hash",
            "type": "string"
          },
          "node_type": {
            "description": "NodeType represents this node's types. It is a mirror of `node.type` and\nis primarily used to allow compatibility with OpenAPI 3.0. In this struct it technically always is \"script\".\ntext Text\ninput Input\nimg Image\na Anchor\nscript Script",
            "enum": ["text", "input", "img", "a", "script"],
            "type": "string",
            "x-go-enum-desc": "text Text\ninput Input\nimg Image\na Anchor\nscript Script"
          },
          "nonce": {
            "description": "Nonce for CSP\n\nA nonce you may want to use to improve your Content Security Policy.\nYou do not have to use this value but if you want to improve your CSP\npolicies you may use it. You can also choose to use your own nonce value!",
            "type": "string"
          },
          "referrerpolicy": {
            "description": "The script referrer policy",
            "type": "string"
          },
          "src": {
            "description": "The script source",
            "type": "string"
          },
          "type": {
            "description": "The script MIME type",
            "type": "string"
          }
        },
        "required": [
          "src",
          "async",
          "referrerpolicy",
          "crossorigin",
          "integrity",
          "type",
          "id",
          "nonce",
          "node_type"
        ],
        "title": "ScriptAttributes represent script nodes which load javascript.",
        "type": "object"
      },
      "uiNodeTextAttributes": {
        "properties": {
          "id": {
            "description": "A unique identifier",
            "type": "string"
          },
          "node_type": {
            "description": "NodeType represents this node's types. It is a mirror of `node.type` and\nis primarily used to allow compatibility with OpenAPI 3.0.  In this struct it technically always is \"text\".\ntext Text\ninput Input\nimg Image\na Anchor\nscript Script",
            "enum": ["text", "input", "img", "a", "script"],
            "type": "string",
            "x-go-enum-desc": "text Text\ninput Input\nimg Image\na Anchor\nscript Script"
          },
          "text": {
            "$ref": "#/components/schemas/uiText"
          }
        },
        "required": ["text", "id", "node_type"],
        "title": "TextAttributes represents the attributes of a text node.",
        "type": "object"
      },
      "uiNodeMeta": {
        "description": "This might include a label and other information that can optionally\nbe used to render UIs.",
        "properties": {
          "label": {
            "$ref": "#/components/schemas/uiText"
          }
        },
        "title": "A Node's Meta Information",
        "type": "object"
      },
      "uiTexts": {
        "items": {
          "$ref": "#/components/schemas/uiText"
        },
        "type": "array"
      },
      "recoveryFlow": {
        "description": "This request is used when an identity wants to recover their account.\n\nWe recommend reading the [Account Recovery Documentation](../self-service/flows/password-reset-account-recovery)",
        "properties": {
          "active": {
            "description": "Active, if set, contains the recovery method that is being used. It is initially\nnot set.",
            "type": "string"
          },
          "continue_with": {
            "description": "Contains possible actions that could follow this flow",
            "items": {
              "$ref": "#/components/schemas/continueWith"
            },
            "type": "array"
          },
          "expires_at": {
            "description": "ExpiresAt is the time (UTC) when the request expires. If the user still wishes to update the setting,\na new request has to be initiated.",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "ID represents the request's unique ID. When performing the recovery flow, this\nrepresents the id in the recovery ui's query parameter: http://<selfservice.flows.recovery.ui_url>?request=<id>",
            "format": "uuid",
            "type": "string"
          },
          "issued_at": {
            "description": "IssuedAt is the time (UTC) when the request occurred.",
            "format": "date-time",
            "type": "string"
          },
          "request_url": {
            "description": "RequestURL is the initial URL that was requested from Ory Kratos. It can be used\nto forward information contained in the URL's path or query for example.",
            "type": "string"
          },
          "return_to": {
            "description": "ReturnTo contains the requested return_to URL.",
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "transient_payload": {
            "description": "TransientPayload is used to pass data from the recovery flow to hooks and email templates",
            "type": "object",
            "properties": {}
          },
          "type": {
            "$ref": "#/components/schemas/selfServiceFlowType"
          },
          "ui": {
            "$ref": "#/components/schemas/uiContainer"
          }
        },
        "required": [
          "id",
          "type",
          "expires_at",
          "issued_at",
          "request_url",
          "ui",
          "state"
        ],
        "title": "A Recovery Flow",
        "type": "object"
      },
      "logoutFlow": {
        "description": "Logout Flow",
        "properties": {
          "logout_token": {
            "description": "LogoutToken can be used to perform logout using AJAX.",
            "type": "string"
          },
          "logout_url": {
            "description": "LogoutURL can be opened in a browser to sign the user out.\n\nformat: uri",
            "type": "string"
          }
        },
        "required": ["logout_url", "logout_token"],
        "type": "object"
      },
      "verificationFlow": {
        "description": "Used to verify an out-of-band communication\nchannel such as an email address or a phone number.\n\nFor more information head over to: https://www.ory.sh/docs/kratos/self-service/flows/verify-email-account-activation",
        "properties": {
          "active": {
            "description": "Active, if set, contains the registration method that is being used. It is initially\nnot set.",
            "type": "string"
          },
          "expires_at": {
            "description": "ExpiresAt is the time (UTC) when the request expires. If the user still wishes to verify the address,\na new request has to be initiated.",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "ID represents the request's unique ID. When performing the verification flow, this\nrepresents the id in the verify ui's query parameter: http://<selfservice.flows.verification.ui_url>?request=<id>\n\ntype: string\nformat: uuid",
            "format": "uuid",
            "type": "string"
          },
          "issued_at": {
            "description": "IssuedAt is the time (UTC) when the request occurred.",
            "format": "date-time",
            "type": "string"
          },
          "request_url": {
            "description": "RequestURL is the initial URL that was requested from Ory Kratos. It can be used\nto forward information contained in the URL's path or query for example.",
            "type": "string"
          },
          "return_to": {
            "description": "ReturnTo contains the requested return_to URL.",
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "transient_payload": {
            "description": "TransientPayload is used to pass data from the verification flow to hooks and email templates",
            "type": "object",
            "properties": {}
          },
          "type": {
            "$ref": "#/components/schemas/selfServiceFlowType"
          },
          "ui": {
            "$ref": "#/components/schemas/uiContainer"
          }
        },
        "required": ["id", "type", "ui", "state"],
        "title": "A Verification Flow",
        "type": "object"
      },
      "flowError": {
        "properties": {
          "created_at": {
            "description": "CreatedAt is a helper struct field for gobuffalo.pop.",
            "format": "date-time",
            "type": "string"
          },
          "error": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "description": "ID of the error container.",
            "format": "uuid",
            "type": "string"
          },
          "updated_at": {
            "description": "UpdatedAt is a helper struct field for gobuffalo.pop.",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": ["id"],
        "type": "object"
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "servers": [],
  "security": []
}
